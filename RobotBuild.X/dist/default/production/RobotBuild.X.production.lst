

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 19 19:06:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    20                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
    81                           	dabs	1,0x7E,2
    82  0000                     
    83                           ; Version 2.05
    84                           ; Generated 20/12/2018 GMT
    85                           ; 
    86                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F18855 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  001C                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  008C                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  008E                     	;# 
   150  008F                     	;# 
   151  0090                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  0110                     	;# 
   172  0110                     	;# 
   173  0111                     	;# 
   174  0112                     	;# 
   175  0112                     	;# 
   176  0113                     	;# 
   177  0114                     	;# 
   178  0114                     	;# 
   179  0115                     	;# 
   180  0116                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0119                     	;# 
   184  0119                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011A                     	;# 
   188  011A                     	;# 
   189  011B                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011C                     	;# 
   195  011C                     	;# 
   196  011C                     	;# 
   197  011D                     	;# 
   198  011D                     	;# 
   199  011D                     	;# 
   200  011E                     	;# 
   201  011E                     	;# 
   202  011E                     	;# 
   203  011F                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  018E                     	;# 
   211  018F                     	;# 
   212  0190                     	;# 
   213  0191                     	;# 
   214  0192                     	;# 
   215  0196                     	;# 
   216  0197                     	;# 
   217  0198                     	;# 
   218  0199                     	;# 
   219  019A                     	;# 
   220  019B                     	;# 
   221  019C                     	;# 
   222  020C                     	;# 
   223  020C                     	;# 
   224  020D                     	;# 
   225  020E                     	;# 
   226  020F                     	;# 
   227  020F                     	;# 
   228  0210                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0214                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0216                     	;# 
   239  0216                     	;# 
   240  0217                     	;# 
   241  0217                     	;# 
   242  0218                     	;# 
   243  0218                     	;# 
   244  0219                     	;# 
   245  021A                     	;# 
   246  021B                     	;# 
   247  021B                     	;# 
   248  021C                     	;# 
   249  021C                     	;# 
   250  021D                     	;# 
   251  021D                     	;# 
   252  021E                     	;# 
   253  021F                     	;# 
   254  028C                     	;# 
   255  028C                     	;# 
   256  028D                     	;# 
   257  028D                     	;# 
   258  028E                     	;# 
   259  028F                     	;# 
   260  0290                     	;# 
   261  0290                     	;# 
   262  0291                     	;# 
   263  0292                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0293                     	;# 
   267  0294                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0296                     	;# 
   271  0297                     	;# 
   272  0298                     	;# 
   273  0298                     	;# 
   274  0299                     	;# 
   275  0299                     	;# 
   276  029A                     	;# 
   277  029B                     	;# 
   278  029C                     	;# 
   279  029C                     	;# 
   280  029D                     	;# 
   281  030C                     	;# 
   282  030C                     	;# 
   283  030D                     	;# 
   284  030E                     	;# 
   285  030F                     	;# 
   286  0310                     	;# 
   287  0310                     	;# 
   288  0311                     	;# 
   289  0312                     	;# 
   290  0313                     	;# 
   291  0314                     	;# 
   292  0314                     	;# 
   293  0315                     	;# 
   294  0316                     	;# 
   295  0317                     	;# 
   296  0318                     	;# 
   297  0318                     	;# 
   298  0319                     	;# 
   299  031A                     	;# 
   300  031B                     	;# 
   301  031C                     	;# 
   302  031C                     	;# 
   303  031D                     	;# 
   304  031E                     	;# 
   305  031F                     	;# 
   306  038C                     	;# 
   307  038C                     	;# 
   308  038D                     	;# 
   309  038E                     	;# 
   310  0390                     	;# 
   311  0390                     	;# 
   312  0391                     	;# 
   313  0392                     	;# 
   314  040C                     	;# 
   315  040D                     	;# 
   316  040E                     	;# 
   317  040F                     	;# 
   318  0410                     	;# 
   319  0411                     	;# 
   320  0416                     	;# 
   321  0416                     	;# 
   322  0417                     	;# 
   323  0418                     	;# 
   324  0418                     	;# 
   325  0419                     	;# 
   326  041A                     	;# 
   327  041A                     	;# 
   328  041B                     	;# 
   329  041C                     	;# 
   330  041C                     	;# 
   331  041D                     	;# 
   332  041E                     	;# 
   333  041F                     	;# 
   334  048C                     	;# 
   335  048C                     	;# 
   336  048D                     	;# 
   337  048E                     	;# 
   338  048F                     	;# 
   339  048F                     	;# 
   340  0490                     	;# 
   341  0491                     	;# 
   342  0492                     	;# 
   343  0492                     	;# 
   344  0493                     	;# 
   345  0494                     	;# 
   346  0495                     	;# 
   347  0495                     	;# 
   348  0496                     	;# 
   349  0497                     	;# 
   350  0498                     	;# 
   351  0499                     	;# 
   352  049A                     	;# 
   353  049B                     	;# 
   354  049C                     	;# 
   355  049D                     	;# 
   356  050C                     	;# 
   357  050C                     	;# 
   358  050D                     	;# 
   359  050E                     	;# 
   360  050F                     	;# 
   361  050F                     	;# 
   362  0510                     	;# 
   363  0511                     	;# 
   364  0512                     	;# 
   365  0512                     	;# 
   366  0513                     	;# 
   367  0514                     	;# 
   368  0515                     	;# 
   369  0515                     	;# 
   370  0516                     	;# 
   371  0517                     	;# 
   372  0518                     	;# 
   373  0519                     	;# 
   374  051A                     	;# 
   375  051B                     	;# 
   376  051C                     	;# 
   377  051D                     	;# 
   378  058C                     	;# 
   379  058C                     	;# 
   380  058D                     	;# 
   381  058E                     	;# 
   382  058F                     	;# 
   383  058F                     	;# 
   384  0590                     	;# 
   385  0591                     	;# 
   386  0592                     	;# 
   387  0593                     	;# 
   388  060C                     	;# 
   389  060D                     	;# 
   390  060E                     	;# 
   391  060F                     	;# 
   392  0610                     	;# 
   393  0611                     	;# 
   394  0612                     	;# 
   395  0613                     	;# 
   396  0614                     	;# 
   397  0616                     	;# 
   398  0617                     	;# 
   399  0618                     	;# 
   400  0619                     	;# 
   401  061A                     	;# 
   402  061B                     	;# 
   403  061C                     	;# 
   404  061D                     	;# 
   405  061E                     	;# 
   406  068C                     	;# 
   407  068D                     	;# 
   408  068E                     	;# 
   409  068F                     	;# 
   410  0690                     	;# 
   411  0691                     	;# 
   412  0692                     	;# 
   413  0693                     	;# 
   414  0694                     	;# 
   415  070C                     	;# 
   416  070D                     	;# 
   417  070E                     	;# 
   418  070F                     	;# 
   419  0710                     	;# 
   420  0711                     	;# 
   421  0712                     	;# 
   422  0713                     	;# 
   423  0714                     	;# 
   424  0716                     	;# 
   425  0717                     	;# 
   426  0718                     	;# 
   427  0719                     	;# 
   428  071A                     	;# 
   429  071B                     	;# 
   430  071C                     	;# 
   431  071D                     	;# 
   432  071E                     	;# 
   433  0796                     	;# 
   434  0797                     	;# 
   435  0798                     	;# 
   436  0799                     	;# 
   437  079A                     	;# 
   438  079B                     	;# 
   439  080C                     	;# 
   440  080D                     	;# 
   441  080E                     	;# 
   442  080F                     	;# 
   443  0810                     	;# 
   444  0811                     	;# 
   445  0812                     	;# 
   446  0813                     	;# 
   447  0814                     	;# 
   448  081A                     	;# 
   449  081B                     	;# 
   450  081C                     	;# 
   451  081D                     	;# 
   452  081E                     	;# 
   453  081F                     	;# 
   454  088C                     	;# 
   455  088D                     	;# 
   456  088E                     	;# 
   457  088F                     	;# 
   458  0890                     	;# 
   459  0891                     	;# 
   460  0892                     	;# 
   461  0893                     	;# 
   462  0895                     	;# 
   463  0896                     	;# 
   464  0897                     	;# 
   465  0898                     	;# 
   466  0899                     	;# 
   467  089A                     	;# 
   468  089B                     	;# 
   469  090C                     	;# 
   470  090E                     	;# 
   471  090F                     	;# 
   472  091F                     	;# 
   473  091F                     	;# 
   474  098F                     	;# 
   475  098F                     	;# 
   476  0990                     	;# 
   477  0991                     	;# 
   478  0992                     	;# 
   479  0993                     	;# 
   480  0994                     	;# 
   481  0995                     	;# 
   482  0996                     	;# 
   483  0997                     	;# 
   484  0E0F                     	;# 
   485  0E10                     	;# 
   486  0E11                     	;# 
   487  0E12                     	;# 
   488  0E13                     	;# 
   489  0E14                     	;# 
   490  0E15                     	;# 
   491  0E16                     	;# 
   492  0E17                     	;# 
   493  0E18                     	;# 
   494  0E19                     	;# 
   495  0E1A                     	;# 
   496  0E1B                     	;# 
   497  0E1C                     	;# 
   498  0E1D                     	;# 
   499  0E1E                     	;# 
   500  0E1F                     	;# 
   501  0E20                     	;# 
   502  0E21                     	;# 
   503  0E22                     	;# 
   504  0E23                     	;# 
   505  0E24                     	;# 
   506  0E25                     	;# 
   507  0E26                     	;# 
   508  0E27                     	;# 
   509  0E28                     	;# 
   510  0E29                     	;# 
   511  0E2A                     	;# 
   512  0E2B                     	;# 
   513  0E2C                     	;# 
   514  0E2D                     	;# 
   515  0E2E                     	;# 
   516  0E2F                     	;# 
   517  0E30                     	;# 
   518  0E31                     	;# 
   519  0E32                     	;# 
   520  0E33                     	;# 
   521  0E34                     	;# 
   522  0E35                     	;# 
   523  0E36                     	;# 
   524  0E37                     	;# 
   525  0E8F                     	;# 
   526  0E90                     	;# 
   527  0E91                     	;# 
   528  0E92                     	;# 
   529  0E93                     	;# 
   530  0E94                     	;# 
   531  0E95                     	;# 
   532  0E96                     	;# 
   533  0E97                     	;# 
   534  0E9C                     	;# 
   535  0E9D                     	;# 
   536  0E9E                     	;# 
   537  0EA1                     	;# 
   538  0EA2                     	;# 
   539  0EA3                     	;# 
   540  0EA4                     	;# 
   541  0EA5                     	;# 
   542  0EA9                     	;# 
   543  0EAA                     	;# 
   544  0EAB                     	;# 
   545  0EAC                     	;# 
   546  0EB1                     	;# 
   547  0EB2                     	;# 
   548  0EB3                     	;# 
   549  0EB8                     	;# 
   550  0EB9                     	;# 
   551  0EBA                     	;# 
   552  0EBB                     	;# 
   553  0EBC                     	;# 
   554  0EBD                     	;# 
   555  0EBE                     	;# 
   556  0EC3                     	;# 
   557  0EC5                     	;# 
   558  0EC6                     	;# 
   559  0EC7                     	;# 
   560  0EC8                     	;# 
   561  0EC9                     	;# 
   562  0ECA                     	;# 
   563  0ECB                     	;# 
   564  0ECC                     	;# 
   565  0F10                     	;# 
   566  0F11                     	;# 
   567  0F12                     	;# 
   568  0F13                     	;# 
   569  0F14                     	;# 
   570  0F15                     	;# 
   571  0F16                     	;# 
   572  0F17                     	;# 
   573  0F18                     	;# 
   574  0F19                     	;# 
   575  0F1A                     	;# 
   576  0F1B                     	;# 
   577  0F1C                     	;# 
   578  0F1D                     	;# 
   579  0F1E                     	;# 
   580  0F1F                     	;# 
   581  0F20                     	;# 
   582  0F21                     	;# 
   583  0F22                     	;# 
   584  0F23                     	;# 
   585  0F24                     	;# 
   586  0F25                     	;# 
   587  0F26                     	;# 
   588  0F27                     	;# 
   589  0F38                     	;# 
   590  0F39                     	;# 
   591  0F3A                     	;# 
   592  0F3B                     	;# 
   593  0F3C                     	;# 
   594  0F3D                     	;# 
   595  0F3E                     	;# 
   596  0F3F                     	;# 
   597  0F40                     	;# 
   598  0F41                     	;# 
   599  0F43                     	;# 
   600  0F44                     	;# 
   601  0F45                     	;# 
   602  0F46                     	;# 
   603  0F47                     	;# 
   604  0F48                     	;# 
   605  0F49                     	;# 
   606  0F4A                     	;# 
   607  0F4B                     	;# 
   608  0F4C                     	;# 
   609  0F4E                     	;# 
   610  0F4F                     	;# 
   611  0F50                     	;# 
   612  0F51                     	;# 
   613  0F52                     	;# 
   614  0F53                     	;# 
   615  0F54                     	;# 
   616  0F55                     	;# 
   617  0F56                     	;# 
   618  0F57                     	;# 
   619  0F65                     	;# 
   620  0F68                     	;# 
   621  0F69                     	;# 
   622  0F6A                     	;# 
   623  0F6B                     	;# 
   624  0FE4                     	;# 
   625  0FE5                     	;# 
   626  0FE6                     	;# 
   627  0FE7                     	;# 
   628  0FE8                     	;# 
   629  0FE9                     	;# 
   630  0FEA                     	;# 
   631  0FEB                     	;# 
   632  0FED                     	;# 
   633  0FEE                     	;# 
   634  0FEF                     	;# 
   635  0000                     	;# 
   636  0001                     	;# 
   637  0002                     	;# 
   638  0003                     	;# 
   639  0004                     	;# 
   640  0005                     	;# 
   641  0006                     	;# 
   642  0007                     	;# 
   643  0008                     	;# 
   644  0009                     	;# 
   645  000A                     	;# 
   646  000B                     	;# 
   647  000C                     	;# 
   648  000D                     	;# 
   649  000E                     	;# 
   650  0010                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0016                     	;# 
   655  0017                     	;# 
   656  0018                     	;# 
   657  001C                     	;# 
   658  001C                     	;# 
   659  001D                     	;# 
   660  001D                     	;# 
   661  001E                     	;# 
   662  001F                     	;# 
   663  008C                     	;# 
   664  008C                     	;# 
   665  008D                     	;# 
   666  008E                     	;# 
   667  008E                     	;# 
   668  008F                     	;# 
   669  0090                     	;# 
   670  0090                     	;# 
   671  0091                     	;# 
   672  0093                     	;# 
   673  0094                     	;# 
   674  0095                     	;# 
   675  0096                     	;# 
   676  0097                     	;# 
   677  0098                     	;# 
   678  0099                     	;# 
   679  009A                     	;# 
   680  009B                     	;# 
   681  009C                     	;# 
   682  009D                     	;# 
   683  009E                     	;# 
   684  010C                     	;# 
   685  010D                     	;# 
   686  010E                     	;# 
   687  010E                     	;# 
   688  010F                     	;# 
   689  0110                     	;# 
   690  0110                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0112                     	;# 
   694  0113                     	;# 
   695  0114                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0116                     	;# 
   700  0117                     	;# 
   701  0119                     	;# 
   702  0119                     	;# 
   703  0119                     	;# 
   704  011A                     	;# 
   705  011A                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011B                     	;# 
   709  011B                     	;# 
   710  011B                     	;# 
   711  011B                     	;# 
   712  011C                     	;# 
   713  011C                     	;# 
   714  011C                     	;# 
   715  011D                     	;# 
   716  011D                     	;# 
   717  011D                     	;# 
   718  011E                     	;# 
   719  011E                     	;# 
   720  011E                     	;# 
   721  011F                     	;# 
   722  011F                     	;# 
   723  011F                     	;# 
   724  011F                     	;# 
   725  011F                     	;# 
   726  018C                     	;# 
   727  018D                     	;# 
   728  018E                     	;# 
   729  018F                     	;# 
   730  0190                     	;# 
   731  0191                     	;# 
   732  0192                     	;# 
   733  0196                     	;# 
   734  0197                     	;# 
   735  0198                     	;# 
   736  0199                     	;# 
   737  019A                     	;# 
   738  019B                     	;# 
   739  019C                     	;# 
   740  020C                     	;# 
   741  020C                     	;# 
   742  020D                     	;# 
   743  020E                     	;# 
   744  020F                     	;# 
   745  020F                     	;# 
   746  0210                     	;# 
   747  0210                     	;# 
   748  0211                     	;# 
   749  0211                     	;# 
   750  0212                     	;# 
   751  0212                     	;# 
   752  0213                     	;# 
   753  0214                     	;# 
   754  0215                     	;# 
   755  0215                     	;# 
   756  0216                     	;# 
   757  0216                     	;# 
   758  0217                     	;# 
   759  0217                     	;# 
   760  0218                     	;# 
   761  0218                     	;# 
   762  0219                     	;# 
   763  021A                     	;# 
   764  021B                     	;# 
   765  021B                     	;# 
   766  021C                     	;# 
   767  021C                     	;# 
   768  021D                     	;# 
   769  021D                     	;# 
   770  021E                     	;# 
   771  021F                     	;# 
   772  028C                     	;# 
   773  028C                     	;# 
   774  028D                     	;# 
   775  028D                     	;# 
   776  028E                     	;# 
   777  028F                     	;# 
   778  0290                     	;# 
   779  0290                     	;# 
   780  0291                     	;# 
   781  0292                     	;# 
   782  0292                     	;# 
   783  0293                     	;# 
   784  0293                     	;# 
   785  0294                     	;# 
   786  0295                     	;# 
   787  0296                     	;# 
   788  0296                     	;# 
   789  0297                     	;# 
   790  0298                     	;# 
   791  0298                     	;# 
   792  0299                     	;# 
   793  0299                     	;# 
   794  029A                     	;# 
   795  029B                     	;# 
   796  029C                     	;# 
   797  029C                     	;# 
   798  029D                     	;# 
   799  030C                     	;# 
   800  030C                     	;# 
   801  030D                     	;# 
   802  030E                     	;# 
   803  030F                     	;# 
   804  0310                     	;# 
   805  0310                     	;# 
   806  0311                     	;# 
   807  0312                     	;# 
   808  0313                     	;# 
   809  0314                     	;# 
   810  0314                     	;# 
   811  0315                     	;# 
   812  0316                     	;# 
   813  0317                     	;# 
   814  0318                     	;# 
   815  0318                     	;# 
   816  0319                     	;# 
   817  031A                     	;# 
   818  031B                     	;# 
   819  031C                     	;# 
   820  031C                     	;# 
   821  031D                     	;# 
   822  031E                     	;# 
   823  031F                     	;# 
   824  038C                     	;# 
   825  038C                     	;# 
   826  038D                     	;# 
   827  038E                     	;# 
   828  0390                     	;# 
   829  0390                     	;# 
   830  0391                     	;# 
   831  0392                     	;# 
   832  040C                     	;# 
   833  040D                     	;# 
   834  040E                     	;# 
   835  040F                     	;# 
   836  0410                     	;# 
   837  0411                     	;# 
   838  0416                     	;# 
   839  0416                     	;# 
   840  0417                     	;# 
   841  0418                     	;# 
   842  0418                     	;# 
   843  0419                     	;# 
   844  041A                     	;# 
   845  041A                     	;# 
   846  041B                     	;# 
   847  041C                     	;# 
   848  041C                     	;# 
   849  041D                     	;# 
   850  041E                     	;# 
   851  041F                     	;# 
   852  048C                     	;# 
   853  048C                     	;# 
   854  048D                     	;# 
   855  048E                     	;# 
   856  048F                     	;# 
   857  048F                     	;# 
   858  0490                     	;# 
   859  0491                     	;# 
   860  0492                     	;# 
   861  0492                     	;# 
   862  0493                     	;# 
   863  0494                     	;# 
   864  0495                     	;# 
   865  0495                     	;# 
   866  0496                     	;# 
   867  0497                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049C                     	;# 
   873  049D                     	;# 
   874  050C                     	;# 
   875  050C                     	;# 
   876  050D                     	;# 
   877  050E                     	;# 
   878  050F                     	;# 
   879  050F                     	;# 
   880  0510                     	;# 
   881  0511                     	;# 
   882  0512                     	;# 
   883  0512                     	;# 
   884  0513                     	;# 
   885  0514                     	;# 
   886  0515                     	;# 
   887  0515                     	;# 
   888  0516                     	;# 
   889  0517                     	;# 
   890  0518                     	;# 
   891  0519                     	;# 
   892  051A                     	;# 
   893  051B                     	;# 
   894  051C                     	;# 
   895  051D                     	;# 
   896  058C                     	;# 
   897  058C                     	;# 
   898  058D                     	;# 
   899  058E                     	;# 
   900  058F                     	;# 
   901  058F                     	;# 
   902  0590                     	;# 
   903  0591                     	;# 
   904  0592                     	;# 
   905  0593                     	;# 
   906  060C                     	;# 
   907  060D                     	;# 
   908  060E                     	;# 
   909  060F                     	;# 
   910  0610                     	;# 
   911  0611                     	;# 
   912  0612                     	;# 
   913  0613                     	;# 
   914  0614                     	;# 
   915  0616                     	;# 
   916  0617                     	;# 
   917  0618                     	;# 
   918  0619                     	;# 
   919  061A                     	;# 
   920  061B                     	;# 
   921  061C                     	;# 
   922  061D                     	;# 
   923  061E                     	;# 
   924  068C                     	;# 
   925  068D                     	;# 
   926  068E                     	;# 
   927  068F                     	;# 
   928  0690                     	;# 
   929  0691                     	;# 
   930  0692                     	;# 
   931  0693                     	;# 
   932  0694                     	;# 
   933  070C                     	;# 
   934  070D                     	;# 
   935  070E                     	;# 
   936  070F                     	;# 
   937  0710                     	;# 
   938  0711                     	;# 
   939  0712                     	;# 
   940  0713                     	;# 
   941  0714                     	;# 
   942  0716                     	;# 
   943  0717                     	;# 
   944  0718                     	;# 
   945  0719                     	;# 
   946  071A                     	;# 
   947  071B                     	;# 
   948  071C                     	;# 
   949  071D                     	;# 
   950  071E                     	;# 
   951  0796                     	;# 
   952  0797                     	;# 
   953  0798                     	;# 
   954  0799                     	;# 
   955  079A                     	;# 
   956  079B                     	;# 
   957  080C                     	;# 
   958  080D                     	;# 
   959  080E                     	;# 
   960  080F                     	;# 
   961  0810                     	;# 
   962  0811                     	;# 
   963  0812                     	;# 
   964  0813                     	;# 
   965  0814                     	;# 
   966  081A                     	;# 
   967  081B                     	;# 
   968  081C                     	;# 
   969  081D                     	;# 
   970  081E                     	;# 
   971  081F                     	;# 
   972  088C                     	;# 
   973  088D                     	;# 
   974  088E                     	;# 
   975  088F                     	;# 
   976  0890                     	;# 
   977  0891                     	;# 
   978  0892                     	;# 
   979  0893                     	;# 
   980  0895                     	;# 
   981  0896                     	;# 
   982  0897                     	;# 
   983  0898                     	;# 
   984  0899                     	;# 
   985  089A                     	;# 
   986  089B                     	;# 
   987  090C                     	;# 
   988  090E                     	;# 
   989  090F                     	;# 
   990  091F                     	;# 
   991  091F                     	;# 
   992  098F                     	;# 
   993  098F                     	;# 
   994  0990                     	;# 
   995  0991                     	;# 
   996  0992                     	;# 
   997  0993                     	;# 
   998  0994                     	;# 
   999  0995                     	;# 
  1000  0996                     	;# 
  1001  0997                     	;# 
  1002  0E0F                     	;# 
  1003  0E10                     	;# 
  1004  0E11                     	;# 
  1005  0E12                     	;# 
  1006  0E13                     	;# 
  1007  0E14                     	;# 
  1008  0E15                     	;# 
  1009  0E16                     	;# 
  1010  0E17                     	;# 
  1011  0E18                     	;# 
  1012  0E19                     	;# 
  1013  0E1A                     	;# 
  1014  0E1B                     	;# 
  1015  0E1C                     	;# 
  1016  0E1D                     	;# 
  1017  0E1E                     	;# 
  1018  0E1F                     	;# 
  1019  0E20                     	;# 
  1020  0E21                     	;# 
  1021  0E22                     	;# 
  1022  0E23                     	;# 
  1023  0E24                     	;# 
  1024  0E25                     	;# 
  1025  0E26                     	;# 
  1026  0E27                     	;# 
  1027  0E28                     	;# 
  1028  0E29                     	;# 
  1029  0E2A                     	;# 
  1030  0E2B                     	;# 
  1031  0E2C                     	;# 
  1032  0E2D                     	;# 
  1033  0E2E                     	;# 
  1034  0E2F                     	;# 
  1035  0E30                     	;# 
  1036  0E31                     	;# 
  1037  0E32                     	;# 
  1038  0E33                     	;# 
  1039  0E34                     	;# 
  1040  0E35                     	;# 
  1041  0E36                     	;# 
  1042  0E37                     	;# 
  1043  0E8F                     	;# 
  1044  0E90                     	;# 
  1045  0E91                     	;# 
  1046  0E92                     	;# 
  1047  0E93                     	;# 
  1048  0E94                     	;# 
  1049  0E95                     	;# 
  1050  0E96                     	;# 
  1051  0E97                     	;# 
  1052  0E9C                     	;# 
  1053  0E9D                     	;# 
  1054  0E9E                     	;# 
  1055  0EA1                     	;# 
  1056  0EA2                     	;# 
  1057  0EA3                     	;# 
  1058  0EA4                     	;# 
  1059  0EA5                     	;# 
  1060  0EA9                     	;# 
  1061  0EAA                     	;# 
  1062  0EAB                     	;# 
  1063  0EAC                     	;# 
  1064  0EB1                     	;# 
  1065  0EB2                     	;# 
  1066  0EB3                     	;# 
  1067  0EB8                     	;# 
  1068  0EB9                     	;# 
  1069  0EBA                     	;# 
  1070  0EBB                     	;# 
  1071  0EBC                     	;# 
  1072  0EBD                     	;# 
  1073  0EBE                     	;# 
  1074  0EC3                     	;# 
  1075  0EC5                     	;# 
  1076  0EC6                     	;# 
  1077  0EC7                     	;# 
  1078  0EC8                     	;# 
  1079  0EC9                     	;# 
  1080  0ECA                     	;# 
  1081  0ECB                     	;# 
  1082  0ECC                     	;# 
  1083  0F10                     	;# 
  1084  0F11                     	;# 
  1085  0F12                     	;# 
  1086  0F13                     	;# 
  1087  0F14                     	;# 
  1088  0F15                     	;# 
  1089  0F16                     	;# 
  1090  0F17                     	;# 
  1091  0F18                     	;# 
  1092  0F19                     	;# 
  1093  0F1A                     	;# 
  1094  0F1B                     	;# 
  1095  0F1C                     	;# 
  1096  0F1D                     	;# 
  1097  0F1E                     	;# 
  1098  0F1F                     	;# 
  1099  0F20                     	;# 
  1100  0F21                     	;# 
  1101  0F22                     	;# 
  1102  0F23                     	;# 
  1103  0F24                     	;# 
  1104  0F25                     	;# 
  1105  0F26                     	;# 
  1106  0F27                     	;# 
  1107  0F38                     	;# 
  1108  0F39                     	;# 
  1109  0F3A                     	;# 
  1110  0F3B                     	;# 
  1111  0F3C                     	;# 
  1112  0F3D                     	;# 
  1113  0F3E                     	;# 
  1114  0F3F                     	;# 
  1115  0F40                     	;# 
  1116  0F41                     	;# 
  1117  0F43                     	;# 
  1118  0F44                     	;# 
  1119  0F45                     	;# 
  1120  0F46                     	;# 
  1121  0F47                     	;# 
  1122  0F48                     	;# 
  1123  0F49                     	;# 
  1124  0F4A                     	;# 
  1125  0F4B                     	;# 
  1126  0F4C                     	;# 
  1127  0F4E                     	;# 
  1128  0F4F                     	;# 
  1129  0F50                     	;# 
  1130  0F51                     	;# 
  1131  0F52                     	;# 
  1132  0F53                     	;# 
  1133  0F54                     	;# 
  1134  0F55                     	;# 
  1135  0F56                     	;# 
  1136  0F57                     	;# 
  1137  0F65                     	;# 
  1138  0F68                     	;# 
  1139  0F69                     	;# 
  1140  0F6A                     	;# 
  1141  0F6B                     	;# 
  1142  0FE4                     	;# 
  1143  0FE5                     	;# 
  1144  0FE6                     	;# 
  1145  0FE7                     	;# 
  1146  0FE8                     	;# 
  1147  0FE9                     	;# 
  1148  0FEA                     	;# 
  1149  0FEB                     	;# 
  1150  0FED                     	;# 
  1151  0FEE                     	;# 
  1152  0FEF                     	;# 
  1153  0000                     	;# 
  1154  0001                     	;# 
  1155  0002                     	;# 
  1156  0003                     	;# 
  1157  0004                     	;# 
  1158  0005                     	;# 
  1159  0006                     	;# 
  1160  0007                     	;# 
  1161  0008                     	;# 
  1162  0009                     	;# 
  1163  000A                     	;# 
  1164  000B                     	;# 
  1165  000C                     	;# 
  1166  000D                     	;# 
  1167  000E                     	;# 
  1168  0010                     	;# 
  1169  0011                     	;# 
  1170  0012                     	;# 
  1171  0013                     	;# 
  1172  0016                     	;# 
  1173  0017                     	;# 
  1174  0018                     	;# 
  1175  001C                     	;# 
  1176  001C                     	;# 
  1177  001D                     	;# 
  1178  001D                     	;# 
  1179  001E                     	;# 
  1180  001F                     	;# 
  1181  008C                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  008E                     	;# 
  1186  008F                     	;# 
  1187  0090                     	;# 
  1188  0090                     	;# 
  1189  0091                     	;# 
  1190  0093                     	;# 
  1191  0094                     	;# 
  1192  0095                     	;# 
  1193  0096                     	;# 
  1194  0097                     	;# 
  1195  0098                     	;# 
  1196  0099                     	;# 
  1197  009A                     	;# 
  1198  009B                     	;# 
  1199  009C                     	;# 
  1200  009D                     	;# 
  1201  009E                     	;# 
  1202  010C                     	;# 
  1203  010D                     	;# 
  1204  010E                     	;# 
  1205  010E                     	;# 
  1206  010F                     	;# 
  1207  0110                     	;# 
  1208  0110                     	;# 
  1209  0111                     	;# 
  1210  0112                     	;# 
  1211  0112                     	;# 
  1212  0113                     	;# 
  1213  0114                     	;# 
  1214  0114                     	;# 
  1215  0115                     	;# 
  1216  0116                     	;# 
  1217  0116                     	;# 
  1218  0117                     	;# 
  1219  0119                     	;# 
  1220  0119                     	;# 
  1221  0119                     	;# 
  1222  011A                     	;# 
  1223  011A                     	;# 
  1224  011A                     	;# 
  1225  011B                     	;# 
  1226  011B                     	;# 
  1227  011B                     	;# 
  1228  011B                     	;# 
  1229  011B                     	;# 
  1230  011C                     	;# 
  1231  011C                     	;# 
  1232  011C                     	;# 
  1233  011D                     	;# 
  1234  011D                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  011E                     	;# 
  1238  011E                     	;# 
  1239  011F                     	;# 
  1240  011F                     	;# 
  1241  011F                     	;# 
  1242  011F                     	;# 
  1243  011F                     	;# 
  1244  018C                     	;# 
  1245  018D                     	;# 
  1246  018E                     	;# 
  1247  018F                     	;# 
  1248  0190                     	;# 
  1249  0191                     	;# 
  1250  0192                     	;# 
  1251  0196                     	;# 
  1252  0197                     	;# 
  1253  0198                     	;# 
  1254  0199                     	;# 
  1255  019A                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  020C                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  020E                     	;# 
  1262  020F                     	;# 
  1263  020F                     	;# 
  1264  0210                     	;# 
  1265  0210                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0214                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0216                     	;# 
  1275  0216                     	;# 
  1276  0217                     	;# 
  1277  0217                     	;# 
  1278  0218                     	;# 
  1279  0218                     	;# 
  1280  0219                     	;# 
  1281  021A                     	;# 
  1282  021B                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021C                     	;# 
  1286  021D                     	;# 
  1287  021D                     	;# 
  1288  021E                     	;# 
  1289  021F                     	;# 
  1290  028C                     	;# 
  1291  028C                     	;# 
  1292  028D                     	;# 
  1293  028D                     	;# 
  1294  028E                     	;# 
  1295  028F                     	;# 
  1296  0290                     	;# 
  1297  0290                     	;# 
  1298  0291                     	;# 
  1299  0292                     	;# 
  1300  0292                     	;# 
  1301  0293                     	;# 
  1302  0293                     	;# 
  1303  0294                     	;# 
  1304  0295                     	;# 
  1305  0296                     	;# 
  1306  0296                     	;# 
  1307  0297                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  0299                     	;# 
  1312  029A                     	;# 
  1313  029B                     	;# 
  1314  029C                     	;# 
  1315  029C                     	;# 
  1316  029D                     	;# 
  1317  030C                     	;# 
  1318  030C                     	;# 
  1319  030D                     	;# 
  1320  030E                     	;# 
  1321  030F                     	;# 
  1322  0310                     	;# 
  1323  0310                     	;# 
  1324  0311                     	;# 
  1325  0312                     	;# 
  1326  0313                     	;# 
  1327  0314                     	;# 
  1328  0314                     	;# 
  1329  0315                     	;# 
  1330  0316                     	;# 
  1331  0317                     	;# 
  1332  0318                     	;# 
  1333  0318                     	;# 
  1334  0319                     	;# 
  1335  031A                     	;# 
  1336  031B                     	;# 
  1337  031C                     	;# 
  1338  031C                     	;# 
  1339  031D                     	;# 
  1340  031E                     	;# 
  1341  031F                     	;# 
  1342  038C                     	;# 
  1343  038C                     	;# 
  1344  038D                     	;# 
  1345  038E                     	;# 
  1346  0390                     	;# 
  1347  0390                     	;# 
  1348  0391                     	;# 
  1349  0392                     	;# 
  1350  040C                     	;# 
  1351  040D                     	;# 
  1352  040E                     	;# 
  1353  040F                     	;# 
  1354  0410                     	;# 
  1355  0411                     	;# 
  1356  0416                     	;# 
  1357  0416                     	;# 
  1358  0417                     	;# 
  1359  0418                     	;# 
  1360  0418                     	;# 
  1361  0419                     	;# 
  1362  041A                     	;# 
  1363  041A                     	;# 
  1364  041B                     	;# 
  1365  041C                     	;# 
  1366  041C                     	;# 
  1367  041D                     	;# 
  1368  041E                     	;# 
  1369  041F                     	;# 
  1370  048C                     	;# 
  1371  048C                     	;# 
  1372  048D                     	;# 
  1373  048E                     	;# 
  1374  048F                     	;# 
  1375  048F                     	;# 
  1376  0490                     	;# 
  1377  0491                     	;# 
  1378  0492                     	;# 
  1379  0492                     	;# 
  1380  0493                     	;# 
  1381  0494                     	;# 
  1382  0495                     	;# 
  1383  0495                     	;# 
  1384  0496                     	;# 
  1385  0497                     	;# 
  1386  0498                     	;# 
  1387  0499                     	;# 
  1388  049A                     	;# 
  1389  049B                     	;# 
  1390  049C                     	;# 
  1391  049D                     	;# 
  1392  050C                     	;# 
  1393  050C                     	;# 
  1394  050D                     	;# 
  1395  050E                     	;# 
  1396  050F                     	;# 
  1397  050F                     	;# 
  1398  0510                     	;# 
  1399  0511                     	;# 
  1400  0512                     	;# 
  1401  0512                     	;# 
  1402  0513                     	;# 
  1403  0514                     	;# 
  1404  0515                     	;# 
  1405  0515                     	;# 
  1406  0516                     	;# 
  1407  0517                     	;# 
  1408  0518                     	;# 
  1409  0519                     	;# 
  1410  051A                     	;# 
  1411  051B                     	;# 
  1412  051C                     	;# 
  1413  051D                     	;# 
  1414  058C                     	;# 
  1415  058C                     	;# 
  1416  058D                     	;# 
  1417  058E                     	;# 
  1418  058F                     	;# 
  1419  058F                     	;# 
  1420  0590                     	;# 
  1421  0591                     	;# 
  1422  0592                     	;# 
  1423  0593                     	;# 
  1424  060C                     	;# 
  1425  060D                     	;# 
  1426  060E                     	;# 
  1427  060F                     	;# 
  1428  0610                     	;# 
  1429  0611                     	;# 
  1430  0612                     	;# 
  1431  0613                     	;# 
  1432  0614                     	;# 
  1433  0616                     	;# 
  1434  0617                     	;# 
  1435  0618                     	;# 
  1436  0619                     	;# 
  1437  061A                     	;# 
  1438  061B                     	;# 
  1439  061C                     	;# 
  1440  061D                     	;# 
  1441  061E                     	;# 
  1442  068C                     	;# 
  1443  068D                     	;# 
  1444  068E                     	;# 
  1445  068F                     	;# 
  1446  0690                     	;# 
  1447  0691                     	;# 
  1448  0692                     	;# 
  1449  0693                     	;# 
  1450  0694                     	;# 
  1451  070C                     	;# 
  1452  070D                     	;# 
  1453  070E                     	;# 
  1454  070F                     	;# 
  1455  0710                     	;# 
  1456  0711                     	;# 
  1457  0712                     	;# 
  1458  0713                     	;# 
  1459  0714                     	;# 
  1460  0716                     	;# 
  1461  0717                     	;# 
  1462  0718                     	;# 
  1463  0719                     	;# 
  1464  071A                     	;# 
  1465  071B                     	;# 
  1466  071C                     	;# 
  1467  071D                     	;# 
  1468  071E                     	;# 
  1469  0796                     	;# 
  1470  0797                     	;# 
  1471  0798                     	;# 
  1472  0799                     	;# 
  1473  079A                     	;# 
  1474  079B                     	;# 
  1475  080C                     	;# 
  1476  080D                     	;# 
  1477  080E                     	;# 
  1478  080F                     	;# 
  1479  0810                     	;# 
  1480  0811                     	;# 
  1481  0812                     	;# 
  1482  0813                     	;# 
  1483  0814                     	;# 
  1484  081A                     	;# 
  1485  081B                     	;# 
  1486  081C                     	;# 
  1487  081D                     	;# 
  1488  081E                     	;# 
  1489  081F                     	;# 
  1490  088C                     	;# 
  1491  088D                     	;# 
  1492  088E                     	;# 
  1493  088F                     	;# 
  1494  0890                     	;# 
  1495  0891                     	;# 
  1496  0892                     	;# 
  1497  0893                     	;# 
  1498  0895                     	;# 
  1499  0896                     	;# 
  1500  0897                     	;# 
  1501  0898                     	;# 
  1502  0899                     	;# 
  1503  089A                     	;# 
  1504  089B                     	;# 
  1505  090C                     	;# 
  1506  090E                     	;# 
  1507  090F                     	;# 
  1508  091F                     	;# 
  1509  091F                     	;# 
  1510  098F                     	;# 
  1511  098F                     	;# 
  1512  0990                     	;# 
  1513  0991                     	;# 
  1514  0992                     	;# 
  1515  0993                     	;# 
  1516  0994                     	;# 
  1517  0995                     	;# 
  1518  0996                     	;# 
  1519  0997                     	;# 
  1520  0E0F                     	;# 
  1521  0E10                     	;# 
  1522  0E11                     	;# 
  1523  0E12                     	;# 
  1524  0E13                     	;# 
  1525  0E14                     	;# 
  1526  0E15                     	;# 
  1527  0E16                     	;# 
  1528  0E17                     	;# 
  1529  0E18                     	;# 
  1530  0E19                     	;# 
  1531  0E1A                     	;# 
  1532  0E1B                     	;# 
  1533  0E1C                     	;# 
  1534  0E1D                     	;# 
  1535  0E1E                     	;# 
  1536  0E1F                     	;# 
  1537  0E20                     	;# 
  1538  0E21                     	;# 
  1539  0E22                     	;# 
  1540  0E23                     	;# 
  1541  0E24                     	;# 
  1542  0E25                     	;# 
  1543  0E26                     	;# 
  1544  0E27                     	;# 
  1545  0E28                     	;# 
  1546  0E29                     	;# 
  1547  0E2A                     	;# 
  1548  0E2B                     	;# 
  1549  0E2C                     	;# 
  1550  0E2D                     	;# 
  1551  0E2E                     	;# 
  1552  0E2F                     	;# 
  1553  0E30                     	;# 
  1554  0E31                     	;# 
  1555  0E32                     	;# 
  1556  0E33                     	;# 
  1557  0E34                     	;# 
  1558  0E35                     	;# 
  1559  0E36                     	;# 
  1560  0E37                     	;# 
  1561  0E8F                     	;# 
  1562  0E90                     	;# 
  1563  0E91                     	;# 
  1564  0E92                     	;# 
  1565  0E93                     	;# 
  1566  0E94                     	;# 
  1567  0E95                     	;# 
  1568  0E96                     	;# 
  1569  0E97                     	;# 
  1570  0E9C                     	;# 
  1571  0E9D                     	;# 
  1572  0E9E                     	;# 
  1573  0EA1                     	;# 
  1574  0EA2                     	;# 
  1575  0EA3                     	;# 
  1576  0EA4                     	;# 
  1577  0EA5                     	;# 
  1578  0EA9                     	;# 
  1579  0EAA                     	;# 
  1580  0EAB                     	;# 
  1581  0EAC                     	;# 
  1582  0EB1                     	;# 
  1583  0EB2                     	;# 
  1584  0EB3                     	;# 
  1585  0EB8                     	;# 
  1586  0EB9                     	;# 
  1587  0EBA                     	;# 
  1588  0EBB                     	;# 
  1589  0EBC                     	;# 
  1590  0EBD                     	;# 
  1591  0EBE                     	;# 
  1592  0EC3                     	;# 
  1593  0EC5                     	;# 
  1594  0EC6                     	;# 
  1595  0EC7                     	;# 
  1596  0EC8                     	;# 
  1597  0EC9                     	;# 
  1598  0ECA                     	;# 
  1599  0ECB                     	;# 
  1600  0ECC                     	;# 
  1601  0F10                     	;# 
  1602  0F11                     	;# 
  1603  0F12                     	;# 
  1604  0F13                     	;# 
  1605  0F14                     	;# 
  1606  0F15                     	;# 
  1607  0F16                     	;# 
  1608  0F17                     	;# 
  1609  0F18                     	;# 
  1610  0F19                     	;# 
  1611  0F1A                     	;# 
  1612  0F1B                     	;# 
  1613  0F1C                     	;# 
  1614  0F1D                     	;# 
  1615  0F1E                     	;# 
  1616  0F1F                     	;# 
  1617  0F20                     	;# 
  1618  0F21                     	;# 
  1619  0F22                     	;# 
  1620  0F23                     	;# 
  1621  0F24                     	;# 
  1622  0F25                     	;# 
  1623  0F26                     	;# 
  1624  0F27                     	;# 
  1625  0F38                     	;# 
  1626  0F39                     	;# 
  1627  0F3A                     	;# 
  1628  0F3B                     	;# 
  1629  0F3C                     	;# 
  1630  0F3D                     	;# 
  1631  0F3E                     	;# 
  1632  0F3F                     	;# 
  1633  0F40                     	;# 
  1634  0F41                     	;# 
  1635  0F43                     	;# 
  1636  0F44                     	;# 
  1637  0F45                     	;# 
  1638  0F46                     	;# 
  1639  0F47                     	;# 
  1640  0F48                     	;# 
  1641  0F49                     	;# 
  1642  0F4A                     	;# 
  1643  0F4B                     	;# 
  1644  0F4C                     	;# 
  1645  0F4E                     	;# 
  1646  0F4F                     	;# 
  1647  0F50                     	;# 
  1648  0F51                     	;# 
  1649  0F52                     	;# 
  1650  0F53                     	;# 
  1651  0F54                     	;# 
  1652  0F55                     	;# 
  1653  0F56                     	;# 
  1654  0F57                     	;# 
  1655  0F65                     	;# 
  1656  0F68                     	;# 
  1657  0F69                     	;# 
  1658  0F6A                     	;# 
  1659  0F6B                     	;# 
  1660  0FE4                     	;# 
  1661  0FE5                     	;# 
  1662  0FE6                     	;# 
  1663  0FE7                     	;# 
  1664  0FE8                     	;# 
  1665  0FE9                     	;# 
  1666  0FEA                     	;# 
  1667  0FEB                     	;# 
  1668  0FED                     	;# 
  1669  0FEE                     	;# 
  1670  0FEF                     	;# 
  1671  0000                     	;# 
  1672  0001                     	;# 
  1673  0002                     	;# 
  1674  0003                     	;# 
  1675  0004                     	;# 
  1676  0005                     	;# 
  1677  0006                     	;# 
  1678  0007                     	;# 
  1679  0008                     	;# 
  1680  0009                     	;# 
  1681  000A                     	;# 
  1682  000B                     	;# 
  1683  000C                     	;# 
  1684  000D                     	;# 
  1685  000E                     	;# 
  1686  0010                     	;# 
  1687  0011                     	;# 
  1688  0012                     	;# 
  1689  0013                     	;# 
  1690  0016                     	;# 
  1691  0017                     	;# 
  1692  0018                     	;# 
  1693  001C                     	;# 
  1694  001C                     	;# 
  1695  001D                     	;# 
  1696  001D                     	;# 
  1697  001E                     	;# 
  1698  001F                     	;# 
  1699  008C                     	;# 
  1700  008C                     	;# 
  1701  008D                     	;# 
  1702  008E                     	;# 
  1703  008E                     	;# 
  1704  008F                     	;# 
  1705  0090                     	;# 
  1706  0090                     	;# 
  1707  0091                     	;# 
  1708  0093                     	;# 
  1709  0094                     	;# 
  1710  0095                     	;# 
  1711  0096                     	;# 
  1712  0097                     	;# 
  1713  0098                     	;# 
  1714  0099                     	;# 
  1715  009A                     	;# 
  1716  009B                     	;# 
  1717  009C                     	;# 
  1718  009D                     	;# 
  1719  009E                     	;# 
  1720  010C                     	;# 
  1721  010D                     	;# 
  1722  010E                     	;# 
  1723  010E                     	;# 
  1724  010F                     	;# 
  1725  0110                     	;# 
  1726  0110                     	;# 
  1727  0111                     	;# 
  1728  0112                     	;# 
  1729  0112                     	;# 
  1730  0113                     	;# 
  1731  0114                     	;# 
  1732  0114                     	;# 
  1733  0115                     	;# 
  1734  0116                     	;# 
  1735  0116                     	;# 
  1736  0117                     	;# 
  1737  0119                     	;# 
  1738  0119                     	;# 
  1739  0119                     	;# 
  1740  011A                     	;# 
  1741  011A                     	;# 
  1742  011A                     	;# 
  1743  011B                     	;# 
  1744  011B                     	;# 
  1745  011B                     	;# 
  1746  011B                     	;# 
  1747  011B                     	;# 
  1748  011C                     	;# 
  1749  011C                     	;# 
  1750  011C                     	;# 
  1751  011D                     	;# 
  1752  011D                     	;# 
  1753  011D                     	;# 
  1754  011E                     	;# 
  1755  011E                     	;# 
  1756  011E                     	;# 
  1757  011F                     	;# 
  1758  011F                     	;# 
  1759  011F                     	;# 
  1760  011F                     	;# 
  1761  011F                     	;# 
  1762  018C                     	;# 
  1763  018D                     	;# 
  1764  018E                     	;# 
  1765  018F                     	;# 
  1766  0190                     	;# 
  1767  0191                     	;# 
  1768  0192                     	;# 
  1769  0196                     	;# 
  1770  0197                     	;# 
  1771  0198                     	;# 
  1772  0199                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019C                     	;# 
  1776  020C                     	;# 
  1777  020C                     	;# 
  1778  020D                     	;# 
  1779  020E                     	;# 
  1780  020F                     	;# 
  1781  020F                     	;# 
  1782  0210                     	;# 
  1783  0210                     	;# 
  1784  0211                     	;# 
  1785  0211                     	;# 
  1786  0212                     	;# 
  1787  0212                     	;# 
  1788  0213                     	;# 
  1789  0214                     	;# 
  1790  0215                     	;# 
  1791  0215                     	;# 
  1792  0216                     	;# 
  1793  0216                     	;# 
  1794  0217                     	;# 
  1795  0217                     	;# 
  1796  0218                     	;# 
  1797  0218                     	;# 
  1798  0219                     	;# 
  1799  021A                     	;# 
  1800  021B                     	;# 
  1801  021B                     	;# 
  1802  021C                     	;# 
  1803  021C                     	;# 
  1804  021D                     	;# 
  1805  021D                     	;# 
  1806  021E                     	;# 
  1807  021F                     	;# 
  1808  028C                     	;# 
  1809  028C                     	;# 
  1810  028D                     	;# 
  1811  028D                     	;# 
  1812  028E                     	;# 
  1813  028F                     	;# 
  1814  0290                     	;# 
  1815  0290                     	;# 
  1816  0291                     	;# 
  1817  0292                     	;# 
  1818  0292                     	;# 
  1819  0293                     	;# 
  1820  0293                     	;# 
  1821  0294                     	;# 
  1822  0295                     	;# 
  1823  0296                     	;# 
  1824  0296                     	;# 
  1825  0297                     	;# 
  1826  0298                     	;# 
  1827  0298                     	;# 
  1828  0299                     	;# 
  1829  0299                     	;# 
  1830  029A                     	;# 
  1831  029B                     	;# 
  1832  029C                     	;# 
  1833  029C                     	;# 
  1834  029D                     	;# 
  1835  030C                     	;# 
  1836  030C                     	;# 
  1837  030D                     	;# 
  1838  030E                     	;# 
  1839  030F                     	;# 
  1840  0310                     	;# 
  1841  0310                     	;# 
  1842  0311                     	;# 
  1843  0312                     	;# 
  1844  0313                     	;# 
  1845  0314                     	;# 
  1846  0314                     	;# 
  1847  0315                     	;# 
  1848  0316                     	;# 
  1849  0317                     	;# 
  1850  0318                     	;# 
  1851  0318                     	;# 
  1852  0319                     	;# 
  1853  031A                     	;# 
  1854  031B                     	;# 
  1855  031C                     	;# 
  1856  031C                     	;# 
  1857  031D                     	;# 
  1858  031E                     	;# 
  1859  031F                     	;# 
  1860  038C                     	;# 
  1861  038C                     	;# 
  1862  038D                     	;# 
  1863  038E                     	;# 
  1864  0390                     	;# 
  1865  0390                     	;# 
  1866  0391                     	;# 
  1867  0392                     	;# 
  1868  040C                     	;# 
  1869  040D                     	;# 
  1870  040E                     	;# 
  1871  040F                     	;# 
  1872  0410                     	;# 
  1873  0411                     	;# 
  1874  0416                     	;# 
  1875  0416                     	;# 
  1876  0417                     	;# 
  1877  0418                     	;# 
  1878  0418                     	;# 
  1879  0419                     	;# 
  1880  041A                     	;# 
  1881  041A                     	;# 
  1882  041B                     	;# 
  1883  041C                     	;# 
  1884  041C                     	;# 
  1885  041D                     	;# 
  1886  041E                     	;# 
  1887  041F                     	;# 
  1888  048C                     	;# 
  1889  048C                     	;# 
  1890  048D                     	;# 
  1891  048E                     	;# 
  1892  048F                     	;# 
  1893  048F                     	;# 
  1894  0490                     	;# 
  1895  0491                     	;# 
  1896  0492                     	;# 
  1897  0492                     	;# 
  1898  0493                     	;# 
  1899  0494                     	;# 
  1900  0495                     	;# 
  1901  0495                     	;# 
  1902  0496                     	;# 
  1903  0497                     	;# 
  1904  0498                     	;# 
  1905  0499                     	;# 
  1906  049A                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  050C                     	;# 
  1911  050C                     	;# 
  1912  050D                     	;# 
  1913  050E                     	;# 
  1914  050F                     	;# 
  1915  050F                     	;# 
  1916  0510                     	;# 
  1917  0511                     	;# 
  1918  0512                     	;# 
  1919  0512                     	;# 
  1920  0513                     	;# 
  1921  0514                     	;# 
  1922  0515                     	;# 
  1923  0515                     	;# 
  1924  0516                     	;# 
  1925  0517                     	;# 
  1926  0518                     	;# 
  1927  0519                     	;# 
  1928  051A                     	;# 
  1929  051B                     	;# 
  1930  051C                     	;# 
  1931  051D                     	;# 
  1932  058C                     	;# 
  1933  058C                     	;# 
  1934  058D                     	;# 
  1935  058E                     	;# 
  1936  058F                     	;# 
  1937  058F                     	;# 
  1938  0590                     	;# 
  1939  0591                     	;# 
  1940  0592                     	;# 
  1941  0593                     	;# 
  1942  060C                     	;# 
  1943  060D                     	;# 
  1944  060E                     	;# 
  1945  060F                     	;# 
  1946  0610                     	;# 
  1947  0611                     	;# 
  1948  0612                     	;# 
  1949  0613                     	;# 
  1950  0614                     	;# 
  1951  0616                     	;# 
  1952  0617                     	;# 
  1953  0618                     	;# 
  1954  0619                     	;# 
  1955  061A                     	;# 
  1956  061B                     	;# 
  1957  061C                     	;# 
  1958  061D                     	;# 
  1959  061E                     	;# 
  1960  068C                     	;# 
  1961  068D                     	;# 
  1962  068E                     	;# 
  1963  068F                     	;# 
  1964  0690                     	;# 
  1965  0691                     	;# 
  1966  0692                     	;# 
  1967  0693                     	;# 
  1968  0694                     	;# 
  1969  070C                     	;# 
  1970  070D                     	;# 
  1971  070E                     	;# 
  1972  070F                     	;# 
  1973  0710                     	;# 
  1974  0711                     	;# 
  1975  0712                     	;# 
  1976  0713                     	;# 
  1977  0714                     	;# 
  1978  0716                     	;# 
  1979  0717                     	;# 
  1980  0718                     	;# 
  1981  0719                     	;# 
  1982  071A                     	;# 
  1983  071B                     	;# 
  1984  071C                     	;# 
  1985  071D                     	;# 
  1986  071E                     	;# 
  1987  0796                     	;# 
  1988  0797                     	;# 
  1989  0798                     	;# 
  1990  0799                     	;# 
  1991  079A                     	;# 
  1992  079B                     	;# 
  1993  080C                     	;# 
  1994  080D                     	;# 
  1995  080E                     	;# 
  1996  080F                     	;# 
  1997  0810                     	;# 
  1998  0811                     	;# 
  1999  0812                     	;# 
  2000  0813                     	;# 
  2001  0814                     	;# 
  2002  081A                     	;# 
  2003  081B                     	;# 
  2004  081C                     	;# 
  2005  081D                     	;# 
  2006  081E                     	;# 
  2007  081F                     	;# 
  2008  088C                     	;# 
  2009  088D                     	;# 
  2010  088E                     	;# 
  2011  088F                     	;# 
  2012  0890                     	;# 
  2013  0891                     	;# 
  2014  0892                     	;# 
  2015  0893                     	;# 
  2016  0895                     	;# 
  2017  0896                     	;# 
  2018  0897                     	;# 
  2019  0898                     	;# 
  2020  0899                     	;# 
  2021  089A                     	;# 
  2022  089B                     	;# 
  2023  090C                     	;# 
  2024  090E                     	;# 
  2025  090F                     	;# 
  2026  091F                     	;# 
  2027  091F                     	;# 
  2028  098F                     	;# 
  2029  098F                     	;# 
  2030  0990                     	;# 
  2031  0991                     	;# 
  2032  0992                     	;# 
  2033  0993                     	;# 
  2034  0994                     	;# 
  2035  0995                     	;# 
  2036  0996                     	;# 
  2037  0997                     	;# 
  2038  0E0F                     	;# 
  2039  0E10                     	;# 
  2040  0E11                     	;# 
  2041  0E12                     	;# 
  2042  0E13                     	;# 
  2043  0E14                     	;# 
  2044  0E15                     	;# 
  2045  0E16                     	;# 
  2046  0E17                     	;# 
  2047  0E18                     	;# 
  2048  0E19                     	;# 
  2049  0E1A                     	;# 
  2050  0E1B                     	;# 
  2051  0E1C                     	;# 
  2052  0E1D                     	;# 
  2053  0E1E                     	;# 
  2054  0E1F                     	;# 
  2055  0E20                     	;# 
  2056  0E21                     	;# 
  2057  0E22                     	;# 
  2058  0E23                     	;# 
  2059  0E24                     	;# 
  2060  0E25                     	;# 
  2061  0E26                     	;# 
  2062  0E27                     	;# 
  2063  0E28                     	;# 
  2064  0E29                     	;# 
  2065  0E2A                     	;# 
  2066  0E2B                     	;# 
  2067  0E2C                     	;# 
  2068  0E2D                     	;# 
  2069  0E2E                     	;# 
  2070  0E2F                     	;# 
  2071  0E30                     	;# 
  2072  0E31                     	;# 
  2073  0E32                     	;# 
  2074  0E33                     	;# 
  2075  0E34                     	;# 
  2076  0E35                     	;# 
  2077  0E36                     	;# 
  2078  0E37                     	;# 
  2079  0E8F                     	;# 
  2080  0E90                     	;# 
  2081  0E91                     	;# 
  2082  0E92                     	;# 
  2083  0E93                     	;# 
  2084  0E94                     	;# 
  2085  0E95                     	;# 
  2086  0E96                     	;# 
  2087  0E97                     	;# 
  2088  0E9C                     	;# 
  2089  0E9D                     	;# 
  2090  0E9E                     	;# 
  2091  0EA1                     	;# 
  2092  0EA2                     	;# 
  2093  0EA3                     	;# 
  2094  0EA4                     	;# 
  2095  0EA5                     	;# 
  2096  0EA9                     	;# 
  2097  0EAA                     	;# 
  2098  0EAB                     	;# 
  2099  0EAC                     	;# 
  2100  0EB1                     	;# 
  2101  0EB2                     	;# 
  2102  0EB3                     	;# 
  2103  0EB8                     	;# 
  2104  0EB9                     	;# 
  2105  0EBA                     	;# 
  2106  0EBB                     	;# 
  2107  0EBC                     	;# 
  2108  0EBD                     	;# 
  2109  0EBE                     	;# 
  2110  0EC3                     	;# 
  2111  0EC5                     	;# 
  2112  0EC6                     	;# 
  2113  0EC7                     	;# 
  2114  0EC8                     	;# 
  2115  0EC9                     	;# 
  2116  0ECA                     	;# 
  2117  0ECB                     	;# 
  2118  0ECC                     	;# 
  2119  0F10                     	;# 
  2120  0F11                     	;# 
  2121  0F12                     	;# 
  2122  0F13                     	;# 
  2123  0F14                     	;# 
  2124  0F15                     	;# 
  2125  0F16                     	;# 
  2126  0F17                     	;# 
  2127  0F18                     	;# 
  2128  0F19                     	;# 
  2129  0F1A                     	;# 
  2130  0F1B                     	;# 
  2131  0F1C                     	;# 
  2132  0F1D                     	;# 
  2133  0F1E                     	;# 
  2134  0F1F                     	;# 
  2135  0F20                     	;# 
  2136  0F21                     	;# 
  2137  0F22                     	;# 
  2138  0F23                     	;# 
  2139  0F24                     	;# 
  2140  0F25                     	;# 
  2141  0F26                     	;# 
  2142  0F27                     	;# 
  2143  0F38                     	;# 
  2144  0F39                     	;# 
  2145  0F3A                     	;# 
  2146  0F3B                     	;# 
  2147  0F3C                     	;# 
  2148  0F3D                     	;# 
  2149  0F3E                     	;# 
  2150  0F3F                     	;# 
  2151  0F40                     	;# 
  2152  0F41                     	;# 
  2153  0F43                     	;# 
  2154  0F44                     	;# 
  2155  0F45                     	;# 
  2156  0F46                     	;# 
  2157  0F47                     	;# 
  2158  0F48                     	;# 
  2159  0F49                     	;# 
  2160  0F4A                     	;# 
  2161  0F4B                     	;# 
  2162  0F4C                     	;# 
  2163  0F4E                     	;# 
  2164  0F4F                     	;# 
  2165  0F50                     	;# 
  2166  0F51                     	;# 
  2167  0F52                     	;# 
  2168  0F53                     	;# 
  2169  0F54                     	;# 
  2170  0F55                     	;# 
  2171  0F56                     	;# 
  2172  0F57                     	;# 
  2173  0F65                     	;# 
  2174  0F68                     	;# 
  2175  0F69                     	;# 
  2176  0F6A                     	;# 
  2177  0F6B                     	;# 
  2178  0FE4                     	;# 
  2179  0FE5                     	;# 
  2180  0FE6                     	;# 
  2181  0FE7                     	;# 
  2182  0FE8                     	;# 
  2183  0FE9                     	;# 
  2184  0FEA                     	;# 
  2185  0FEB                     	;# 
  2186  0FED                     	;# 
  2187  0FEE                     	;# 
  2188  0FEF                     	;# 
  2189  0000                     	;# 
  2190  0001                     	;# 
  2191  0002                     	;# 
  2192  0003                     	;# 
  2193  0004                     	;# 
  2194  0005                     	;# 
  2195  0006                     	;# 
  2196  0007                     	;# 
  2197  0008                     	;# 
  2198  0009                     	;# 
  2199  000A                     	;# 
  2200  000B                     	;# 
  2201  000C                     	;# 
  2202  000D                     	;# 
  2203  000E                     	;# 
  2204  0010                     	;# 
  2205  0011                     	;# 
  2206  0012                     	;# 
  2207  0013                     	;# 
  2208  0016                     	;# 
  2209  0017                     	;# 
  2210  0018                     	;# 
  2211  001C                     	;# 
  2212  001C                     	;# 
  2213  001D                     	;# 
  2214  001D                     	;# 
  2215  001E                     	;# 
  2216  001F                     	;# 
  2217  008C                     	;# 
  2218  008C                     	;# 
  2219  008D                     	;# 
  2220  008E                     	;# 
  2221  008E                     	;# 
  2222  008F                     	;# 
  2223  0090                     	;# 
  2224  0090                     	;# 
  2225  0091                     	;# 
  2226  0093                     	;# 
  2227  0094                     	;# 
  2228  0095                     	;# 
  2229  0096                     	;# 
  2230  0097                     	;# 
  2231  0098                     	;# 
  2232  0099                     	;# 
  2233  009A                     	;# 
  2234  009B                     	;# 
  2235  009C                     	;# 
  2236  009D                     	;# 
  2237  009E                     	;# 
  2238  010C                     	;# 
  2239  010D                     	;# 
  2240  010E                     	;# 
  2241  010E                     	;# 
  2242  010F                     	;# 
  2243  0110                     	;# 
  2244  0110                     	;# 
  2245  0111                     	;# 
  2246  0112                     	;# 
  2247  0112                     	;# 
  2248  0113                     	;# 
  2249  0114                     	;# 
  2250  0114                     	;# 
  2251  0115                     	;# 
  2252  0116                     	;# 
  2253  0116                     	;# 
  2254  0117                     	;# 
  2255  0119                     	;# 
  2256  0119                     	;# 
  2257  0119                     	;# 
  2258  011A                     	;# 
  2259  011A                     	;# 
  2260  011A                     	;# 
  2261  011B                     	;# 
  2262  011B                     	;# 
  2263  011B                     	;# 
  2264  011B                     	;# 
  2265  011B                     	;# 
  2266  011C                     	;# 
  2267  011C                     	;# 
  2268  011C                     	;# 
  2269  011D                     	;# 
  2270  011D                     	;# 
  2271  011D                     	;# 
  2272  011E                     	;# 
  2273  011E                     	;# 
  2274  011E                     	;# 
  2275  011F                     	;# 
  2276  011F                     	;# 
  2277  011F                     	;# 
  2278  011F                     	;# 
  2279  011F                     	;# 
  2280  018C                     	;# 
  2281  018D                     	;# 
  2282  018E                     	;# 
  2283  018F                     	;# 
  2284  0190                     	;# 
  2285  0191                     	;# 
  2286  0192                     	;# 
  2287  0196                     	;# 
  2288  0197                     	;# 
  2289  0198                     	;# 
  2290  0199                     	;# 
  2291  019A                     	;# 
  2292  019B                     	;# 
  2293  019C                     	;# 
  2294  020C                     	;# 
  2295  020C                     	;# 
  2296  020D                     	;# 
  2297  020E                     	;# 
  2298  020F                     	;# 
  2299  020F                     	;# 
  2300  0210                     	;# 
  2301  0210                     	;# 
  2302  0211                     	;# 
  2303  0211                     	;# 
  2304  0212                     	;# 
  2305  0212                     	;# 
  2306  0213                     	;# 
  2307  0214                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0216                     	;# 
  2311  0216                     	;# 
  2312  0217                     	;# 
  2313  0217                     	;# 
  2314  0218                     	;# 
  2315  0218                     	;# 
  2316  0219                     	;# 
  2317  021A                     	;# 
  2318  021B                     	;# 
  2319  021B                     	;# 
  2320  021C                     	;# 
  2321  021C                     	;# 
  2322  021D                     	;# 
  2323  021D                     	;# 
  2324  021E                     	;# 
  2325  021F                     	;# 
  2326  028C                     	;# 
  2327  028C                     	;# 
  2328  028D                     	;# 
  2329  028D                     	;# 
  2330  028E                     	;# 
  2331  028F                     	;# 
  2332  0290                     	;# 
  2333  0290                     	;# 
  2334  0291                     	;# 
  2335  0292                     	;# 
  2336  0292                     	;# 
  2337  0293                     	;# 
  2338  0293                     	;# 
  2339  0294                     	;# 
  2340  0295                     	;# 
  2341  0296                     	;# 
  2342  0296                     	;# 
  2343  0297                     	;# 
  2344  0298                     	;# 
  2345  0298                     	;# 
  2346  0299                     	;# 
  2347  0299                     	;# 
  2348  029A                     	;# 
  2349  029B                     	;# 
  2350  029C                     	;# 
  2351  029C                     	;# 
  2352  029D                     	;# 
  2353  030C                     	;# 
  2354  030C                     	;# 
  2355  030D                     	;# 
  2356  030E                     	;# 
  2357  030F                     	;# 
  2358  0310                     	;# 
  2359  0310                     	;# 
  2360  0311                     	;# 
  2361  0312                     	;# 
  2362  0313                     	;# 
  2363  0314                     	;# 
  2364  0314                     	;# 
  2365  0315                     	;# 
  2366  0316                     	;# 
  2367  0317                     	;# 
  2368  0318                     	;# 
  2369  0318                     	;# 
  2370  0319                     	;# 
  2371  031A                     	;# 
  2372  031B                     	;# 
  2373  031C                     	;# 
  2374  031C                     	;# 
  2375  031D                     	;# 
  2376  031E                     	;# 
  2377  031F                     	;# 
  2378  038C                     	;# 
  2379  038C                     	;# 
  2380  038D                     	;# 
  2381  038E                     	;# 
  2382  0390                     	;# 
  2383  0390                     	;# 
  2384  0391                     	;# 
  2385  0392                     	;# 
  2386  040C                     	;# 
  2387  040D                     	;# 
  2388  040E                     	;# 
  2389  040F                     	;# 
  2390  0410                     	;# 
  2391  0411                     	;# 
  2392  0416                     	;# 
  2393  0416                     	;# 
  2394  0417                     	;# 
  2395  0418                     	;# 
  2396  0418                     	;# 
  2397  0419                     	;# 
  2398  041A                     	;# 
  2399  041A                     	;# 
  2400  041B                     	;# 
  2401  041C                     	;# 
  2402  041C                     	;# 
  2403  041D                     	;# 
  2404  041E                     	;# 
  2405  041F                     	;# 
  2406  048C                     	;# 
  2407  048C                     	;# 
  2408  048D                     	;# 
  2409  048E                     	;# 
  2410  048F                     	;# 
  2411  048F                     	;# 
  2412  0490                     	;# 
  2413  0491                     	;# 
  2414  0492                     	;# 
  2415  0492                     	;# 
  2416  0493                     	;# 
  2417  0494                     	;# 
  2418  0495                     	;# 
  2419  0495                     	;# 
  2420  0496                     	;# 
  2421  0497                     	;# 
  2422  0498                     	;# 
  2423  0499                     	;# 
  2424  049A                     	;# 
  2425  049B                     	;# 
  2426  049C                     	;# 
  2427  049D                     	;# 
  2428  050C                     	;# 
  2429  050C                     	;# 
  2430  050D                     	;# 
  2431  050E                     	;# 
  2432  050F                     	;# 
  2433  050F                     	;# 
  2434  0510                     	;# 
  2435  0511                     	;# 
  2436  0512                     	;# 
  2437  0512                     	;# 
  2438  0513                     	;# 
  2439  0514                     	;# 
  2440  0515                     	;# 
  2441  0515                     	;# 
  2442  0516                     	;# 
  2443  0517                     	;# 
  2444  0518                     	;# 
  2445  0519                     	;# 
  2446  051A                     	;# 
  2447  051B                     	;# 
  2448  051C                     	;# 
  2449  051D                     	;# 
  2450  058C                     	;# 
  2451  058C                     	;# 
  2452  058D                     	;# 
  2453  058E                     	;# 
  2454  058F                     	;# 
  2455  058F                     	;# 
  2456  0590                     	;# 
  2457  0591                     	;# 
  2458  0592                     	;# 
  2459  0593                     	;# 
  2460  060C                     	;# 
  2461  060D                     	;# 
  2462  060E                     	;# 
  2463  060F                     	;# 
  2464  0610                     	;# 
  2465  0611                     	;# 
  2466  0612                     	;# 
  2467  0613                     	;# 
  2468  0614                     	;# 
  2469  0616                     	;# 
  2470  0617                     	;# 
  2471  0618                     	;# 
  2472  0619                     	;# 
  2473  061A                     	;# 
  2474  061B                     	;# 
  2475  061C                     	;# 
  2476  061D                     	;# 
  2477  061E                     	;# 
  2478  068C                     	;# 
  2479  068D                     	;# 
  2480  068E                     	;# 
  2481  068F                     	;# 
  2482  0690                     	;# 
  2483  0691                     	;# 
  2484  0692                     	;# 
  2485  0693                     	;# 
  2486  0694                     	;# 
  2487  070C                     	;# 
  2488  070D                     	;# 
  2489  070E                     	;# 
  2490  070F                     	;# 
  2491  0710                     	;# 
  2492  0711                     	;# 
  2493  0712                     	;# 
  2494  0713                     	;# 
  2495  0714                     	;# 
  2496  0716                     	;# 
  2497  0717                     	;# 
  2498  0718                     	;# 
  2499  0719                     	;# 
  2500  071A                     	;# 
  2501  071B                     	;# 
  2502  071C                     	;# 
  2503  071D                     	;# 
  2504  071E                     	;# 
  2505  0796                     	;# 
  2506  0797                     	;# 
  2507  0798                     	;# 
  2508  0799                     	;# 
  2509  079A                     	;# 
  2510  079B                     	;# 
  2511  080C                     	;# 
  2512  080D                     	;# 
  2513  080E                     	;# 
  2514  080F                     	;# 
  2515  0810                     	;# 
  2516  0811                     	;# 
  2517  0812                     	;# 
  2518  0813                     	;# 
  2519  0814                     	;# 
  2520  081A                     	;# 
  2521  081B                     	;# 
  2522  081C                     	;# 
  2523  081D                     	;# 
  2524  081E                     	;# 
  2525  081F                     	;# 
  2526  088C                     	;# 
  2527  088D                     	;# 
  2528  088E                     	;# 
  2529  088F                     	;# 
  2530  0890                     	;# 
  2531  0891                     	;# 
  2532  0892                     	;# 
  2533  0893                     	;# 
  2534  0895                     	;# 
  2535  0896                     	;# 
  2536  0897                     	;# 
  2537  0898                     	;# 
  2538  0899                     	;# 
  2539  089A                     	;# 
  2540  089B                     	;# 
  2541  090C                     	;# 
  2542  090E                     	;# 
  2543  090F                     	;# 
  2544  091F                     	;# 
  2545  091F                     	;# 
  2546  098F                     	;# 
  2547  098F                     	;# 
  2548  0990                     	;# 
  2549  0991                     	;# 
  2550  0992                     	;# 
  2551  0993                     	;# 
  2552  0994                     	;# 
  2553  0995                     	;# 
  2554  0996                     	;# 
  2555  0997                     	;# 
  2556  0E0F                     	;# 
  2557  0E10                     	;# 
  2558  0E11                     	;# 
  2559  0E12                     	;# 
  2560  0E13                     	;# 
  2561  0E14                     	;# 
  2562  0E15                     	;# 
  2563  0E16                     	;# 
  2564  0E17                     	;# 
  2565  0E18                     	;# 
  2566  0E19                     	;# 
  2567  0E1A                     	;# 
  2568  0E1B                     	;# 
  2569  0E1C                     	;# 
  2570  0E1D                     	;# 
  2571  0E1E                     	;# 
  2572  0E1F                     	;# 
  2573  0E20                     	;# 
  2574  0E21                     	;# 
  2575  0E22                     	;# 
  2576  0E23                     	;# 
  2577  0E24                     	;# 
  2578  0E25                     	;# 
  2579  0E26                     	;# 
  2580  0E27                     	;# 
  2581  0E28                     	;# 
  2582  0E29                     	;# 
  2583  0E2A                     	;# 
  2584  0E2B                     	;# 
  2585  0E2C                     	;# 
  2586  0E2D                     	;# 
  2587  0E2E                     	;# 
  2588  0E2F                     	;# 
  2589  0E30                     	;# 
  2590  0E31                     	;# 
  2591  0E32                     	;# 
  2592  0E33                     	;# 
  2593  0E34                     	;# 
  2594  0E35                     	;# 
  2595  0E36                     	;# 
  2596  0E37                     	;# 
  2597  0E8F                     	;# 
  2598  0E90                     	;# 
  2599  0E91                     	;# 
  2600  0E92                     	;# 
  2601  0E93                     	;# 
  2602  0E94                     	;# 
  2603  0E95                     	;# 
  2604  0E96                     	;# 
  2605  0E97                     	;# 
  2606  0E9C                     	;# 
  2607  0E9D                     	;# 
  2608  0E9E                     	;# 
  2609  0EA1                     	;# 
  2610  0EA2                     	;# 
  2611  0EA3                     	;# 
  2612  0EA4                     	;# 
  2613  0EA5                     	;# 
  2614  0EA9                     	;# 
  2615  0EAA                     	;# 
  2616  0EAB                     	;# 
  2617  0EAC                     	;# 
  2618  0EB1                     	;# 
  2619  0EB2                     	;# 
  2620  0EB3                     	;# 
  2621  0EB8                     	;# 
  2622  0EB9                     	;# 
  2623  0EBA                     	;# 
  2624  0EBB                     	;# 
  2625  0EBC                     	;# 
  2626  0EBD                     	;# 
  2627  0EBE                     	;# 
  2628  0EC3                     	;# 
  2629  0EC5                     	;# 
  2630  0EC6                     	;# 
  2631  0EC7                     	;# 
  2632  0EC8                     	;# 
  2633  0EC9                     	;# 
  2634  0ECA                     	;# 
  2635  0ECB                     	;# 
  2636  0ECC                     	;# 
  2637  0F10                     	;# 
  2638  0F11                     	;# 
  2639  0F12                     	;# 
  2640  0F13                     	;# 
  2641  0F14                     	;# 
  2642  0F15                     	;# 
  2643  0F16                     	;# 
  2644  0F17                     	;# 
  2645  0F18                     	;# 
  2646  0F19                     	;# 
  2647  0F1A                     	;# 
  2648  0F1B                     	;# 
  2649  0F1C                     	;# 
  2650  0F1D                     	;# 
  2651  0F1E                     	;# 
  2652  0F1F                     	;# 
  2653  0F20                     	;# 
  2654  0F21                     	;# 
  2655  0F22                     	;# 
  2656  0F23                     	;# 
  2657  0F24                     	;# 
  2658  0F25                     	;# 
  2659  0F26                     	;# 
  2660  0F27                     	;# 
  2661  0F38                     	;# 
  2662  0F39                     	;# 
  2663  0F3A                     	;# 
  2664  0F3B                     	;# 
  2665  0F3C                     	;# 
  2666  0F3D                     	;# 
  2667  0F3E                     	;# 
  2668  0F3F                     	;# 
  2669  0F40                     	;# 
  2670  0F41                     	;# 
  2671  0F43                     	;# 
  2672  0F44                     	;# 
  2673  0F45                     	;# 
  2674  0F46                     	;# 
  2675  0F47                     	;# 
  2676  0F48                     	;# 
  2677  0F49                     	;# 
  2678  0F4A                     	;# 
  2679  0F4B                     	;# 
  2680  0F4C                     	;# 
  2681  0F4E                     	;# 
  2682  0F4F                     	;# 
  2683  0F50                     	;# 
  2684  0F51                     	;# 
  2685  0F52                     	;# 
  2686  0F53                     	;# 
  2687  0F54                     	;# 
  2688  0F55                     	;# 
  2689  0F56                     	;# 
  2690  0F57                     	;# 
  2691  0F65                     	;# 
  2692  0F68                     	;# 
  2693  0F69                     	;# 
  2694  0F6A                     	;# 
  2695  0F6B                     	;# 
  2696  0FE4                     	;# 
  2697  0FE5                     	;# 
  2698  0FE6                     	;# 
  2699  0FE7                     	;# 
  2700  0FE8                     	;# 
  2701  0FE9                     	;# 
  2702  0FEA                     	;# 
  2703  0FEB                     	;# 
  2704  0FED                     	;# 
  2705  0FEE                     	;# 
  2706  0FEF                     	;# 
  2707  0000                     	;# 
  2708  0001                     	;# 
  2709  0002                     	;# 
  2710  0003                     	;# 
  2711  0004                     	;# 
  2712  0005                     	;# 
  2713  0006                     	;# 
  2714  0007                     	;# 
  2715  0008                     	;# 
  2716  0009                     	;# 
  2717  000A                     	;# 
  2718  000B                     	;# 
  2719  000C                     	;# 
  2720  000D                     	;# 
  2721  000E                     	;# 
  2722  0010                     	;# 
  2723  0011                     	;# 
  2724  0012                     	;# 
  2725  0013                     	;# 
  2726  0016                     	;# 
  2727  0017                     	;# 
  2728  0018                     	;# 
  2729  001C                     	;# 
  2730  001C                     	;# 
  2731  001D                     	;# 
  2732  001D                     	;# 
  2733  001E                     	;# 
  2734  001F                     	;# 
  2735  008C                     	;# 
  2736  008C                     	;# 
  2737  008D                     	;# 
  2738  008E                     	;# 
  2739  008E                     	;# 
  2740  008F                     	;# 
  2741  0090                     	;# 
  2742  0090                     	;# 
  2743  0091                     	;# 
  2744  0093                     	;# 
  2745  0094                     	;# 
  2746  0095                     	;# 
  2747  0096                     	;# 
  2748  0097                     	;# 
  2749  0098                     	;# 
  2750  0099                     	;# 
  2751  009A                     	;# 
  2752  009B                     	;# 
  2753  009C                     	;# 
  2754  009D                     	;# 
  2755  009E                     	;# 
  2756  010C                     	;# 
  2757  010D                     	;# 
  2758  010E                     	;# 
  2759  010E                     	;# 
  2760  010F                     	;# 
  2761  0110                     	;# 
  2762  0110                     	;# 
  2763  0111                     	;# 
  2764  0112                     	;# 
  2765  0112                     	;# 
  2766  0113                     	;# 
  2767  0114                     	;# 
  2768  0114                     	;# 
  2769  0115                     	;# 
  2770  0116                     	;# 
  2771  0116                     	;# 
  2772  0117                     	;# 
  2773  0119                     	;# 
  2774  0119                     	;# 
  2775  0119                     	;# 
  2776  011A                     	;# 
  2777  011A                     	;# 
  2778  011A                     	;# 
  2779  011B                     	;# 
  2780  011B                     	;# 
  2781  011B                     	;# 
  2782  011B                     	;# 
  2783  011B                     	;# 
  2784  011C                     	;# 
  2785  011C                     	;# 
  2786  011C                     	;# 
  2787  011D                     	;# 
  2788  011D                     	;# 
  2789  011D                     	;# 
  2790  011E                     	;# 
  2791  011E                     	;# 
  2792  011E                     	;# 
  2793  011F                     	;# 
  2794  011F                     	;# 
  2795  011F                     	;# 
  2796  011F                     	;# 
  2797  011F                     	;# 
  2798  018C                     	;# 
  2799  018D                     	;# 
  2800  018E                     	;# 
  2801  018F                     	;# 
  2802  0190                     	;# 
  2803  0191                     	;# 
  2804  0192                     	;# 
  2805  0196                     	;# 
  2806  0197                     	;# 
  2807  0198                     	;# 
  2808  0199                     	;# 
  2809  019A                     	;# 
  2810  019B                     	;# 
  2811  019C                     	;# 
  2812  020C                     	;# 
  2813  020C                     	;# 
  2814  020D                     	;# 
  2815  020E                     	;# 
  2816  020F                     	;# 
  2817  020F                     	;# 
  2818  0210                     	;# 
  2819  0210                     	;# 
  2820  0211                     	;# 
  2821  0211                     	;# 
  2822  0212                     	;# 
  2823  0212                     	;# 
  2824  0213                     	;# 
  2825  0214                     	;# 
  2826  0215                     	;# 
  2827  0215                     	;# 
  2828  0216                     	;# 
  2829  0216                     	;# 
  2830  0217                     	;# 
  2831  0217                     	;# 
  2832  0218                     	;# 
  2833  0218                     	;# 
  2834  0219                     	;# 
  2835  021A                     	;# 
  2836  021B                     	;# 
  2837  021B                     	;# 
  2838  021C                     	;# 
  2839  021C                     	;# 
  2840  021D                     	;# 
  2841  021D                     	;# 
  2842  021E                     	;# 
  2843  021F                     	;# 
  2844  028C                     	;# 
  2845  028C                     	;# 
  2846  028D                     	;# 
  2847  028D                     	;# 
  2848  028E                     	;# 
  2849  028F                     	;# 
  2850  0290                     	;# 
  2851  0290                     	;# 
  2852  0291                     	;# 
  2853  0292                     	;# 
  2854  0292                     	;# 
  2855  0293                     	;# 
  2856  0293                     	;# 
  2857  0294                     	;# 
  2858  0295                     	;# 
  2859  0296                     	;# 
  2860  0296                     	;# 
  2861  0297                     	;# 
  2862  0298                     	;# 
  2863  0298                     	;# 
  2864  0299                     	;# 
  2865  0299                     	;# 
  2866  029A                     	;# 
  2867  029B                     	;# 
  2868  029C                     	;# 
  2869  029C                     	;# 
  2870  029D                     	;# 
  2871  030C                     	;# 
  2872  030C                     	;# 
  2873  030D                     	;# 
  2874  030E                     	;# 
  2875  030F                     	;# 
  2876  0310                     	;# 
  2877  0310                     	;# 
  2878  0311                     	;# 
  2879  0312                     	;# 
  2880  0313                     	;# 
  2881  0314                     	;# 
  2882  0314                     	;# 
  2883  0315                     	;# 
  2884  0316                     	;# 
  2885  0317                     	;# 
  2886  0318                     	;# 
  2887  0318                     	;# 
  2888  0319                     	;# 
  2889  031A                     	;# 
  2890  031B                     	;# 
  2891  031C                     	;# 
  2892  031C                     	;# 
  2893  031D                     	;# 
  2894  031E                     	;# 
  2895  031F                     	;# 
  2896  038C                     	;# 
  2897  038C                     	;# 
  2898  038D                     	;# 
  2899  038E                     	;# 
  2900  0390                     	;# 
  2901  0390                     	;# 
  2902  0391                     	;# 
  2903  0392                     	;# 
  2904  040C                     	;# 
  2905  040D                     	;# 
  2906  040E                     	;# 
  2907  040F                     	;# 
  2908  0410                     	;# 
  2909  0411                     	;# 
  2910  0416                     	;# 
  2911  0416                     	;# 
  2912  0417                     	;# 
  2913  0418                     	;# 
  2914  0418                     	;# 
  2915  0419                     	;# 
  2916  041A                     	;# 
  2917  041A                     	;# 
  2918  041B                     	;# 
  2919  041C                     	;# 
  2920  041C                     	;# 
  2921  041D                     	;# 
  2922  041E                     	;# 
  2923  041F                     	;# 
  2924  048C                     	;# 
  2925  048C                     	;# 
  2926  048D                     	;# 
  2927  048E                     	;# 
  2928  048F                     	;# 
  2929  048F                     	;# 
  2930  0490                     	;# 
  2931  0491                     	;# 
  2932  0492                     	;# 
  2933  0492                     	;# 
  2934  0493                     	;# 
  2935  0494                     	;# 
  2936  0495                     	;# 
  2937  0495                     	;# 
  2938  0496                     	;# 
  2939  0497                     	;# 
  2940  0498                     	;# 
  2941  0499                     	;# 
  2942  049A                     	;# 
  2943  049B                     	;# 
  2944  049C                     	;# 
  2945  049D                     	;# 
  2946  050C                     	;# 
  2947  050C                     	;# 
  2948  050D                     	;# 
  2949  050E                     	;# 
  2950  050F                     	;# 
  2951  050F                     	;# 
  2952  0510                     	;# 
  2953  0511                     	;# 
  2954  0512                     	;# 
  2955  0512                     	;# 
  2956  0513                     	;# 
  2957  0514                     	;# 
  2958  0515                     	;# 
  2959  0515                     	;# 
  2960  0516                     	;# 
  2961  0517                     	;# 
  2962  0518                     	;# 
  2963  0519                     	;# 
  2964  051A                     	;# 
  2965  051B                     	;# 
  2966  051C                     	;# 
  2967  051D                     	;# 
  2968  058C                     	;# 
  2969  058C                     	;# 
  2970  058D                     	;# 
  2971  058E                     	;# 
  2972  058F                     	;# 
  2973  058F                     	;# 
  2974  0590                     	;# 
  2975  0591                     	;# 
  2976  0592                     	;# 
  2977  0593                     	;# 
  2978  060C                     	;# 
  2979  060D                     	;# 
  2980  060E                     	;# 
  2981  060F                     	;# 
  2982  0610                     	;# 
  2983  0611                     	;# 
  2984  0612                     	;# 
  2985  0613                     	;# 
  2986  0614                     	;# 
  2987  0616                     	;# 
  2988  0617                     	;# 
  2989  0618                     	;# 
  2990  0619                     	;# 
  2991  061A                     	;# 
  2992  061B                     	;# 
  2993  061C                     	;# 
  2994  061D                     	;# 
  2995  061E                     	;# 
  2996  068C                     	;# 
  2997  068D                     	;# 
  2998  068E                     	;# 
  2999  068F                     	;# 
  3000  0690                     	;# 
  3001  0691                     	;# 
  3002  0692                     	;# 
  3003  0693                     	;# 
  3004  0694                     	;# 
  3005  070C                     	;# 
  3006  070D                     	;# 
  3007  070E                     	;# 
  3008  070F                     	;# 
  3009  0710                     	;# 
  3010  0711                     	;# 
  3011  0712                     	;# 
  3012  0713                     	;# 
  3013  0714                     	;# 
  3014  0716                     	;# 
  3015  0717                     	;# 
  3016  0718                     	;# 
  3017  0719                     	;# 
  3018  071A                     	;# 
  3019  071B                     	;# 
  3020  071C                     	;# 
  3021  071D                     	;# 
  3022  071E                     	;# 
  3023  0796                     	;# 
  3024  0797                     	;# 
  3025  0798                     	;# 
  3026  0799                     	;# 
  3027  079A                     	;# 
  3028  079B                     	;# 
  3029  080C                     	;# 
  3030  080D                     	;# 
  3031  080E                     	;# 
  3032  080F                     	;# 
  3033  0810                     	;# 
  3034  0811                     	;# 
  3035  0812                     	;# 
  3036  0813                     	;# 
  3037  0814                     	;# 
  3038  081A                     	;# 
  3039  081B                     	;# 
  3040  081C                     	;# 
  3041  081D                     	;# 
  3042  081E                     	;# 
  3043  081F                     	;# 
  3044  088C                     	;# 
  3045  088D                     	;# 
  3046  088E                     	;# 
  3047  088F                     	;# 
  3048  0890                     	;# 
  3049  0891                     	;# 
  3050  0892                     	;# 
  3051  0893                     	;# 
  3052  0895                     	;# 
  3053  0896                     	;# 
  3054  0897                     	;# 
  3055  0898                     	;# 
  3056  0899                     	;# 
  3057  089A                     	;# 
  3058  089B                     	;# 
  3059  090C                     	;# 
  3060  090E                     	;# 
  3061  090F                     	;# 
  3062  091F                     	;# 
  3063  091F                     	;# 
  3064  098F                     	;# 
  3065  098F                     	;# 
  3066  0990                     	;# 
  3067  0991                     	;# 
  3068  0992                     	;# 
  3069  0993                     	;# 
  3070  0994                     	;# 
  3071  0995                     	;# 
  3072  0996                     	;# 
  3073  0997                     	;# 
  3074  0E0F                     	;# 
  3075  0E10                     	;# 
  3076  0E11                     	;# 
  3077  0E12                     	;# 
  3078  0E13                     	;# 
  3079  0E14                     	;# 
  3080  0E15                     	;# 
  3081  0E16                     	;# 
  3082  0E17                     	;# 
  3083  0E18                     	;# 
  3084  0E19                     	;# 
  3085  0E1A                     	;# 
  3086  0E1B                     	;# 
  3087  0E1C                     	;# 
  3088  0E1D                     	;# 
  3089  0E1E                     	;# 
  3090  0E1F                     	;# 
  3091  0E20                     	;# 
  3092  0E21                     	;# 
  3093  0E22                     	;# 
  3094  0E23                     	;# 
  3095  0E24                     	;# 
  3096  0E25                     	;# 
  3097  0E26                     	;# 
  3098  0E27                     	;# 
  3099  0E28                     	;# 
  3100  0E29                     	;# 
  3101  0E2A                     	;# 
  3102  0E2B                     	;# 
  3103  0E2C                     	;# 
  3104  0E2D                     	;# 
  3105  0E2E                     	;# 
  3106  0E2F                     	;# 
  3107  0E30                     	;# 
  3108  0E31                     	;# 
  3109  0E32                     	;# 
  3110  0E33                     	;# 
  3111  0E34                     	;# 
  3112  0E35                     	;# 
  3113  0E36                     	;# 
  3114  0E37                     	;# 
  3115  0E8F                     	;# 
  3116  0E90                     	;# 
  3117  0E91                     	;# 
  3118  0E92                     	;# 
  3119  0E93                     	;# 
  3120  0E94                     	;# 
  3121  0E95                     	;# 
  3122  0E96                     	;# 
  3123  0E97                     	;# 
  3124  0E9C                     	;# 
  3125  0E9D                     	;# 
  3126  0E9E                     	;# 
  3127  0EA1                     	;# 
  3128  0EA2                     	;# 
  3129  0EA3                     	;# 
  3130  0EA4                     	;# 
  3131  0EA5                     	;# 
  3132  0EA9                     	;# 
  3133  0EAA                     	;# 
  3134  0EAB                     	;# 
  3135  0EAC                     	;# 
  3136  0EB1                     	;# 
  3137  0EB2                     	;# 
  3138  0EB3                     	;# 
  3139  0EB8                     	;# 
  3140  0EB9                     	;# 
  3141  0EBA                     	;# 
  3142  0EBB                     	;# 
  3143  0EBC                     	;# 
  3144  0EBD                     	;# 
  3145  0EBE                     	;# 
  3146  0EC3                     	;# 
  3147  0EC5                     	;# 
  3148  0EC6                     	;# 
  3149  0EC7                     	;# 
  3150  0EC8                     	;# 
  3151  0EC9                     	;# 
  3152  0ECA                     	;# 
  3153  0ECB                     	;# 
  3154  0ECC                     	;# 
  3155  0F10                     	;# 
  3156  0F11                     	;# 
  3157  0F12                     	;# 
  3158  0F13                     	;# 
  3159  0F14                     	;# 
  3160  0F15                     	;# 
  3161  0F16                     	;# 
  3162  0F17                     	;# 
  3163  0F18                     	;# 
  3164  0F19                     	;# 
  3165  0F1A                     	;# 
  3166  0F1B                     	;# 
  3167  0F1C                     	;# 
  3168  0F1D                     	;# 
  3169  0F1E                     	;# 
  3170  0F1F                     	;# 
  3171  0F20                     	;# 
  3172  0F21                     	;# 
  3173  0F22                     	;# 
  3174  0F23                     	;# 
  3175  0F24                     	;# 
  3176  0F25                     	;# 
  3177  0F26                     	;# 
  3178  0F27                     	;# 
  3179  0F38                     	;# 
  3180  0F39                     	;# 
  3181  0F3A                     	;# 
  3182  0F3B                     	;# 
  3183  0F3C                     	;# 
  3184  0F3D                     	;# 
  3185  0F3E                     	;# 
  3186  0F3F                     	;# 
  3187  0F40                     	;# 
  3188  0F41                     	;# 
  3189  0F43                     	;# 
  3190  0F44                     	;# 
  3191  0F45                     	;# 
  3192  0F46                     	;# 
  3193  0F47                     	;# 
  3194  0F48                     	;# 
  3195  0F49                     	;# 
  3196  0F4A                     	;# 
  3197  0F4B                     	;# 
  3198  0F4C                     	;# 
  3199  0F4E                     	;# 
  3200  0F4F                     	;# 
  3201  0F50                     	;# 
  3202  0F51                     	;# 
  3203  0F52                     	;# 
  3204  0F53                     	;# 
  3205  0F54                     	;# 
  3206  0F55                     	;# 
  3207  0F56                     	;# 
  3208  0F57                     	;# 
  3209  0F65                     	;# 
  3210  0F68                     	;# 
  3211  0F69                     	;# 
  3212  0F6A                     	;# 
  3213  0F6B                     	;# 
  3214  0FE4                     	;# 
  3215  0FE5                     	;# 
  3216  0FE6                     	;# 
  3217  0FE7                     	;# 
  3218  0FE8                     	;# 
  3219  0FE9                     	;# 
  3220  0FEA                     	;# 
  3221  0FEB                     	;# 
  3222  0FED                     	;# 
  3223  0FEE                     	;# 
  3224  0FEF                     	;# 
  3225  0000                     	;# 
  3226  0001                     	;# 
  3227  0002                     	;# 
  3228  0003                     	;# 
  3229  0004                     	;# 
  3230  0005                     	;# 
  3231  0006                     	;# 
  3232  0007                     	;# 
  3233  0008                     	;# 
  3234  0009                     	;# 
  3235  000A                     	;# 
  3236  000B                     	;# 
  3237  000C                     	;# 
  3238  000D                     	;# 
  3239  000E                     	;# 
  3240  0010                     	;# 
  3241  0011                     	;# 
  3242  0012                     	;# 
  3243  0013                     	;# 
  3244  0016                     	;# 
  3245  0017                     	;# 
  3246  0018                     	;# 
  3247  001C                     	;# 
  3248  001C                     	;# 
  3249  001D                     	;# 
  3250  001D                     	;# 
  3251  001E                     	;# 
  3252  001F                     	;# 
  3253  008C                     	;# 
  3254  008C                     	;# 
  3255  008D                     	;# 
  3256  008E                     	;# 
  3257  008E                     	;# 
  3258  008F                     	;# 
  3259  0090                     	;# 
  3260  0090                     	;# 
  3261  0091                     	;# 
  3262  0093                     	;# 
  3263  0094                     	;# 
  3264  0095                     	;# 
  3265  0096                     	;# 
  3266  0097                     	;# 
  3267  0098                     	;# 
  3268  0099                     	;# 
  3269  009A                     	;# 
  3270  009B                     	;# 
  3271  009C                     	;# 
  3272  009D                     	;# 
  3273  009E                     	;# 
  3274  010C                     	;# 
  3275  010D                     	;# 
  3276  010E                     	;# 
  3277  010E                     	;# 
  3278  010F                     	;# 
  3279  0110                     	;# 
  3280  0110                     	;# 
  3281  0111                     	;# 
  3282  0112                     	;# 
  3283  0112                     	;# 
  3284  0113                     	;# 
  3285  0114                     	;# 
  3286  0114                     	;# 
  3287  0115                     	;# 
  3288  0116                     	;# 
  3289  0116                     	;# 
  3290  0117                     	;# 
  3291  0119                     	;# 
  3292  0119                     	;# 
  3293  0119                     	;# 
  3294  011A                     	;# 
  3295  011A                     	;# 
  3296  011A                     	;# 
  3297  011B                     	;# 
  3298  011B                     	;# 
  3299  011B                     	;# 
  3300  011B                     	;# 
  3301  011B                     	;# 
  3302  011C                     	;# 
  3303  011C                     	;# 
  3304  011C                     	;# 
  3305  011D                     	;# 
  3306  011D                     	;# 
  3307  011D                     	;# 
  3308  011E                     	;# 
  3309  011E                     	;# 
  3310  011E                     	;# 
  3311  011F                     	;# 
  3312  011F                     	;# 
  3313  011F                     	;# 
  3314  011F                     	;# 
  3315  011F                     	;# 
  3316  018C                     	;# 
  3317  018D                     	;# 
  3318  018E                     	;# 
  3319  018F                     	;# 
  3320  0190                     	;# 
  3321  0191                     	;# 
  3322  0192                     	;# 
  3323  0196                     	;# 
  3324  0197                     	;# 
  3325  0198                     	;# 
  3326  0199                     	;# 
  3327  019A                     	;# 
  3328  019B                     	;# 
  3329  019C                     	;# 
  3330  020C                     	;# 
  3331  020C                     	;# 
  3332  020D                     	;# 
  3333  020E                     	;# 
  3334  020F                     	;# 
  3335  020F                     	;# 
  3336  0210                     	;# 
  3337  0210                     	;# 
  3338  0211                     	;# 
  3339  0211                     	;# 
  3340  0212                     	;# 
  3341  0212                     	;# 
  3342  0213                     	;# 
  3343  0214                     	;# 
  3344  0215                     	;# 
  3345  0215                     	;# 
  3346  0216                     	;# 
  3347  0216                     	;# 
  3348  0217                     	;# 
  3349  0217                     	;# 
  3350  0218                     	;# 
  3351  0218                     	;# 
  3352  0219                     	;# 
  3353  021A                     	;# 
  3354  021B                     	;# 
  3355  021B                     	;# 
  3356  021C                     	;# 
  3357  021C                     	;# 
  3358  021D                     	;# 
  3359  021D                     	;# 
  3360  021E                     	;# 
  3361  021F                     	;# 
  3362  028C                     	;# 
  3363  028C                     	;# 
  3364  028D                     	;# 
  3365  028D                     	;# 
  3366  028E                     	;# 
  3367  028F                     	;# 
  3368  0290                     	;# 
  3369  0290                     	;# 
  3370  0291                     	;# 
  3371  0292                     	;# 
  3372  0292                     	;# 
  3373  0293                     	;# 
  3374  0293                     	;# 
  3375  0294                     	;# 
  3376  0295                     	;# 
  3377  0296                     	;# 
  3378  0296                     	;# 
  3379  0297                     	;# 
  3380  0298                     	;# 
  3381  0298                     	;# 
  3382  0299                     	;# 
  3383  0299                     	;# 
  3384  029A                     	;# 
  3385  029B                     	;# 
  3386  029C                     	;# 
  3387  029C                     	;# 
  3388  029D                     	;# 
  3389  030C                     	;# 
  3390  030C                     	;# 
  3391  030D                     	;# 
  3392  030E                     	;# 
  3393  030F                     	;# 
  3394  0310                     	;# 
  3395  0310                     	;# 
  3396  0311                     	;# 
  3397  0312                     	;# 
  3398  0313                     	;# 
  3399  0314                     	;# 
  3400  0314                     	;# 
  3401  0315                     	;# 
  3402  0316                     	;# 
  3403  0317                     	;# 
  3404  0318                     	;# 
  3405  0318                     	;# 
  3406  0319                     	;# 
  3407  031A                     	;# 
  3408  031B                     	;# 
  3409  031C                     	;# 
  3410  031C                     	;# 
  3411  031D                     	;# 
  3412  031E                     	;# 
  3413  031F                     	;# 
  3414  038C                     	;# 
  3415  038C                     	;# 
  3416  038D                     	;# 
  3417  038E                     	;# 
  3418  0390                     	;# 
  3419  0390                     	;# 
  3420  0391                     	;# 
  3421  0392                     	;# 
  3422  040C                     	;# 
  3423  040D                     	;# 
  3424  040E                     	;# 
  3425  040F                     	;# 
  3426  0410                     	;# 
  3427  0411                     	;# 
  3428  0416                     	;# 
  3429  0416                     	;# 
  3430  0417                     	;# 
  3431  0418                     	;# 
  3432  0418                     	;# 
  3433  0419                     	;# 
  3434  041A                     	;# 
  3435  041A                     	;# 
  3436  041B                     	;# 
  3437  041C                     	;# 
  3438  041C                     	;# 
  3439  041D                     	;# 
  3440  041E                     	;# 
  3441  041F                     	;# 
  3442  048C                     	;# 
  3443  048C                     	;# 
  3444  048D                     	;# 
  3445  048E                     	;# 
  3446  048F                     	;# 
  3447  048F                     	;# 
  3448  0490                     	;# 
  3449  0491                     	;# 
  3450  0492                     	;# 
  3451  0492                     	;# 
  3452  0493                     	;# 
  3453  0494                     	;# 
  3454  0495                     	;# 
  3455  0495                     	;# 
  3456  0496                     	;# 
  3457  0497                     	;# 
  3458  0498                     	;# 
  3459  0499                     	;# 
  3460  049A                     	;# 
  3461  049B                     	;# 
  3462  049C                     	;# 
  3463  049D                     	;# 
  3464  050C                     	;# 
  3465  050C                     	;# 
  3466  050D                     	;# 
  3467  050E                     	;# 
  3468  050F                     	;# 
  3469  050F                     	;# 
  3470  0510                     	;# 
  3471  0511                     	;# 
  3472  0512                     	;# 
  3473  0512                     	;# 
  3474  0513                     	;# 
  3475  0514                     	;# 
  3476  0515                     	;# 
  3477  0515                     	;# 
  3478  0516                     	;# 
  3479  0517                     	;# 
  3480  0518                     	;# 
  3481  0519                     	;# 
  3482  051A                     	;# 
  3483  051B                     	;# 
  3484  051C                     	;# 
  3485  051D                     	;# 
  3486  058C                     	;# 
  3487  058C                     	;# 
  3488  058D                     	;# 
  3489  058E                     	;# 
  3490  058F                     	;# 
  3491  058F                     	;# 
  3492  0590                     	;# 
  3493  0591                     	;# 
  3494  0592                     	;# 
  3495  0593                     	;# 
  3496  060C                     	;# 
  3497  060D                     	;# 
  3498  060E                     	;# 
  3499  060F                     	;# 
  3500  0610                     	;# 
  3501  0611                     	;# 
  3502  0612                     	;# 
  3503  0613                     	;# 
  3504  0614                     	;# 
  3505  0616                     	;# 
  3506  0617                     	;# 
  3507  0618                     	;# 
  3508  0619                     	;# 
  3509  061A                     	;# 
  3510  061B                     	;# 
  3511  061C                     	;# 
  3512  061D                     	;# 
  3513  061E                     	;# 
  3514  068C                     	;# 
  3515  068D                     	;# 
  3516  068E                     	;# 
  3517  068F                     	;# 
  3518  0690                     	;# 
  3519  0691                     	;# 
  3520  0692                     	;# 
  3521  0693                     	;# 
  3522  0694                     	;# 
  3523  070C                     	;# 
  3524  070D                     	;# 
  3525  070E                     	;# 
  3526  070F                     	;# 
  3527  0710                     	;# 
  3528  0711                     	;# 
  3529  0712                     	;# 
  3530  0713                     	;# 
  3531  0714                     	;# 
  3532  0716                     	;# 
  3533  0717                     	;# 
  3534  0718                     	;# 
  3535  0719                     	;# 
  3536  071A                     	;# 
  3537  071B                     	;# 
  3538  071C                     	;# 
  3539  071D                     	;# 
  3540  071E                     	;# 
  3541  0796                     	;# 
  3542  0797                     	;# 
  3543  0798                     	;# 
  3544  0799                     	;# 
  3545  079A                     	;# 
  3546  079B                     	;# 
  3547  080C                     	;# 
  3548  080D                     	;# 
  3549  080E                     	;# 
  3550  080F                     	;# 
  3551  0810                     	;# 
  3552  0811                     	;# 
  3553  0812                     	;# 
  3554  0813                     	;# 
  3555  0814                     	;# 
  3556  081A                     	;# 
  3557  081B                     	;# 
  3558  081C                     	;# 
  3559  081D                     	;# 
  3560  081E                     	;# 
  3561  081F                     	;# 
  3562  088C                     	;# 
  3563  088D                     	;# 
  3564  088E                     	;# 
  3565  088F                     	;# 
  3566  0890                     	;# 
  3567  0891                     	;# 
  3568  0892                     	;# 
  3569  0893                     	;# 
  3570  0895                     	;# 
  3571  0896                     	;# 
  3572  0897                     	;# 
  3573  0898                     	;# 
  3574  0899                     	;# 
  3575  089A                     	;# 
  3576  089B                     	;# 
  3577  090C                     	;# 
  3578  090E                     	;# 
  3579  090F                     	;# 
  3580  091F                     	;# 
  3581  091F                     	;# 
  3582  098F                     	;# 
  3583  098F                     	;# 
  3584  0990                     	;# 
  3585  0991                     	;# 
  3586  0992                     	;# 
  3587  0993                     	;# 
  3588  0994                     	;# 
  3589  0995                     	;# 
  3590  0996                     	;# 
  3591  0997                     	;# 
  3592  0E0F                     	;# 
  3593  0E10                     	;# 
  3594  0E11                     	;# 
  3595  0E12                     	;# 
  3596  0E13                     	;# 
  3597  0E14                     	;# 
  3598  0E15                     	;# 
  3599  0E16                     	;# 
  3600  0E17                     	;# 
  3601  0E18                     	;# 
  3602  0E19                     	;# 
  3603  0E1A                     	;# 
  3604  0E1B                     	;# 
  3605  0E1C                     	;# 
  3606  0E1D                     	;# 
  3607  0E1E                     	;# 
  3608  0E1F                     	;# 
  3609  0E20                     	;# 
  3610  0E21                     	;# 
  3611  0E22                     	;# 
  3612  0E23                     	;# 
  3613  0E24                     	;# 
  3614  0E25                     	;# 
  3615  0E26                     	;# 
  3616  0E27                     	;# 
  3617  0E28                     	;# 
  3618  0E29                     	;# 
  3619  0E2A                     	;# 
  3620  0E2B                     	;# 
  3621  0E2C                     	;# 
  3622  0E2D                     	;# 
  3623  0E2E                     	;# 
  3624  0E2F                     	;# 
  3625  0E30                     	;# 
  3626  0E31                     	;# 
  3627  0E32                     	;# 
  3628  0E33                     	;# 
  3629  0E34                     	;# 
  3630  0E35                     	;# 
  3631  0E36                     	;# 
  3632  0E37                     	;# 
  3633  0E8F                     	;# 
  3634  0E90                     	;# 
  3635  0E91                     	;# 
  3636  0E92                     	;# 
  3637  0E93                     	;# 
  3638  0E94                     	;# 
  3639  0E95                     	;# 
  3640  0E96                     	;# 
  3641  0E97                     	;# 
  3642  0E9C                     	;# 
  3643  0E9D                     	;# 
  3644  0E9E                     	;# 
  3645  0EA1                     	;# 
  3646  0EA2                     	;# 
  3647  0EA3                     	;# 
  3648  0EA4                     	;# 
  3649  0EA5                     	;# 
  3650  0EA9                     	;# 
  3651  0EAA                     	;# 
  3652  0EAB                     	;# 
  3653  0EAC                     	;# 
  3654  0EB1                     	;# 
  3655  0EB2                     	;# 
  3656  0EB3                     	;# 
  3657  0EB8                     	;# 
  3658  0EB9                     	;# 
  3659  0EBA                     	;# 
  3660  0EBB                     	;# 
  3661  0EBC                     	;# 
  3662  0EBD                     	;# 
  3663  0EBE                     	;# 
  3664  0EC3                     	;# 
  3665  0EC5                     	;# 
  3666  0EC6                     	;# 
  3667  0EC7                     	;# 
  3668  0EC8                     	;# 
  3669  0EC9                     	;# 
  3670  0ECA                     	;# 
  3671  0ECB                     	;# 
  3672  0ECC                     	;# 
  3673  0F10                     	;# 
  3674  0F11                     	;# 
  3675  0F12                     	;# 
  3676  0F13                     	;# 
  3677  0F14                     	;# 
  3678  0F15                     	;# 
  3679  0F16                     	;# 
  3680  0F17                     	;# 
  3681  0F18                     	;# 
  3682  0F19                     	;# 
  3683  0F1A                     	;# 
  3684  0F1B                     	;# 
  3685  0F1C                     	;# 
  3686  0F1D                     	;# 
  3687  0F1E                     	;# 
  3688  0F1F                     	;# 
  3689  0F20                     	;# 
  3690  0F21                     	;# 
  3691  0F22                     	;# 
  3692  0F23                     	;# 
  3693  0F24                     	;# 
  3694  0F25                     	;# 
  3695  0F26                     	;# 
  3696  0F27                     	;# 
  3697  0F38                     	;# 
  3698  0F39                     	;# 
  3699  0F3A                     	;# 
  3700  0F3B                     	;# 
  3701  0F3C                     	;# 
  3702  0F3D                     	;# 
  3703  0F3E                     	;# 
  3704  0F3F                     	;# 
  3705  0F40                     	;# 
  3706  0F41                     	;# 
  3707  0F43                     	;# 
  3708  0F44                     	;# 
  3709  0F45                     	;# 
  3710  0F46                     	;# 
  3711  0F47                     	;# 
  3712  0F48                     	;# 
  3713  0F49                     	;# 
  3714  0F4A                     	;# 
  3715  0F4B                     	;# 
  3716  0F4C                     	;# 
  3717  0F4E                     	;# 
  3718  0F4F                     	;# 
  3719  0F50                     	;# 
  3720  0F51                     	;# 
  3721  0F52                     	;# 
  3722  0F53                     	;# 
  3723  0F54                     	;# 
  3724  0F55                     	;# 
  3725  0F56                     	;# 
  3726  0F57                     	;# 
  3727  0F65                     	;# 
  3728  0F68                     	;# 
  3729  0F69                     	;# 
  3730  0F6A                     	;# 
  3731  0F6B                     	;# 
  3732  0FE4                     	;# 
  3733  0FE5                     	;# 
  3734  0FE6                     	;# 
  3735  0FE7                     	;# 
  3736  0FE8                     	;# 
  3737  0FE9                     	;# 
  3738  0FEA                     	;# 
  3739  0FEB                     	;# 
  3740  0FED                     	;# 
  3741  0FEE                     	;# 
  3742  0FEF                     	;# 
  3743  0000                     	;# 
  3744  0001                     	;# 
  3745  0002                     	;# 
  3746  0003                     	;# 
  3747  0004                     	;# 
  3748  0005                     	;# 
  3749  0006                     	;# 
  3750  0007                     	;# 
  3751  0008                     	;# 
  3752  0009                     	;# 
  3753  000A                     	;# 
  3754  000B                     	;# 
  3755  000C                     	;# 
  3756  000D                     	;# 
  3757  000E                     	;# 
  3758  0010                     	;# 
  3759  0011                     	;# 
  3760  0012                     	;# 
  3761  0013                     	;# 
  3762  0016                     	;# 
  3763  0017                     	;# 
  3764  0018                     	;# 
  3765  001C                     	;# 
  3766  001C                     	;# 
  3767  001D                     	;# 
  3768  001D                     	;# 
  3769  001E                     	;# 
  3770  001F                     	;# 
  3771  008C                     	;# 
  3772  008C                     	;# 
  3773  008D                     	;# 
  3774  008E                     	;# 
  3775  008E                     	;# 
  3776  008F                     	;# 
  3777  0090                     	;# 
  3778  0090                     	;# 
  3779  0091                     	;# 
  3780  0093                     	;# 
  3781  0094                     	;# 
  3782  0095                     	;# 
  3783  0096                     	;# 
  3784  0097                     	;# 
  3785  0098                     	;# 
  3786  0099                     	;# 
  3787  009A                     	;# 
  3788  009B                     	;# 
  3789  009C                     	;# 
  3790  009D                     	;# 
  3791  009E                     	;# 
  3792  010C                     	;# 
  3793  010D                     	;# 
  3794  010E                     	;# 
  3795  010E                     	;# 
  3796  010F                     	;# 
  3797  0110                     	;# 
  3798  0110                     	;# 
  3799  0111                     	;# 
  3800  0112                     	;# 
  3801  0112                     	;# 
  3802  0113                     	;# 
  3803  0114                     	;# 
  3804  0114                     	;# 
  3805  0115                     	;# 
  3806  0116                     	;# 
  3807  0116                     	;# 
  3808  0117                     	;# 
  3809  0119                     	;# 
  3810  0119                     	;# 
  3811  0119                     	;# 
  3812  011A                     	;# 
  3813  011A                     	;# 
  3814  011A                     	;# 
  3815  011B                     	;# 
  3816  011B                     	;# 
  3817  011B                     	;# 
  3818  011B                     	;# 
  3819  011B                     	;# 
  3820  011C                     	;# 
  3821  011C                     	;# 
  3822  011C                     	;# 
  3823  011D                     	;# 
  3824  011D                     	;# 
  3825  011D                     	;# 
  3826  011E                     	;# 
  3827  011E                     	;# 
  3828  011E                     	;# 
  3829  011F                     	;# 
  3830  011F                     	;# 
  3831  011F                     	;# 
  3832  011F                     	;# 
  3833  011F                     	;# 
  3834  018C                     	;# 
  3835  018D                     	;# 
  3836  018E                     	;# 
  3837  018F                     	;# 
  3838  0190                     	;# 
  3839  0191                     	;# 
  3840  0192                     	;# 
  3841  0196                     	;# 
  3842  0197                     	;# 
  3843  0198                     	;# 
  3844  0199                     	;# 
  3845  019A                     	;# 
  3846  019B                     	;# 
  3847  019C                     	;# 
  3848  020C                     	;# 
  3849  020C                     	;# 
  3850  020D                     	;# 
  3851  020E                     	;# 
  3852  020F                     	;# 
  3853  020F                     	;# 
  3854  0210                     	;# 
  3855  0210                     	;# 
  3856  0211                     	;# 
  3857  0211                     	;# 
  3858  0212                     	;# 
  3859  0212                     	;# 
  3860  0213                     	;# 
  3861  0214                     	;# 
  3862  0215                     	;# 
  3863  0215                     	;# 
  3864  0216                     	;# 
  3865  0216                     	;# 
  3866  0217                     	;# 
  3867  0217                     	;# 
  3868  0218                     	;# 
  3869  0218                     	;# 
  3870  0219                     	;# 
  3871  021A                     	;# 
  3872  021B                     	;# 
  3873  021B                     	;# 
  3874  021C                     	;# 
  3875  021C                     	;# 
  3876  021D                     	;# 
  3877  021D                     	;# 
  3878  021E                     	;# 
  3879  021F                     	;# 
  3880  028C                     	;# 
  3881  028C                     	;# 
  3882  028D                     	;# 
  3883  028D                     	;# 
  3884  028E                     	;# 
  3885  028F                     	;# 
  3886  0290                     	;# 
  3887  0290                     	;# 
  3888  0291                     	;# 
  3889  0292                     	;# 
  3890  0292                     	;# 
  3891  0293                     	;# 
  3892  0293                     	;# 
  3893  0294                     	;# 
  3894  0295                     	;# 
  3895  0296                     	;# 
  3896  0296                     	;# 
  3897  0297                     	;# 
  3898  0298                     	;# 
  3899  0298                     	;# 
  3900  0299                     	;# 
  3901  0299                     	;# 
  3902  029A                     	;# 
  3903  029B                     	;# 
  3904  029C                     	;# 
  3905  029C                     	;# 
  3906  029D                     	;# 
  3907  030C                     	;# 
  3908  030C                     	;# 
  3909  030D                     	;# 
  3910  030E                     	;# 
  3911  030F                     	;# 
  3912  0310                     	;# 
  3913  0310                     	;# 
  3914  0311                     	;# 
  3915  0312                     	;# 
  3916  0313                     	;# 
  3917  0314                     	;# 
  3918  0314                     	;# 
  3919  0315                     	;# 
  3920  0316                     	;# 
  3921  0317                     	;# 
  3922  0318                     	;# 
  3923  0318                     	;# 
  3924  0319                     	;# 
  3925  031A                     	;# 
  3926  031B                     	;# 
  3927  031C                     	;# 
  3928  031C                     	;# 
  3929  031D                     	;# 
  3930  031E                     	;# 
  3931  031F                     	;# 
  3932  038C                     	;# 
  3933  038C                     	;# 
  3934  038D                     	;# 
  3935  038E                     	;# 
  3936  0390                     	;# 
  3937  0390                     	;# 
  3938  0391                     	;# 
  3939  0392                     	;# 
  3940  040C                     	;# 
  3941  040D                     	;# 
  3942  040E                     	;# 
  3943  040F                     	;# 
  3944  0410                     	;# 
  3945  0411                     	;# 
  3946  0416                     	;# 
  3947  0416                     	;# 
  3948  0417                     	;# 
  3949  0418                     	;# 
  3950  0418                     	;# 
  3951  0419                     	;# 
  3952  041A                     	;# 
  3953  041A                     	;# 
  3954  041B                     	;# 
  3955  041C                     	;# 
  3956  041C                     	;# 
  3957  041D                     	;# 
  3958  041E                     	;# 
  3959  041F                     	;# 
  3960  048C                     	;# 
  3961  048C                     	;# 
  3962  048D                     	;# 
  3963  048E                     	;# 
  3964  048F                     	;# 
  3965  048F                     	;# 
  3966  0490                     	;# 
  3967  0491                     	;# 
  3968  0492                     	;# 
  3969  0492                     	;# 
  3970  0493                     	;# 
  3971  0494                     	;# 
  3972  0495                     	;# 
  3973  0495                     	;# 
  3974  0496                     	;# 
  3975  0497                     	;# 
  3976  0498                     	;# 
  3977  0499                     	;# 
  3978  049A                     	;# 
  3979  049B                     	;# 
  3980  049C                     	;# 
  3981  049D                     	;# 
  3982  050C                     	;# 
  3983  050C                     	;# 
  3984  050D                     	;# 
  3985  050E                     	;# 
  3986  050F                     	;# 
  3987  050F                     	;# 
  3988  0510                     	;# 
  3989  0511                     	;# 
  3990  0512                     	;# 
  3991  0512                     	;# 
  3992  0513                     	;# 
  3993  0514                     	;# 
  3994  0515                     	;# 
  3995  0515                     	;# 
  3996  0516                     	;# 
  3997  0517                     	;# 
  3998  0518                     	;# 
  3999  0519                     	;# 
  4000  051A                     	;# 
  4001  051B                     	;# 
  4002  051C                     	;# 
  4003  051D                     	;# 
  4004  058C                     	;# 
  4005  058C                     	;# 
  4006  058D                     	;# 
  4007  058E                     	;# 
  4008  058F                     	;# 
  4009  058F                     	;# 
  4010  0590                     	;# 
  4011  0591                     	;# 
  4012  0592                     	;# 
  4013  0593                     	;# 
  4014  060C                     	;# 
  4015  060D                     	;# 
  4016  060E                     	;# 
  4017  060F                     	;# 
  4018  0610                     	;# 
  4019  0611                     	;# 
  4020  0612                     	;# 
  4021  0613                     	;# 
  4022  0614                     	;# 
  4023  0616                     	;# 
  4024  0617                     	;# 
  4025  0618                     	;# 
  4026  0619                     	;# 
  4027  061A                     	;# 
  4028  061B                     	;# 
  4029  061C                     	;# 
  4030  061D                     	;# 
  4031  061E                     	;# 
  4032  068C                     	;# 
  4033  068D                     	;# 
  4034  068E                     	;# 
  4035  068F                     	;# 
  4036  0690                     	;# 
  4037  0691                     	;# 
  4038  0692                     	;# 
  4039  0693                     	;# 
  4040  0694                     	;# 
  4041  070C                     	;# 
  4042  070D                     	;# 
  4043  070E                     	;# 
  4044  070F                     	;# 
  4045  0710                     	;# 
  4046  0711                     	;# 
  4047  0712                     	;# 
  4048  0713                     	;# 
  4049  0714                     	;# 
  4050  0716                     	;# 
  4051  0717                     	;# 
  4052  0718                     	;# 
  4053  0719                     	;# 
  4054  071A                     	;# 
  4055  071B                     	;# 
  4056  071C                     	;# 
  4057  071D                     	;# 
  4058  071E                     	;# 
  4059  0796                     	;# 
  4060  0797                     	;# 
  4061  0798                     	;# 
  4062  0799                     	;# 
  4063  079A                     	;# 
  4064  079B                     	;# 
  4065  080C                     	;# 
  4066  080D                     	;# 
  4067  080E                     	;# 
  4068  080F                     	;# 
  4069  0810                     	;# 
  4070  0811                     	;# 
  4071  0812                     	;# 
  4072  0813                     	;# 
  4073  0814                     	;# 
  4074  081A                     	;# 
  4075  081B                     	;# 
  4076  081C                     	;# 
  4077  081D                     	;# 
  4078  081E                     	;# 
  4079  081F                     	;# 
  4080  088C                     	;# 
  4081  088D                     	;# 
  4082  088E                     	;# 
  4083  088F                     	;# 
  4084  0890                     	;# 
  4085  0891                     	;# 
  4086  0892                     	;# 
  4087  0893                     	;# 
  4088  0895                     	;# 
  4089  0896                     	;# 
  4090  0897                     	;# 
  4091  0898                     	;# 
  4092  0899                     	;# 
  4093  089A                     	;# 
  4094  089B                     	;# 
  4095  090C                     	;# 
  4096  090E                     	;# 
  4097  090F                     	;# 
  4098  091F                     	;# 
  4099  091F                     	;# 
  4100  098F                     	;# 
  4101  098F                     	;# 
  4102  0990                     	;# 
  4103  0991                     	;# 
  4104  0992                     	;# 
  4105  0993                     	;# 
  4106  0994                     	;# 
  4107  0995                     	;# 
  4108  0996                     	;# 
  4109  0997                     	;# 
  4110  0E0F                     	;# 
  4111  0E10                     	;# 
  4112  0E11                     	;# 
  4113  0E12                     	;# 
  4114  0E13                     	;# 
  4115  0E14                     	;# 
  4116  0E15                     	;# 
  4117  0E16                     	;# 
  4118  0E17                     	;# 
  4119  0E18                     	;# 
  4120  0E19                     	;# 
  4121  0E1A                     	;# 
  4122  0E1B                     	;# 
  4123  0E1C                     	;# 
  4124  0E1D                     	;# 
  4125  0E1E                     	;# 
  4126  0E1F                     	;# 
  4127  0E20                     	;# 
  4128  0E21                     	;# 
  4129  0E22                     	;# 
  4130  0E23                     	;# 
  4131  0E24                     	;# 
  4132  0E25                     	;# 
  4133  0E26                     	;# 
  4134  0E27                     	;# 
  4135  0E28                     	;# 
  4136  0E29                     	;# 
  4137  0E2A                     	;# 
  4138  0E2B                     	;# 
  4139  0E2C                     	;# 
  4140  0E2D                     	;# 
  4141  0E2E                     	;# 
  4142  0E2F                     	;# 
  4143  0E30                     	;# 
  4144  0E31                     	;# 
  4145  0E32                     	;# 
  4146  0E33                     	;# 
  4147  0E34                     	;# 
  4148  0E35                     	;# 
  4149  0E36                     	;# 
  4150  0E37                     	;# 
  4151  0E8F                     	;# 
  4152  0E90                     	;# 
  4153  0E91                     	;# 
  4154  0E92                     	;# 
  4155  0E93                     	;# 
  4156  0E94                     	;# 
  4157  0E95                     	;# 
  4158  0E96                     	;# 
  4159  0E97                     	;# 
  4160  0E9C                     	;# 
  4161  0E9D                     	;# 
  4162  0E9E                     	;# 
  4163  0EA1                     	;# 
  4164  0EA2                     	;# 
  4165  0EA3                     	;# 
  4166  0EA4                     	;# 
  4167  0EA5                     	;# 
  4168  0EA9                     	;# 
  4169  0EAA                     	;# 
  4170  0EAB                     	;# 
  4171  0EAC                     	;# 
  4172  0EB1                     	;# 
  4173  0EB2                     	;# 
  4174  0EB3                     	;# 
  4175  0EB8                     	;# 
  4176  0EB9                     	;# 
  4177  0EBA                     	;# 
  4178  0EBB                     	;# 
  4179  0EBC                     	;# 
  4180  0EBD                     	;# 
  4181  0EBE                     	;# 
  4182  0EC3                     	;# 
  4183  0EC5                     	;# 
  4184  0EC6                     	;# 
  4185  0EC7                     	;# 
  4186  0EC8                     	;# 
  4187  0EC9                     	;# 
  4188  0ECA                     	;# 
  4189  0ECB                     	;# 
  4190  0ECC                     	;# 
  4191  0F10                     	;# 
  4192  0F11                     	;# 
  4193  0F12                     	;# 
  4194  0F13                     	;# 
  4195  0F14                     	;# 
  4196  0F15                     	;# 
  4197  0F16                     	;# 
  4198  0F17                     	;# 
  4199  0F18                     	;# 
  4200  0F19                     	;# 
  4201  0F1A                     	;# 
  4202  0F1B                     	;# 
  4203  0F1C                     	;# 
  4204  0F1D                     	;# 
  4205  0F1E                     	;# 
  4206  0F1F                     	;# 
  4207  0F20                     	;# 
  4208  0F21                     	;# 
  4209  0F22                     	;# 
  4210  0F23                     	;# 
  4211  0F24                     	;# 
  4212  0F25                     	;# 
  4213  0F26                     	;# 
  4214  0F27                     	;# 
  4215  0F38                     	;# 
  4216  0F39                     	;# 
  4217  0F3A                     	;# 
  4218  0F3B                     	;# 
  4219  0F3C                     	;# 
  4220  0F3D                     	;# 
  4221  0F3E                     	;# 
  4222  0F3F                     	;# 
  4223  0F40                     	;# 
  4224  0F41                     	;# 
  4225  0F43                     	;# 
  4226  0F44                     	;# 
  4227  0F45                     	;# 
  4228  0F46                     	;# 
  4229  0F47                     	;# 
  4230  0F48                     	;# 
  4231  0F49                     	;# 
  4232  0F4A                     	;# 
  4233  0F4B                     	;# 
  4234  0F4C                     	;# 
  4235  0F4E                     	;# 
  4236  0F4F                     	;# 
  4237  0F50                     	;# 
  4238  0F51                     	;# 
  4239  0F52                     	;# 
  4240  0F53                     	;# 
  4241  0F54                     	;# 
  4242  0F55                     	;# 
  4243  0F56                     	;# 
  4244  0F57                     	;# 
  4245  0F65                     	;# 
  4246  0F68                     	;# 
  4247  0F69                     	;# 
  4248  0F6A                     	;# 
  4249  0F6B                     	;# 
  4250  0FE4                     	;# 
  4251  0FE5                     	;# 
  4252  0FE6                     	;# 
  4253  0FE7                     	;# 
  4254  0FE8                     	;# 
  4255  0FE9                     	;# 
  4256  0FEA                     	;# 
  4257  0FEB                     	;# 
  4258  0FED                     	;# 
  4259  0FEE                     	;# 
  4260  0FEF                     	;# 
  4261  0000                     	;# 
  4262  0001                     	;# 
  4263  0002                     	;# 
  4264  0003                     	;# 
  4265  0004                     	;# 
  4266  0005                     	;# 
  4267  0006                     	;# 
  4268  0007                     	;# 
  4269  0008                     	;# 
  4270  0009                     	;# 
  4271  000A                     	;# 
  4272  000B                     	;# 
  4273  000C                     	;# 
  4274  000D                     	;# 
  4275  000E                     	;# 
  4276  0010                     	;# 
  4277  0011                     	;# 
  4278  0012                     	;# 
  4279  0013                     	;# 
  4280  0016                     	;# 
  4281  0017                     	;# 
  4282  0018                     	;# 
  4283  001C                     	;# 
  4284  001C                     	;# 
  4285  001D                     	;# 
  4286  001D                     	;# 
  4287  001E                     	;# 
  4288  001F                     	;# 
  4289  008C                     	;# 
  4290  008C                     	;# 
  4291  008D                     	;# 
  4292  008E                     	;# 
  4293  008E                     	;# 
  4294  008F                     	;# 
  4295  0090                     	;# 
  4296  0090                     	;# 
  4297  0091                     	;# 
  4298  0093                     	;# 
  4299  0094                     	;# 
  4300  0095                     	;# 
  4301  0096                     	;# 
  4302  0097                     	;# 
  4303  0098                     	;# 
  4304  0099                     	;# 
  4305  009A                     	;# 
  4306  009B                     	;# 
  4307  009C                     	;# 
  4308  009D                     	;# 
  4309  009E                     	;# 
  4310  010C                     	;# 
  4311  010D                     	;# 
  4312  010E                     	;# 
  4313  010E                     	;# 
  4314  010F                     	;# 
  4315  0110                     	;# 
  4316  0110                     	;# 
  4317  0111                     	;# 
  4318  0112                     	;# 
  4319  0112                     	;# 
  4320  0113                     	;# 
  4321  0114                     	;# 
  4322  0114                     	;# 
  4323  0115                     	;# 
  4324  0116                     	;# 
  4325  0116                     	;# 
  4326  0117                     	;# 
  4327  0119                     	;# 
  4328  0119                     	;# 
  4329  0119                     	;# 
  4330  011A                     	;# 
  4331  011A                     	;# 
  4332  011A                     	;# 
  4333  011B                     	;# 
  4334  011B                     	;# 
  4335  011B                     	;# 
  4336  011B                     	;# 
  4337  011B                     	;# 
  4338  011C                     	;# 
  4339  011C                     	;# 
  4340  011C                     	;# 
  4341  011D                     	;# 
  4342  011D                     	;# 
  4343  011D                     	;# 
  4344  011E                     	;# 
  4345  011E                     	;# 
  4346  011E                     	;# 
  4347  011F                     	;# 
  4348  011F                     	;# 
  4349  011F                     	;# 
  4350  011F                     	;# 
  4351  011F                     	;# 
  4352  018C                     	;# 
  4353  018D                     	;# 
  4354  018E                     	;# 
  4355  018F                     	;# 
  4356  0190                     	;# 
  4357  0191                     	;# 
  4358  0192                     	;# 
  4359  0196                     	;# 
  4360  0197                     	;# 
  4361  0198                     	;# 
  4362  0199                     	;# 
  4363  019A                     	;# 
  4364  019B                     	;# 
  4365  019C                     	;# 
  4366  020C                     	;# 
  4367  020C                     	;# 
  4368  020D                     	;# 
  4369  020E                     	;# 
  4370  020F                     	;# 
  4371  020F                     	;# 
  4372  0210                     	;# 
  4373  0210                     	;# 
  4374  0211                     	;# 
  4375  0211                     	;# 
  4376  0212                     	;# 
  4377  0212                     	;# 
  4378  0213                     	;# 
  4379  0214                     	;# 
  4380  0215                     	;# 
  4381  0215                     	;# 
  4382  0216                     	;# 
  4383  0216                     	;# 
  4384  0217                     	;# 
  4385  0217                     	;# 
  4386  0218                     	;# 
  4387  0218                     	;# 
  4388  0219                     	;# 
  4389  021A                     	;# 
  4390  021B                     	;# 
  4391  021B                     	;# 
  4392  021C                     	;# 
  4393  021C                     	;# 
  4394  021D                     	;# 
  4395  021D                     	;# 
  4396  021E                     	;# 
  4397  021F                     	;# 
  4398  028C                     	;# 
  4399  028C                     	;# 
  4400  028D                     	;# 
  4401  028D                     	;# 
  4402  028E                     	;# 
  4403  028F                     	;# 
  4404  0290                     	;# 
  4405  0290                     	;# 
  4406  0291                     	;# 
  4407  0292                     	;# 
  4408  0292                     	;# 
  4409  0293                     	;# 
  4410  0293                     	;# 
  4411  0294                     	;# 
  4412  0295                     	;# 
  4413  0296                     	;# 
  4414  0296                     	;# 
  4415  0297                     	;# 
  4416  0298                     	;# 
  4417  0298                     	;# 
  4418  0299                     	;# 
  4419  0299                     	;# 
  4420  029A                     	;# 
  4421  029B                     	;# 
  4422  029C                     	;# 
  4423  029C                     	;# 
  4424  029D                     	;# 
  4425  030C                     	;# 
  4426  030C                     	;# 
  4427  030D                     	;# 
  4428  030E                     	;# 
  4429  030F                     	;# 
  4430  0310                     	;# 
  4431  0310                     	;# 
  4432  0311                     	;# 
  4433  0312                     	;# 
  4434  0313                     	;# 
  4435  0314                     	;# 
  4436  0314                     	;# 
  4437  0315                     	;# 
  4438  0316                     	;# 
  4439  0317                     	;# 
  4440  0318                     	;# 
  4441  0318                     	;# 
  4442  0319                     	;# 
  4443  031A                     	;# 
  4444  031B                     	;# 
  4445  031C                     	;# 
  4446  031C                     	;# 
  4447  031D                     	;# 
  4448  031E                     	;# 
  4449  031F                     	;# 
  4450  038C                     	;# 
  4451  038C                     	;# 
  4452  038D                     	;# 
  4453  038E                     	;# 
  4454  0390                     	;# 
  4455  0390                     	;# 
  4456  0391                     	;# 
  4457  0392                     	;# 
  4458  040C                     	;# 
  4459  040D                     	;# 
  4460  040E                     	;# 
  4461  040F                     	;# 
  4462  0410                     	;# 
  4463  0411                     	;# 
  4464  0416                     	;# 
  4465  0416                     	;# 
  4466  0417                     	;# 
  4467  0418                     	;# 
  4468  0418                     	;# 
  4469  0419                     	;# 
  4470  041A                     	;# 
  4471  041A                     	;# 
  4472  041B                     	;# 
  4473  041C                     	;# 
  4474  041C                     	;# 
  4475  041D                     	;# 
  4476  041E                     	;# 
  4477  041F                     	;# 
  4478  048C                     	;# 
  4479  048C                     	;# 
  4480  048D                     	;# 
  4481  048E                     	;# 
  4482  048F                     	;# 
  4483  048F                     	;# 
  4484  0490                     	;# 
  4485  0491                     	;# 
  4486  0492                     	;# 
  4487  0492                     	;# 
  4488  0493                     	;# 
  4489  0494                     	;# 
  4490  0495                     	;# 
  4491  0495                     	;# 
  4492  0496                     	;# 
  4493  0497                     	;# 
  4494  0498                     	;# 
  4495  0499                     	;# 
  4496  049A                     	;# 
  4497  049B                     	;# 
  4498  049C                     	;# 
  4499  049D                     	;# 
  4500  050C                     	;# 
  4501  050C                     	;# 
  4502  050D                     	;# 
  4503  050E                     	;# 
  4504  050F                     	;# 
  4505  050F                     	;# 
  4506  0510                     	;# 
  4507  0511                     	;# 
  4508  0512                     	;# 
  4509  0512                     	;# 
  4510  0513                     	;# 
  4511  0514                     	;# 
  4512  0515                     	;# 
  4513  0515                     	;# 
  4514  0516                     	;# 
  4515  0517                     	;# 
  4516  0518                     	;# 
  4517  0519                     	;# 
  4518  051A                     	;# 
  4519  051B                     	;# 
  4520  051C                     	;# 
  4521  051D                     	;# 
  4522  058C                     	;# 
  4523  058C                     	;# 
  4524  058D                     	;# 
  4525  058E                     	;# 
  4526  058F                     	;# 
  4527  058F                     	;# 
  4528  0590                     	;# 
  4529  0591                     	;# 
  4530  0592                     	;# 
  4531  0593                     	;# 
  4532  060C                     	;# 
  4533  060D                     	;# 
  4534  060E                     	;# 
  4535  060F                     	;# 
  4536  0610                     	;# 
  4537  0611                     	;# 
  4538  0612                     	;# 
  4539  0613                     	;# 
  4540  0614                     	;# 
  4541  0616                     	;# 
  4542  0617                     	;# 
  4543  0618                     	;# 
  4544  0619                     	;# 
  4545  061A                     	;# 
  4546  061B                     	;# 
  4547  061C                     	;# 
  4548  061D                     	;# 
  4549  061E                     	;# 
  4550  068C                     	;# 
  4551  068D                     	;# 
  4552  068E                     	;# 
  4553  068F                     	;# 
  4554  0690                     	;# 
  4555  0691                     	;# 
  4556  0692                     	;# 
  4557  0693                     	;# 
  4558  0694                     	;# 
  4559  070C                     	;# 
  4560  070D                     	;# 
  4561  070E                     	;# 
  4562  070F                     	;# 
  4563  0710                     	;# 
  4564  0711                     	;# 
  4565  0712                     	;# 
  4566  0713                     	;# 
  4567  0714                     	;# 
  4568  0716                     	;# 
  4569  0717                     	;# 
  4570  0718                     	;# 
  4571  0719                     	;# 
  4572  071A                     	;# 
  4573  071B                     	;# 
  4574  071C                     	;# 
  4575  071D                     	;# 
  4576  071E                     	;# 
  4577  0796                     	;# 
  4578  0797                     	;# 
  4579  0798                     	;# 
  4580  0799                     	;# 
  4581  079A                     	;# 
  4582  079B                     	;# 
  4583  080C                     	;# 
  4584  080D                     	;# 
  4585  080E                     	;# 
  4586  080F                     	;# 
  4587  0810                     	;# 
  4588  0811                     	;# 
  4589  0812                     	;# 
  4590  0813                     	;# 
  4591  0814                     	;# 
  4592  081A                     	;# 
  4593  081B                     	;# 
  4594  081C                     	;# 
  4595  081D                     	;# 
  4596  081E                     	;# 
  4597  081F                     	;# 
  4598  088C                     	;# 
  4599  088D                     	;# 
  4600  088E                     	;# 
  4601  088F                     	;# 
  4602  0890                     	;# 
  4603  0891                     	;# 
  4604  0892                     	;# 
  4605  0893                     	;# 
  4606  0895                     	;# 
  4607  0896                     	;# 
  4608  0897                     	;# 
  4609  0898                     	;# 
  4610  0899                     	;# 
  4611  089A                     	;# 
  4612  089B                     	;# 
  4613  090C                     	;# 
  4614  090E                     	;# 
  4615  090F                     	;# 
  4616  091F                     	;# 
  4617  091F                     	;# 
  4618  098F                     	;# 
  4619  098F                     	;# 
  4620  0990                     	;# 
  4621  0991                     	;# 
  4622  0992                     	;# 
  4623  0993                     	;# 
  4624  0994                     	;# 
  4625  0995                     	;# 
  4626  0996                     	;# 
  4627  0997                     	;# 
  4628  0E0F                     	;# 
  4629  0E10                     	;# 
  4630  0E11                     	;# 
  4631  0E12                     	;# 
  4632  0E13                     	;# 
  4633  0E14                     	;# 
  4634  0E15                     	;# 
  4635  0E16                     	;# 
  4636  0E17                     	;# 
  4637  0E18                     	;# 
  4638  0E19                     	;# 
  4639  0E1A                     	;# 
  4640  0E1B                     	;# 
  4641  0E1C                     	;# 
  4642  0E1D                     	;# 
  4643  0E1E                     	;# 
  4644  0E1F                     	;# 
  4645  0E20                     	;# 
  4646  0E21                     	;# 
  4647  0E22                     	;# 
  4648  0E23                     	;# 
  4649  0E24                     	;# 
  4650  0E25                     	;# 
  4651  0E26                     	;# 
  4652  0E27                     	;# 
  4653  0E28                     	;# 
  4654  0E29                     	;# 
  4655  0E2A                     	;# 
  4656  0E2B                     	;# 
  4657  0E2C                     	;# 
  4658  0E2D                     	;# 
  4659  0E2E                     	;# 
  4660  0E2F                     	;# 
  4661  0E30                     	;# 
  4662  0E31                     	;# 
  4663  0E32                     	;# 
  4664  0E33                     	;# 
  4665  0E34                     	;# 
  4666  0E35                     	;# 
  4667  0E36                     	;# 
  4668  0E37                     	;# 
  4669  0E8F                     	;# 
  4670  0E90                     	;# 
  4671  0E91                     	;# 
  4672  0E92                     	;# 
  4673  0E93                     	;# 
  4674  0E94                     	;# 
  4675  0E95                     	;# 
  4676  0E96                     	;# 
  4677  0E97                     	;# 
  4678  0E9C                     	;# 
  4679  0E9D                     	;# 
  4680  0E9E                     	;# 
  4681  0EA1                     	;# 
  4682  0EA2                     	;# 
  4683  0EA3                     	;# 
  4684  0EA4                     	;# 
  4685  0EA5                     	;# 
  4686  0EA9                     	;# 
  4687  0EAA                     	;# 
  4688  0EAB                     	;# 
  4689  0EAC                     	;# 
  4690  0EB1                     	;# 
  4691  0EB2                     	;# 
  4692  0EB3                     	;# 
  4693  0EB8                     	;# 
  4694  0EB9                     	;# 
  4695  0EBA                     	;# 
  4696  0EBB                     	;# 
  4697  0EBC                     	;# 
  4698  0EBD                     	;# 
  4699  0EBE                     	;# 
  4700  0EC3                     	;# 
  4701  0EC5                     	;# 
  4702  0EC6                     	;# 
  4703  0EC7                     	;# 
  4704  0EC8                     	;# 
  4705  0EC9                     	;# 
  4706  0ECA                     	;# 
  4707  0ECB                     	;# 
  4708  0ECC                     	;# 
  4709  0F10                     	;# 
  4710  0F11                     	;# 
  4711  0F12                     	;# 
  4712  0F13                     	;# 
  4713  0F14                     	;# 
  4714  0F15                     	;# 
  4715  0F16                     	;# 
  4716  0F17                     	;# 
  4717  0F18                     	;# 
  4718  0F19                     	;# 
  4719  0F1A                     	;# 
  4720  0F1B                     	;# 
  4721  0F1C                     	;# 
  4722  0F1D                     	;# 
  4723  0F1E                     	;# 
  4724  0F1F                     	;# 
  4725  0F20                     	;# 
  4726  0F21                     	;# 
  4727  0F22                     	;# 
  4728  0F23                     	;# 
  4729  0F24                     	;# 
  4730  0F25                     	;# 
  4731  0F26                     	;# 
  4732  0F27                     	;# 
  4733  0F38                     	;# 
  4734  0F39                     	;# 
  4735  0F3A                     	;# 
  4736  0F3B                     	;# 
  4737  0F3C                     	;# 
  4738  0F3D                     	;# 
  4739  0F3E                     	;# 
  4740  0F3F                     	;# 
  4741  0F40                     	;# 
  4742  0F41                     	;# 
  4743  0F43                     	;# 
  4744  0F44                     	;# 
  4745  0F45                     	;# 
  4746  0F46                     	;# 
  4747  0F47                     	;# 
  4748  0F48                     	;# 
  4749  0F49                     	;# 
  4750  0F4A                     	;# 
  4751  0F4B                     	;# 
  4752  0F4C                     	;# 
  4753  0F4E                     	;# 
  4754  0F4F                     	;# 
  4755  0F50                     	;# 
  4756  0F51                     	;# 
  4757  0F52                     	;# 
  4758  0F53                     	;# 
  4759  0F54                     	;# 
  4760  0F55                     	;# 
  4761  0F56                     	;# 
  4762  0F57                     	;# 
  4763  0F65                     	;# 
  4764  0F68                     	;# 
  4765  0F69                     	;# 
  4766  0F6A                     	;# 
  4767  0F6B                     	;# 
  4768  0FE4                     	;# 
  4769  0FE5                     	;# 
  4770  0FE6                     	;# 
  4771  0FE7                     	;# 
  4772  0FE8                     	;# 
  4773  0FE9                     	;# 
  4774  0FEA                     	;# 
  4775  0FEB                     	;# 
  4776  0FED                     	;# 
  4777  0FEE                     	;# 
  4778  0FEF                     	;# 
  4779  0000                     	;# 
  4780  0001                     	;# 
  4781  0002                     	;# 
  4782  0003                     	;# 
  4783  0004                     	;# 
  4784  0005                     	;# 
  4785  0006                     	;# 
  4786  0007                     	;# 
  4787  0008                     	;# 
  4788  0009                     	;# 
  4789  000A                     	;# 
  4790  000B                     	;# 
  4791  000C                     	;# 
  4792  000D                     	;# 
  4793  000E                     	;# 
  4794  0010                     	;# 
  4795  0011                     	;# 
  4796  0012                     	;# 
  4797  0013                     	;# 
  4798  0016                     	;# 
  4799  0017                     	;# 
  4800  0018                     	;# 
  4801  001C                     	;# 
  4802  001C                     	;# 
  4803  001D                     	;# 
  4804  001D                     	;# 
  4805  001E                     	;# 
  4806  001F                     	;# 
  4807  008C                     	;# 
  4808  008C                     	;# 
  4809  008D                     	;# 
  4810  008E                     	;# 
  4811  008E                     	;# 
  4812  008F                     	;# 
  4813  0090                     	;# 
  4814  0090                     	;# 
  4815  0091                     	;# 
  4816  0093                     	;# 
  4817  0094                     	;# 
  4818  0095                     	;# 
  4819  0096                     	;# 
  4820  0097                     	;# 
  4821  0098                     	;# 
  4822  0099                     	;# 
  4823  009A                     	;# 
  4824  009B                     	;# 
  4825  009C                     	;# 
  4826  009D                     	;# 
  4827  009E                     	;# 
  4828  010C                     	;# 
  4829  010D                     	;# 
  4830  010E                     	;# 
  4831  010E                     	;# 
  4832  010F                     	;# 
  4833  0110                     	;# 
  4834  0110                     	;# 
  4835  0111                     	;# 
  4836  0112                     	;# 
  4837  0112                     	;# 
  4838  0113                     	;# 
  4839  0114                     	;# 
  4840  0114                     	;# 
  4841  0115                     	;# 
  4842  0116                     	;# 
  4843  0116                     	;# 
  4844  0117                     	;# 
  4845  0119                     	;# 
  4846  0119                     	;# 
  4847  0119                     	;# 
  4848  011A                     	;# 
  4849  011A                     	;# 
  4850  011A                     	;# 
  4851  011B                     	;# 
  4852  011B                     	;# 
  4853  011B                     	;# 
  4854  011B                     	;# 
  4855  011B                     	;# 
  4856  011C                     	;# 
  4857  011C                     	;# 
  4858  011C                     	;# 
  4859  011D                     	;# 
  4860  011D                     	;# 
  4861  011D                     	;# 
  4862  011E                     	;# 
  4863  011E                     	;# 
  4864  011E                     	;# 
  4865  011F                     	;# 
  4866  011F                     	;# 
  4867  011F                     	;# 
  4868  011F                     	;# 
  4869  011F                     	;# 
  4870  018C                     	;# 
  4871  018D                     	;# 
  4872  018E                     	;# 
  4873  018F                     	;# 
  4874  0190                     	;# 
  4875  0191                     	;# 
  4876  0192                     	;# 
  4877  0196                     	;# 
  4878  0197                     	;# 
  4879  0198                     	;# 
  4880  0199                     	;# 
  4881  019A                     	;# 
  4882  019B                     	;# 
  4883  019C                     	;# 
  4884  020C                     	;# 
  4885  020C                     	;# 
  4886  020D                     	;# 
  4887  020E                     	;# 
  4888  020F                     	;# 
  4889  020F                     	;# 
  4890  0210                     	;# 
  4891  0210                     	;# 
  4892  0211                     	;# 
  4893  0211                     	;# 
  4894  0212                     	;# 
  4895  0212                     	;# 
  4896  0213                     	;# 
  4897  0214                     	;# 
  4898  0215                     	;# 
  4899  0215                     	;# 
  4900  0216                     	;# 
  4901  0216                     	;# 
  4902  0217                     	;# 
  4903  0217                     	;# 
  4904  0218                     	;# 
  4905  0218                     	;# 
  4906  0219                     	;# 
  4907  021A                     	;# 
  4908  021B                     	;# 
  4909  021B                     	;# 
  4910  021C                     	;# 
  4911  021C                     	;# 
  4912  021D                     	;# 
  4913  021D                     	;# 
  4914  021E                     	;# 
  4915  021F                     	;# 
  4916  028C                     	;# 
  4917  028C                     	;# 
  4918  028D                     	;# 
  4919  028D                     	;# 
  4920  028E                     	;# 
  4921  028F                     	;# 
  4922  0290                     	;# 
  4923  0290                     	;# 
  4924  0291                     	;# 
  4925  0292                     	;# 
  4926  0292                     	;# 
  4927  0293                     	;# 
  4928  0293                     	;# 
  4929  0294                     	;# 
  4930  0295                     	;# 
  4931  0296                     	;# 
  4932  0296                     	;# 
  4933  0297                     	;# 
  4934  0298                     	;# 
  4935  0298                     	;# 
  4936  0299                     	;# 
  4937  0299                     	;# 
  4938  029A                     	;# 
  4939  029B                     	;# 
  4940  029C                     	;# 
  4941  029C                     	;# 
  4942  029D                     	;# 
  4943  030C                     	;# 
  4944  030C                     	;# 
  4945  030D                     	;# 
  4946  030E                     	;# 
  4947  030F                     	;# 
  4948  0310                     	;# 
  4949  0310                     	;# 
  4950  0311                     	;# 
  4951  0312                     	;# 
  4952  0313                     	;# 
  4953  0314                     	;# 
  4954  0314                     	;# 
  4955  0315                     	;# 
  4956  0316                     	;# 
  4957  0317                     	;# 
  4958  0318                     	;# 
  4959  0318                     	;# 
  4960  0319                     	;# 
  4961  031A                     	;# 
  4962  031B                     	;# 
  4963  031C                     	;# 
  4964  031C                     	;# 
  4965  031D                     	;# 
  4966  031E                     	;# 
  4967  031F                     	;# 
  4968  038C                     	;# 
  4969  038C                     	;# 
  4970  038D                     	;# 
  4971  038E                     	;# 
  4972  0390                     	;# 
  4973  0390                     	;# 
  4974  0391                     	;# 
  4975  0392                     	;# 
  4976  040C                     	;# 
  4977  040D                     	;# 
  4978  040E                     	;# 
  4979  040F                     	;# 
  4980  0410                     	;# 
  4981  0411                     	;# 
  4982  0416                     	;# 
  4983  0416                     	;# 
  4984  0417                     	;# 
  4985  0418                     	;# 
  4986  0418                     	;# 
  4987  0419                     	;# 
  4988  041A                     	;# 
  4989  041A                     	;# 
  4990  041B                     	;# 
  4991  041C                     	;# 
  4992  041C                     	;# 
  4993  041D                     	;# 
  4994  041E                     	;# 
  4995  041F                     	;# 
  4996  048C                     	;# 
  4997  048C                     	;# 
  4998  048D                     	;# 
  4999  048E                     	;# 
  5000  048F                     	;# 
  5001  048F                     	;# 
  5002  0490                     	;# 
  5003  0491                     	;# 
  5004  0492                     	;# 
  5005  0492                     	;# 
  5006  0493                     	;# 
  5007  0494                     	;# 
  5008  0495                     	;# 
  5009  0495                     	;# 
  5010  0496                     	;# 
  5011  0497                     	;# 
  5012  0498                     	;# 
  5013  0499                     	;# 
  5014  049A                     	;# 
  5015  049B                     	;# 
  5016  049C                     	;# 
  5017  049D                     	;# 
  5018  050C                     	;# 
  5019  050C                     	;# 
  5020  050D                     	;# 
  5021  050E                     	;# 
  5022  050F                     	;# 
  5023  050F                     	;# 
  5024  0510                     	;# 
  5025  0511                     	;# 
  5026  0512                     	;# 
  5027  0512                     	;# 
  5028  0513                     	;# 
  5029  0514                     	;# 
  5030  0515                     	;# 
  5031  0515                     	;# 
  5032  0516                     	;# 
  5033  0517                     	;# 
  5034  0518                     	;# 
  5035  0519                     	;# 
  5036  051A                     	;# 
  5037  051B                     	;# 
  5038  051C                     	;# 
  5039  051D                     	;# 
  5040  058C                     	;# 
  5041  058C                     	;# 
  5042  058D                     	;# 
  5043  058E                     	;# 
  5044  058F                     	;# 
  5045  058F                     	;# 
  5046  0590                     	;# 
  5047  0591                     	;# 
  5048  0592                     	;# 
  5049  0593                     	;# 
  5050  060C                     	;# 
  5051  060D                     	;# 
  5052  060E                     	;# 
  5053  060F                     	;# 
  5054  0610                     	;# 
  5055  0611                     	;# 
  5056  0612                     	;# 
  5057  0613                     	;# 
  5058  0614                     	;# 
  5059  0616                     	;# 
  5060  0617                     	;# 
  5061  0618                     	;# 
  5062  0619                     	;# 
  5063  061A                     	;# 
  5064  061B                     	;# 
  5065  061C                     	;# 
  5066  061D                     	;# 
  5067  061E                     	;# 
  5068  068C                     	;# 
  5069  068D                     	;# 
  5070  068E                     	;# 
  5071  068F                     	;# 
  5072  0690                     	;# 
  5073  0691                     	;# 
  5074  0692                     	;# 
  5075  0693                     	;# 
  5076  0694                     	;# 
  5077  070C                     	;# 
  5078  070D                     	;# 
  5079  070E                     	;# 
  5080  070F                     	;# 
  5081  0710                     	;# 
  5082  0711                     	;# 
  5083  0712                     	;# 
  5084  0713                     	;# 
  5085  0714                     	;# 
  5086  0716                     	;# 
  5087  0717                     	;# 
  5088  0718                     	;# 
  5089  0719                     	;# 
  5090  071A                     	;# 
  5091  071B                     	;# 
  5092  071C                     	;# 
  5093  071D                     	;# 
  5094  071E                     	;# 
  5095  0796                     	;# 
  5096  0797                     	;# 
  5097  0798                     	;# 
  5098  0799                     	;# 
  5099  079A                     	;# 
  5100  079B                     	;# 
  5101  080C                     	;# 
  5102  080D                     	;# 
  5103  080E                     	;# 
  5104  080F                     	;# 
  5105  0810                     	;# 
  5106  0811                     	;# 
  5107  0812                     	;# 
  5108  0813                     	;# 
  5109  0814                     	;# 
  5110  081A                     	;# 
  5111  081B                     	;# 
  5112  081C                     	;# 
  5113  081D                     	;# 
  5114  081E                     	;# 
  5115  081F                     	;# 
  5116  088C                     	;# 
  5117  088D                     	;# 
  5118  088E                     	;# 
  5119  088F                     	;# 
  5120  0890                     	;# 
  5121  0891                     	;# 
  5122  0892                     	;# 
  5123  0893                     	;# 
  5124  0895                     	;# 
  5125  0896                     	;# 
  5126  0897                     	;# 
  5127  0898                     	;# 
  5128  0899                     	;# 
  5129  089A                     	;# 
  5130  089B                     	;# 
  5131  090C                     	;# 
  5132  090E                     	;# 
  5133  090F                     	;# 
  5134  091F                     	;# 
  5135  091F                     	;# 
  5136  098F                     	;# 
  5137  098F                     	;# 
  5138  0990                     	;# 
  5139  0991                     	;# 
  5140  0992                     	;# 
  5141  0993                     	;# 
  5142  0994                     	;# 
  5143  0995                     	;# 
  5144  0996                     	;# 
  5145  0997                     	;# 
  5146  0E0F                     	;# 
  5147  0E10                     	;# 
  5148  0E11                     	;# 
  5149  0E12                     	;# 
  5150  0E13                     	;# 
  5151  0E14                     	;# 
  5152  0E15                     	;# 
  5153  0E16                     	;# 
  5154  0E17                     	;# 
  5155  0E18                     	;# 
  5156  0E19                     	;# 
  5157  0E1A                     	;# 
  5158  0E1B                     	;# 
  5159  0E1C                     	;# 
  5160  0E1D                     	;# 
  5161  0E1E                     	;# 
  5162  0E1F                     	;# 
  5163  0E20                     	;# 
  5164  0E21                     	;# 
  5165  0E22                     	;# 
  5166  0E23                     	;# 
  5167  0E24                     	;# 
  5168  0E25                     	;# 
  5169  0E26                     	;# 
  5170  0E27                     	;# 
  5171  0E28                     	;# 
  5172  0E29                     	;# 
  5173  0E2A                     	;# 
  5174  0E2B                     	;# 
  5175  0E2C                     	;# 
  5176  0E2D                     	;# 
  5177  0E2E                     	;# 
  5178  0E2F                     	;# 
  5179  0E30                     	;# 
  5180  0E31                     	;# 
  5181  0E32                     	;# 
  5182  0E33                     	;# 
  5183  0E34                     	;# 
  5184  0E35                     	;# 
  5185  0E36                     	;# 
  5186  0E37                     	;# 
  5187  0E8F                     	;# 
  5188  0E90                     	;# 
  5189  0E91                     	;# 
  5190  0E92                     	;# 
  5191  0E93                     	;# 
  5192  0E94                     	;# 
  5193  0E95                     	;# 
  5194  0E96                     	;# 
  5195  0E97                     	;# 
  5196  0E9C                     	;# 
  5197  0E9D                     	;# 
  5198  0E9E                     	;# 
  5199  0EA1                     	;# 
  5200  0EA2                     	;# 
  5201  0EA3                     	;# 
  5202  0EA4                     	;# 
  5203  0EA5                     	;# 
  5204  0EA9                     	;# 
  5205  0EAA                     	;# 
  5206  0EAB                     	;# 
  5207  0EAC                     	;# 
  5208  0EB1                     	;# 
  5209  0EB2                     	;# 
  5210  0EB3                     	;# 
  5211  0EB8                     	;# 
  5212  0EB9                     	;# 
  5213  0EBA                     	;# 
  5214  0EBB                     	;# 
  5215  0EBC                     	;# 
  5216  0EBD                     	;# 
  5217  0EBE                     	;# 
  5218  0EC3                     	;# 
  5219  0EC5                     	;# 
  5220  0EC6                     	;# 
  5221  0EC7                     	;# 
  5222  0EC8                     	;# 
  5223  0EC9                     	;# 
  5224  0ECA                     	;# 
  5225  0ECB                     	;# 
  5226  0ECC                     	;# 
  5227  0F10                     	;# 
  5228  0F11                     	;# 
  5229  0F12                     	;# 
  5230  0F13                     	;# 
  5231  0F14                     	;# 
  5232  0F15                     	;# 
  5233  0F16                     	;# 
  5234  0F17                     	;# 
  5235  0F18                     	;# 
  5236  0F19                     	;# 
  5237  0F1A                     	;# 
  5238  0F1B                     	;# 
  5239  0F1C                     	;# 
  5240  0F1D                     	;# 
  5241  0F1E                     	;# 
  5242  0F1F                     	;# 
  5243  0F20                     	;# 
  5244  0F21                     	;# 
  5245  0F22                     	;# 
  5246  0F23                     	;# 
  5247  0F24                     	;# 
  5248  0F25                     	;# 
  5249  0F26                     	;# 
  5250  0F27                     	;# 
  5251  0F38                     	;# 
  5252  0F39                     	;# 
  5253  0F3A                     	;# 
  5254  0F3B                     	;# 
  5255  0F3C                     	;# 
  5256  0F3D                     	;# 
  5257  0F3E                     	;# 
  5258  0F3F                     	;# 
  5259  0F40                     	;# 
  5260  0F41                     	;# 
  5261  0F43                     	;# 
  5262  0F44                     	;# 
  5263  0F45                     	;# 
  5264  0F46                     	;# 
  5265  0F47                     	;# 
  5266  0F48                     	;# 
  5267  0F49                     	;# 
  5268  0F4A                     	;# 
  5269  0F4B                     	;# 
  5270  0F4C                     	;# 
  5271  0F4E                     	;# 
  5272  0F4F                     	;# 
  5273  0F50                     	;# 
  5274  0F51                     	;# 
  5275  0F52                     	;# 
  5276  0F53                     	;# 
  5277  0F54                     	;# 
  5278  0F55                     	;# 
  5279  0F56                     	;# 
  5280  0F57                     	;# 
  5281  0F65                     	;# 
  5282  0F68                     	;# 
  5283  0F69                     	;# 
  5284  0F6A                     	;# 
  5285  0F6B                     	;# 
  5286  0FE4                     	;# 
  5287  0FE5                     	;# 
  5288  0FE6                     	;# 
  5289  0FE7                     	;# 
  5290  0FE8                     	;# 
  5291  0FE9                     	;# 
  5292  0FEA                     	;# 
  5293  0FEB                     	;# 
  5294  0FED                     	;# 
  5295  0FEE                     	;# 
  5296  0FEF                     	;# 
  5297                           
  5298 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  5299  0000                     
  5300 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  5301  0000                     
  5302 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  5303  0000                     
  5304                           	psect	nvBANK2
  5305  014A                     __pnvBANK2:	
  5306  014A                     _EUSART_ErrorHandler:	
  5307  014A                     	ds	2
  5308  014C                     _EUSART_OverrunErrorHandler:	
  5309  014C                     	ds	2
  5310  014E                     _EUSART_FramingErrorHandler:	
  5311  014E                     	ds	2
  5312  0150                     _timer1ReloadVal:	
  5313  0150                     	ds	2
  5314  0018                     _LATCbits	set	24
  5315  0016                     _LATAbits	set	22
  5316  0017                     _LATBbits	set	23
  5317  0013                     _TRISC	set	19
  5318  0012                     _TRISB	set	18
  5319  0011                     _TRISA	set	17
  5320  0018                     _LATC	set	24
  5321  0017                     _LATB	set	23
  5322  0016                     _LATA	set	22
  5323  011A                     _TX1REG	set	282
  5324  0119                     _RC1REG	set	281
  5325  011D                     _RC1STAbits	set	285
  5326  011E                     _TX1STAbits	set	286
  5327  011C                     _SP1BRGH	set	284
  5328  011B                     _SP1BRGL	set	283
  5329  011E                     _TX1STA	set	286
  5330  011D                     _RC1STA	set	285
  5331  011F                     _BAUD1CON	set	287
  5332  021F                     _CCPTMRS1bits	set	543
  5333  020F                     _T1GCONbits	set	527
  5334  020E                     _T1CONbits	set	526
  5335  020E                     _T1CON	set	526
  5336  020C                     _TMR1L	set	524
  5337  020D                     _TMR1H	set	525
  5338  0211                     _T1CLK	set	529
  5339  0210                     _T1GATE	set	528
  5340  020F                     _T1GCON	set	527
  5341  0299                     _PR6	set	665
  5342  0298                     _TMR6	set	664
  5343  029A                     _T6CONbits	set	666
  5344  029D                     _T6RSTbits	set	669
  5345  029B                     _T6HLTbits	set	667
  5346  029A                     _T6CON	set	666
  5347  0298                     _T6TMR	set	664
  5348  0299                     _T6PR	set	665
  5349  029D                     _T6RST	set	669
  5350  029B                     _T6HLT	set	667
  5351  029C                     _T6CLKCON	set	668
  5352  028D                     _PR2	set	653
  5353  028C                     _TMR2	set	652
  5354  028E                     _T2CONbits	set	654
  5355  0291                     _T2RSTbits	set	657
  5356  028F                     _T2HLTbits	set	655
  5357  028E                     _T2CON	set	654
  5358  028C                     _T2TMR	set	652
  5359  028D                     _T2PR	set	653
  5360  0291                     _T2RST	set	657
  5361  028F                     _T2HLT	set	655
  5362  0290                     _T2CLKCON	set	656
  5363  0390                     _PWM7DCL	set	912
  5364  0391                     _PWM7DCH	set	913
  5365  0392                     _PWM7CON	set	914
  5366  070F                     _PIR3bits	set	1807
  5367  0710                     _PIR4bits	set	1808
  5368  3888                     _TMR1GIF	set	14472
  5369  079B                     _PMD5	set	1947
  5370  079A                     _PMD4	set	1946
  5371  0799                     _PMD3	set	1945
  5372  0798                     _PMD2	set	1944
  5373  0797                     _PMD1	set	1943
  5374  0796                     _PMD0	set	1942
  5375  0892                     _OSCTUNE	set	2194
  5376  0893                     _OSCFRQ	set	2195
  5377  0891                     _OSCEN	set	2193
  5378  088F                     _OSCCON3	set	2191
  5379  088D                     _OSCCON1	set	2189
  5380  0E10                     _CLC1CONbits	set	3600
  5381  0E10                     _CLC1CON	set	3600
  5382  0E19                     _CLC1GLS3	set	3609
  5383  0E18                     _CLC1GLS2	set	3608
  5384  0E17                     _CLC1GLS1	set	3607
  5385  0E16                     _CLC1GLS0	set	3606
  5386  0E15                     _CLC1SEL3	set	3605
  5387  0E14                     _CLC1SEL2	set	3604
  5388  0E13                     _CLC1SEL1	set	3603
  5389  0E12                     _CLC1SEL0	set	3602
  5390  0E11                     _CLC1POL	set	3601
  5391  0E9E                     _T6AINPPS	set	3742
  5392  0E9C                     _T2AINPPS	set	3740
  5393  0E93                     _T1GPPS	set	3731
  5394  0ECB                     _RXPPS	set	3787
  5395  0F24                     _RC4PPS	set	3876
  5396  0F20                     _RC0PPS	set	3872
  5397  0F51                     _SLRCONC	set	3921
  5398  0F46                     _SLRCONB	set	3910
  5399  0F3B                     _SLRCONA	set	3899
  5400  0F50                     _ODCONC	set	3920
  5401  0F45                     _ODCONB	set	3909
  5402  0F3A                     _ODCONA	set	3898
  5403  0F4F                     _WPUC	set	3919
  5404  0F39                     _WPUA	set	3897
  5405  0F44                     _WPUB	set	3908
  5406  0F65                     _WPUE	set	3941
  5407  0F38                     _ANSELA	set	3896
  5408  0F43                     _ANSELB	set	3907
  5409  0F4E                     _ANSELC	set	3918
  5410                           
  5411                           	psect	stringtext1
  5412  1800                     __pstringtext1:	
  5413  1800                     STR_3:	
  5414  1800  340A               	retlw	10
  5415  1801  340D               	retlw	13
  5416  1802  3445               	retlw	69	;'E'
  5417  1803  3463               	retlw	99	;'c'
  5418  1804  3468               	retlw	104	;'h'
  5419  1805  346F               	retlw	111	;'o'
  5420  1806  3420               	retlw	32	;' '
  5421  1807  3477               	retlw	119	;'w'
  5422  1808  3461               	retlw	97	;'a'
  5423  1809  3473               	retlw	115	;'s'
  5424  180A  3420               	retlw	32	;' '
  5425  180B  346A               	retlw	106	;'j'
  5426  180C  3475               	retlw	117	;'u'
  5427  180D  3473               	retlw	115	;'s'
  5428  180E  3474               	retlw	116	;'t'
  5429  180F  3420               	retlw	32	;' '
  5430  1810  3463               	retlw	99	;'c'
  5431  1811  3461               	retlw	97	;'a'
  5432  1812  346C               	retlw	108	;'l'
  5433  1813  346C               	retlw	108	;'l'
  5434  1814  3465               	retlw	101	;'e'
  5435  1815  3464               	retlw	100	;'d'
  5436  1816  3420               	retlw	32	;' '
  5437  1817  3425               	retlw	37	;'%'
  5438  1818  3466               	retlw	102	;'f'
  5439  1819  3400               	retlw	0
  5440                           
  5441                           	psect	stringtext2
  5442  181A                     __pstringtext2:	
  5443  181A                     STR_6:	
  5444  181A  340A               	retlw	10
  5445  181B  340D               	retlw	13
  5446  181C  346D               	retlw	109	;'m'
  5447  181D  346F               	retlw	111	;'o'
  5448  181E  3476               	retlw	118	;'v'
  5449  181F  3469               	retlw	105	;'i'
  5450  1820  346E               	retlw	110	;'n'
  5451  1821  3467               	retlw	103	;'g'
  5452  1822  3420               	retlw	32	;' '
  5453  1823  3442               	retlw	66	;'B'
  5454  1824  3461               	retlw	97	;'a'
  5455  1825  3463               	retlw	99	;'c'
  5456  1826  346B               	retlw	107	;'k'
  5457  1827  3477               	retlw	119	;'w'
  5458  1828  3461               	retlw	97	;'a'
  5459  1829  3472               	retlw	114	;'r'
  5460  182A  3464               	retlw	100	;'d'
  5461  182B  3473               	retlw	115	;'s'
  5462  182C  3400               	retlw	0
  5463                           
  5464                           	psect	stringtext3
  5465  182D                     __pstringtext3:	
  5466  182D                     STR_2:	
  5467  182D  340A               	retlw	10
  5468  182E  340D               	retlw	13
  5469  182F  3453               	retlw	83	;'S'
  5470  1830  3454               	retlw	84	;'T'
  5471  1831  344F               	retlw	79	;'O'
  5472  1832  3450               	retlw	80	;'P'
  5473  1833  3445               	retlw	69	;'E'
  5474  1834  3444               	retlw	68	;'D'
  5475  1835  3420               	retlw	32	;' '
  5476  1836  344D               	retlw	77	;'M'
  5477  1837  346F               	retlw	111	;'o'
  5478  1838  3474               	retlw	116	;'t'
  5479  1839  346F               	retlw	111	;'o'
  5480  183A  3472               	retlw	114	;'r'
  5481  183B  3473               	retlw	115	;'s'
  5482  183C  3400               	retlw	0
  5483                           
  5484                           	psect	stringtext4
  5485  183D                     __pstringtext4:	
  5486  183D                     STR_4:	
  5487  183D  340A               	retlw	10
  5488  183E  340D               	retlw	13
  5489  183F  3474               	retlw	116	;'t'
  5490  1840  3475               	retlw	117	;'u'
  5491  1841  3472               	retlw	114	;'r'
  5492  1842  346E               	retlw	110	;'n'
  5493  1843  3469               	retlw	105	;'i'
  5494  1844  346E               	retlw	110	;'n'
  5495  1845  3467               	retlw	103	;'g'
  5496  1846  3420               	retlw	32	;' '
  5497  1847  3452               	retlw	82	;'R'
  5498  1848  3469               	retlw	105	;'i'
  5499  1849  3467               	retlw	103	;'g'
  5500  184A  3468               	retlw	104	;'h'
  5501  184B  3474               	retlw	116	;'t'
  5502  184C  3400               	retlw	0
  5503                           
  5504                           	psect	stringtext5
  5505  184D                     __pstringtext5:	
  5506  184D                     STR_5:	
  5507  184D  340A               	retlw	10
  5508  184E  340D               	retlw	13
  5509  184F  3474               	retlw	116	;'t'
  5510  1850  3475               	retlw	117	;'u'
  5511  1851  3472               	retlw	114	;'r'
  5512  1852  346E               	retlw	110	;'n'
  5513  1853  3469               	retlw	105	;'i'
  5514  1854  346E               	retlw	110	;'n'
  5515  1855  3467               	retlw	103	;'g'
  5516  1856  3420               	retlw	32	;' '
  5517  1857  344C               	retlw	76	;'L'
  5518  1858  3465               	retlw	101	;'e'
  5519  1859  3466               	retlw	102	;'f'
  5520  185A  3474               	retlw	116	;'t'
  5521  185B  3400               	retlw	0
  5522                           
  5523                           	psect	stringtext6
  5524  185C                     __pstringtext6:	
  5525  185C                     STR_1:	
  5526  185C  340A               	retlw	10
  5527  185D  340D               	retlw	13
  5528  185E  3463               	retlw	99	;'c'
  5529  185F  346F               	retlw	111	;'o'
  5530  1860  3475               	retlw	117	;'u'
  5531  1861  346E               	retlw	110	;'n'
  5532  1862  3474               	retlw	116	;'t'
  5533  1863  3420               	retlw	32	;' '
  5534  1864  343A               	retlw	58	;':'
  5535  1865  3420               	retlw	32	;' '
  5536  1866  3425               	retlw	37	;'%'
  5537  1867  3464               	retlw	100	;'d'
  5538  1868  3400               	retlw	0
  5539                           
  5540                           	psect	stringtext7
  5541  1869                     __pstringtext7:	
  5542  1869                     STR_7:	
  5543  1869  3449               	retlw	73	;'I'
  5544  186A  344E               	retlw	78	;'N'
  5545  186B  3446               	retlw	70	;'F'
  5546  186C  3400               	retlw	0
  5547                           
  5548                           	psect	stringtext8
  5549  186D                     __pstringtext8:	
  5550  186D                     STR_11:	
  5551  186D  344E               	retlw	78	;'N'
  5552  186E  3441               	retlw	65	;'A'
  5553  186F  344E               	retlw	78	;'N'
  5554  1870  3400               	retlw	0
  5555                           
  5556                           	psect	stringtext9
  5557  1871                     __pstringtext9:	
  5558  1871                     STR_8:	
  5559  1871  3469               	retlw	105	;'i'
  5560  1872  346E               	retlw	110	;'n'
  5561  1873  3466               	retlw	102	;'f'
  5562  1874  3400               	retlw	0
  5563                           
  5564                           	psect	stringtext10
  5565  1875                     __pstringtext10:	
  5566  1875                     STR_12:	
  5567  1875  346E               	retlw	110	;'n'
  5568  1876  3461               	retlw	97	;'a'
  5569  1877  346E               	retlw	110	;'n'
  5570  1878  3400               	retlw	0
  5571                           
  5572                           	psect	stringtext11
  5573  1879                     __pstringtext11:	
  5574  1879                     STR_15:	
  5575  1879  346C               	retlw	108	;'l'
  5576  187A  3466               	retlw	102	;'f'
  5577  187B  3400               	retlw	0
  5578                           
  5579                           	psect	stringtext12
  5580  0000                     __pstringtext12:	
  5581  1879                     
  5582                           ; #config settings
  5583  0000                     
  5584                           	psect	cinit
  5585  07EC                     start_initialization:	
  5586  07EC                     __initialization:	
  5587                           
  5588                           ; Clear objects allocated to BANK0
  5589  07EC  0020               	movlb	0	; select bank0
  5590  07ED  01EF               	clrf	__pbssBANK0& (0+127)
  5591                           
  5592                           ; Clear objects allocated to BANK2
  5593  07EE  303A               	movlw	low __pbssBANK2
  5594  07EF  0084               	movwf	4
  5595  07F0  3001               	movlw	high __pbssBANK2
  5596  07F1  0085               	movwf	5
  5597  07F2  3010               	movlw	16
  5598  07F3  319E  26C4  3187   	fcall	clear_ram0
  5599                           
  5600                           ; Clear objects allocated to BANK3
  5601  07F6  30A0               	movlw	low __pbssBANK3
  5602  07F7  0084               	movwf	4
  5603  07F8  3001               	movlw	high __pbssBANK3
  5604  07F9  0085               	movwf	5
  5605  07FA  3050               	movlw	80
  5606  07FB  319E  26C4         	fcall	clear_ram0
  5607  07FD                     end_of_initialization:	
  5608                           ;End of C runtime variable initialization code
  5609                           
  5610  07FD                     __end_of__initialization:	
  5611  07FD  0020               	movlb	0
  5612  07FE  3194  2CB6         	ljmp	_main	;jump to C main() function
  5613                           
  5614                           	psect	bssBANK0
  5615  006F                     __pbssBANK0:	
  5616  006F                     _eusartRxLastError:	
  5617  006F                     	ds	1
  5618                           
  5619                           	psect	bssBANK2
  5620  013A                     __pbssBANK2:	
  5621  013A                     floorf@F524:	
  5622  013A                     	ds	4
  5623  013E                     ___fpclassifyf@F463:	
  5624  013E                     	ds	4
  5625  0142                     _nout:	
  5626  0142                     	ds	2
  5627  0144                     _width:	
  5628  0144                     	ds	2
  5629  0146                     _prec:	
  5630  0146                     	ds	2
  5631  0148                     _flags:	
  5632  0148                     	ds	2
  5633                           
  5634                           	psect	bssBANK3
  5635  01A0                     __pbssBANK3:	
  5636  01A0                     _dbuf:	
  5637  01A0                     	ds	80
  5638                           
  5639                           	psect	clrtext
  5640  1EC4                     clear_ram0:	
  5641                           ;	Called with FSR0 containing the base address, and
  5642                           ;	WREG with the size to clear
  5643                           
  5644  1EC4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5645  1EC5                     clrloop0:	
  5646  1EC5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5647  1EC6  3101               	addfsr 0,1
  5648  1EC7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5649  1EC8  2EC5               	goto	clrloop0	;have we reached the end yet?
  5650  1EC9  3400               	retlw	0	;all done for this memory range, return
  5651                           
  5652                           	psect	cstackBANK2
  5653  0120                     __pcstackBANK2:	
  5654  0120                     ?_printf:	
  5655  0120                     printf@fmt:	
  5656                           ; 2 bytes @ 0x0
  5657                           
  5658                           
  5659                           ; 2 bytes @ 0x0
  5660  0120                     	ds	6
  5661  0126                     ?_echo:	
  5662                           
  5663                           ; 4 bytes @ 0x6
  5664  0126                     	ds	4
  5665  012A                     ??_echo:	
  5666                           
  5667                           ; 1 bytes @ 0xA
  5668  012A                     	ds	4
  5669  012E                     echo@look:	
  5670                           
  5671                           ; 4 bytes @ 0xE
  5672  012E                     	ds	4
  5673  0132                     ??_main:	
  5674                           
  5675                           ; 1 bytes @ 0x12
  5676  0132                     	ds	2
  5677  0134                     main@look:	
  5678                           
  5679                           ; 4 bytes @ 0x14
  5680  0134                     	ds	4
  5681  0138                     main@count:	
  5682                           
  5683                           ; 2 bytes @ 0x18
  5684  0138                     	ds	2
  5685                           
  5686                           	psect	cstackBANK1
  5687  00A0                     __pcstackBANK1:	
  5688  00A0                     efgtoa@ou:	
  5689                           
  5690                           ; 4 bytes @ 0x0
  5691  00A0                     	ds	4
  5692  00A4                     _efgtoa$1411:	
  5693                           
  5694                           ; 2 bytes @ 0x4
  5695  00A4                     	ds	2
  5696  00A6                     _efgtoa$1412:	
  5697                           
  5698                           ; 2 bytes @ 0x6
  5699  00A6                     	ds	2
  5700  00A8                     _efgtoa$1416:	
  5701                           
  5702                           ; 2 bytes @ 0x8
  5703  00A8                     	ds	2
  5704  00AA                     _efgtoa$1420:	
  5705                           
  5706                           ; 2 bytes @ 0xA
  5707  00AA                     	ds	2
  5708  00AC                     _efgtoa$1421:	
  5709                           
  5710                           ; 2 bytes @ 0xC
  5711  00AC                     	ds	2
  5712  00AE                     _efgtoa$1422:	
  5713                           
  5714                           ; 2 bytes @ 0xE
  5715  00AE                     	ds	2
  5716  00B0                     efgtoa@t:	
  5717                           
  5718                           ; 2 bytes @ 0x10
  5719  00B0                     	ds	2
  5720  00B2                     efgtoa@pp:	
  5721                           
  5722                           ; 2 bytes @ 0x12
  5723  00B2                     	ds	2
  5724  00B4                     efgtoa@m:	
  5725                           
  5726                           ; 2 bytes @ 0x14
  5727  00B4                     	ds	2
  5728  00B6                     efgtoa@ne:	
  5729                           
  5730                           ; 2 bytes @ 0x16
  5731  00B6                     	ds	2
  5732  00B8                     efgtoa@d:	
  5733                           
  5734                           ; 2 bytes @ 0x18
  5735  00B8                     	ds	2
  5736  00BA                     efgtoa@sign:	
  5737                           
  5738                           ; 2 bytes @ 0x1A
  5739  00BA                     	ds	2
  5740  00BC                     efgtoa@p:	
  5741                           
  5742                           ; 2 bytes @ 0x1C
  5743  00BC                     	ds	2
  5744  00BE                     efgtoa@fp:	
  5745                           
  5746                           ; 1 bytes @ 0x1E
  5747  00BE                     	ds	1
  5748  00BF                     efgtoa@nmode:	
  5749                           
  5750                           ; 1 bytes @ 0x1F
  5751  00BF                     	ds	1
  5752  00C0                     efgtoa@w:	
  5753                           
  5754                           ; 2 bytes @ 0x20
  5755  00C0                     	ds	2
  5756  00C2                     efgtoa@mode:	
  5757                           
  5758                           ; 1 bytes @ 0x22
  5759  00C2                     	ds	1
  5760  00C3                     efgtoa@h:	
  5761                           
  5762                           ; 4 bytes @ 0x23
  5763  00C3                     	ds	4
  5764  00C7                     efgtoa@l:	
  5765                           
  5766                           ; 4 bytes @ 0x27
  5767  00C7                     	ds	4
  5768  00CB                     efgtoa@i:	
  5769                           
  5770                           ; 2 bytes @ 0x2B
  5771  00CB                     	ds	2
  5772  00CD                     efgtoa@g:	
  5773                           
  5774                           ; 4 bytes @ 0x2D
  5775  00CD                     	ds	4
  5776  00D1                     efgtoa@e:	
  5777                           
  5778                           ; 2 bytes @ 0x31
  5779  00D1                     	ds	2
  5780  00D3                     efgtoa@n:	
  5781                           
  5782                           ; 2 bytes @ 0x33
  5783  00D3                     	ds	2
  5784  00D5                     efgtoa@u:	
  5785                           
  5786                           ; 4 bytes @ 0x35
  5787  00D5                     	ds	4
  5788  00D9                     vfpfcnvrt@ll:	
  5789                           
  5790                           ; 8 bytes @ 0x39
  5791  00D9                     	ds	8
  5792  00E1                     _vfpfcnvrt$1440:	
  5793                           
  5794                           ; 2 bytes @ 0x41
  5795  00E1                     	ds	2
  5796  00E3                     vfpfcnvrt@f:	
  5797                           
  5798                           ; 4 bytes @ 0x43
  5799  00E3                     	ds	4
  5800  00E7                     vfpfcnvrt@ct:	
  5801                           
  5802                           ; 3 bytes @ 0x47
  5803  00E7                     	ds	3
  5804  00EA                     vfpfcnvrt@c:	
  5805                           
  5806                           ; 1 bytes @ 0x4A
  5807  00EA                     	ds	1
  5808  00EB                     vfpfcnvrt@fp:	
  5809                           
  5810                           ; 1 bytes @ 0x4B
  5811  00EB                     	ds	3
  5812  00EE                     printf@ap:	
  5813                           
  5814                           ; 1 bytes @ 0x4E
  5815  00EE                     	ds	1
  5816                           
  5817                           	psect	cstackCOMMON
  5818  0070                     __pcstackCOMMON:	
  5819  0070                     ?___fleq:	
  5820  0070                     ?_PMD_Initialize:	
  5821                           ; 1 bit 
  5822                           
  5823  0070                     ??_PMD_Initialize:	
  5824                           ; 1 bytes @ 0x0
  5825                           
  5826  0070                     ?_PIN_MANAGER_Initialize:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0070                     ??_PIN_MANAGER_Initialize:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ?_OSCILLATOR_Initialize:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ??_OSCILLATOR_Initialize:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ?_TMR6_Initialize:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ??_TMR6_Initialize:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_PWM7_Initialize:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ??_PWM7_Initialize:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_EUSART_Initialize:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_Stop:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ??_Stop:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ?_Forward:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ??_Forward:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_Backwards:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?_Right:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?_EUSART_SetFramingErrorHandler:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?_EUSART_SetOverrunErrorHandler:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_EUSART_SetErrorHandler:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_strcpy:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_TMR1_Initialize:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ??_TMR1_Initialize:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_TMR1_WriteTimer:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?_TMR1_StartSinglePulseAcquisition:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ??_TMR1_StartSinglePulseAcquisition:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ?_CLC1_Initialize:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     ??_CLC1_Initialize:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0070                     ?_CLC1_OutputStatusGet:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0070                     ??_CLC1_OutputStatusGet:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0070                     ?_TMR2_Initialize:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0070                     ??_TMR2_Initialize:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0070                     ?_SYSTEM_Initialize:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     ?_main:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     ?_EUSART_Write:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0070                     ??_EUSART_Write:	
  5926                           ; 1 bytes @ 0x0
  5927                           
  5928  0070                     ?_putch:	
  5929                           ; 1 bytes @ 0x0
  5930                           
  5931  0070                     ??___aodiv:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0070                     ??___aomod:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0070                     ?_strlen:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0070                     ?___fpclassifyf:	
  5941                           ; 2 bytes @ 0x0
  5942                           
  5943  0070                     ?_isupper:	
  5944                           ; 2 bytes @ 0x0
  5945                           
  5946  0070                     ?_strncmp:	
  5947                           ; 2 bytes @ 0x0
  5948                           
  5949  0070                     ?__Umul8_16:	
  5950                           ; 2 bytes @ 0x0
  5951                           
  5952  0070                     ?_TMR1_ReadTimer:	
  5953                           ; 2 bytes @ 0x0
  5954                           
  5955  0070                     ?___awdiv:	
  5956                           ; 2 bytes @ 0x0
  5957                           
  5958  0070                     ?___awmod:	
  5959                           ; 2 bytes @ 0x0
  5960                           
  5961  0070                     ?___flneg:	
  5962                           ; 2 bytes @ 0x0
  5963                           
  5964  0070                     ?___fltol:	
  5965                           ; 4 bytes @ 0x0
  5966                           
  5967  0070                     ?___fladd:	
  5968                           ; 4 bytes @ 0x0
  5969                           
  5970  0070                     ?___fldiv:	
  5971                           ; 4 bytes @ 0x0
  5972                           
  5973  0070                     EUSART_Write@txData:	
  5974                           ; 4 bytes @ 0x0
  5975                           
  5976  0070                     __Umul8_16@multiplicand:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     TMR1_WriteTimer@timerVal:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  5983                           ; 2 bytes @ 0x0
  5984                           
  5985  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  5986                           ; 2 bytes @ 0x0
  5987                           
  5988  0070                     EUSART_SetErrorHandler@interruptHandler:	
  5989                           ; 2 bytes @ 0x0
  5990                           
  5991  0070                     ___awdiv@divisor:	
  5992                           ; 2 bytes @ 0x0
  5993                           
  5994  0070                     ___awmod@divisor:	
  5995                           ; 2 bytes @ 0x0
  5996                           
  5997  0070                     isupper@c:	
  5998                           ; 2 bytes @ 0x0
  5999                           
  6000  0070                     strcpy@src:	
  6001                           ; 2 bytes @ 0x0
  6002                           
  6003  0070                     strncmp@_r:	
  6004                           ; 2 bytes @ 0x0
  6005                           
  6006  0070                     ___fleq@ff1:	
  6007                           ; 2 bytes @ 0x0
  6008                           
  6009  0070                     ___flneg@f1:	
  6010                           ; 4 bytes @ 0x0
  6011                           
  6012  0070                     ___fltol@f1:	
  6013                           ; 4 bytes @ 0x0
  6014                           
  6015  0070                     ___fladd@b:	
  6016                           ; 4 bytes @ 0x0
  6017                           
  6018  0070                     ___fldiv@a:	
  6019                           ; 4 bytes @ 0x0
  6020                           
  6021  0070                     ___fpclassifyf@x:	
  6022                           ; 4 bytes @ 0x0
  6023                           
  6024                           
  6025                           ; 4 bytes @ 0x0
  6026  0070                     	ds	1
  6027  0071                     ??_putch:	
  6028  0071                     putch@txData:	
  6029                           ; 1 bytes @ 0x1
  6030                           
  6031  0071                     ___aodiv@counter:	
  6032                           ; 1 bytes @ 0x1
  6033                           
  6034  0071                     ___aomod@counter:	
  6035                           ; 1 bytes @ 0x1
  6036                           
  6037                           
  6038                           ; 1 bytes @ 0x1
  6039  0071                     	ds	1
  6040  0072                     ??_EUSART_Initialize:	
  6041  0072                     ??_EUSART_SetFramingErrorHandler:	
  6042                           ; 1 bytes @ 0x2
  6043                           
  6044  0072                     ??_EUSART_SetOverrunErrorHandler:	
  6045                           ; 1 bytes @ 0x2
  6046                           
  6047  0072                     ??_EUSART_SetErrorHandler:	
  6048                           ; 1 bytes @ 0x2
  6049                           
  6050  0072                     ??_strlen:	
  6051                           ; 1 bytes @ 0x2
  6052                           
  6053  0072                     ??_isupper:	
  6054                           ; 1 bytes @ 0x2
  6055                           
  6056  0072                     ??_strcpy:	
  6057                           ; 1 bytes @ 0x2
  6058                           
  6059  0072                     ??__Umul8_16:	
  6060                           ; 1 bytes @ 0x2
  6061                           
  6062  0072                     ??_TMR1_ReadTimer:	
  6063                           ; 1 bytes @ 0x2
  6064                           
  6065  0072                     ??_TMR1_WriteTimer:	
  6066                           ; 1 bytes @ 0x2
  6067                           
  6068  0072                     ??_SYSTEM_Initialize:	
  6069                           ; 1 bytes @ 0x2
  6070                           
  6071  0072                     ?_fputc:	
  6072                           ; 1 bytes @ 0x2
  6073                           
  6074  0072                     ___aodiv@sign:	
  6075                           ; 2 bytes @ 0x2
  6076                           
  6077  0072                     ___aomod@sign:	
  6078                           ; 1 bytes @ 0x2
  6079                           
  6080  0072                     ___awdiv@dividend:	
  6081                           ; 1 bytes @ 0x2
  6082                           
  6083  0072                     ___awmod@dividend:	
  6084                           ; 2 bytes @ 0x2
  6085                           
  6086  0072                     fputc@c:	
  6087                           ; 2 bytes @ 0x2
  6088                           
  6089  0072                     strncmp@n:	
  6090                           ; 2 bytes @ 0x2
  6091                           
  6092                           
  6093                           ; 2 bytes @ 0x2
  6094  0072                     	ds	1
  6095  0073                     ?_abs:	
  6096  0073                     strlen@a:	
  6097                           ; 2 bytes @ 0x3
  6098                           
  6099  0073                     abs@a:	
  6100                           ; 1 bytes @ 0x3
  6101                           
  6102  0073                     ___aodiv@quotient:	
  6103                           ; 2 bytes @ 0x3
  6104                           
  6105                           
  6106                           ; 8 bytes @ 0x3
  6107  0073                     	ds	1
  6108  0074                     ??___fpclassifyf:	
  6109  0074                     ??_strncmp:	
  6110                           ; 1 bytes @ 0x4
  6111                           
  6112  0074                     ??___awdiv:	
  6113                           ; 1 bytes @ 0x4
  6114                           
  6115  0074                     ??___awmod:	
  6116                           ; 1 bytes @ 0x4
  6117                           
  6118  0074                     ??___flneg:	
  6119                           ; 1 bytes @ 0x4
  6120                           
  6121  0074                     ??___fltol:	
  6122                           ; 1 bytes @ 0x4
  6123                           
  6124  0074                     fputc@fp:	
  6125                           ; 1 bytes @ 0x4
  6126                           
  6127  0074                     strlen@s:	
  6128                           ; 1 bytes @ 0x4
  6129                           
  6130  0074                     strcpy@s:	
  6131                           ; 1 bytes @ 0x4
  6132                           
  6133  0074                     __Umul8_16@product:	
  6134                           ; 2 bytes @ 0x4
  6135                           
  6136  0074                     ___fleq@ff2:	
  6137                           ; 2 bytes @ 0x4
  6138                           
  6139  0074                     ___fladd@a:	
  6140                           ; 4 bytes @ 0x4
  6141                           
  6142  0074                     ___fldiv@b:	
  6143                           ; 4 bytes @ 0x4
  6144                           
  6145                           
  6146                           ; 4 bytes @ 0x4
  6147  0074                     	ds	1
  6148  0075                     ??_fputc:	
  6149  0075                     ??_abs:	
  6150                           ; 1 bytes @ 0x5
  6151                           
  6152  0075                     ___awdiv@counter:	
  6153                           ; 1 bytes @ 0x5
  6154                           
  6155  0075                     ___awmod@counter:	
  6156                           ; 1 bytes @ 0x5
  6157                           
  6158  0075                     strncmp@_l:	
  6159                           ; 1 bytes @ 0x5
  6160                           
  6161                           
  6162                           ; 1 bytes @ 0x5
  6163  0075                     	ds	1
  6164  0076                     ?_tolower:	
  6165  0076                     ___awdiv@sign:	
  6166                           ; 2 bytes @ 0x6
  6167                           
  6168  0076                     ___awmod@sign:	
  6169                           ; 1 bytes @ 0x6
  6170                           
  6171  0076                     strcpy@d:	
  6172                           ; 1 bytes @ 0x6
  6173                           
  6174  0076                     strncmp@r:	
  6175                           ; 1 bytes @ 0x6
  6176                           
  6177  0076                     tolower@c:	
  6178                           ; 2 bytes @ 0x6
  6179                           
  6180  0076                     __Umul8_16@word_mpld:	
  6181                           ; 2 bytes @ 0x6
  6182                           
  6183                           
  6184                           ; 2 bytes @ 0x6
  6185  0076                     	ds	1
  6186  0077                     strcpy@dest:	
  6187  0077                     TMR1_ReadTimer@readVal:	
  6188                           ; 1 bytes @ 0x7
  6189                           
  6190  0077                     ___awdiv@quotient:	
  6191                           ; 2 bytes @ 0x7
  6192                           
  6193                           
  6194                           ; 2 bytes @ 0x7
  6195  0077                     	ds	1
  6196  0078                     ??_tolower:	
  6197  0078                     ??___fleq:	
  6198                           ; 1 bytes @ 0x8
  6199                           
  6200  0078                     ??___fldiv:	
  6201                           ; 1 bytes @ 0x8
  6202                           
  6203  0078                     ___fladd@signs:	
  6204                           ; 1 bytes @ 0x8
  6205                           
  6206  0078                     strncmp@l:	
  6207                           ; 1 bytes @ 0x8
  6208                           
  6209  0078                     __Umul8_16@multiplier:	
  6210                           ; 1 bytes @ 0x8
  6211                           
  6212                           
  6213                           ; 1 bytes @ 0x8
  6214  0078                     	ds	1
  6215  0079                     TMR1_ReadTimer@readValHigh:	
  6216  0079                     ___fltol@sign1:	
  6217                           ; 1 bytes @ 0x9
  6218                           
  6219  0079                     ___fladd@aexp:	
  6220                           ; 1 bytes @ 0x9
  6221                           
  6222                           
  6223                           ; 1 bytes @ 0x9
  6224  0079                     	ds	1
  6225  007A                     ?_fputs:	
  6226  007A                     TMR1_ReadTimer@readValLow:	
  6227                           ; 2 bytes @ 0xA
  6228                           
  6229  007A                     ___fltol@exp1:	
  6230                           ; 1 bytes @ 0xA
  6231                           
  6232  007A                     ___fladd@bexp:	
  6233                           ; 1 bytes @ 0xA
  6234                           
  6235  007A                     fputs@fp:	
  6236                           ; 1 bytes @ 0xA
  6237                           
  6238                           
  6239                           ; 1 bytes @ 0xA
  6240  007A                     	ds	1
  6241  007B                     ??_fputs:	
  6242  007B                     ___fladd@grs:	
  6243                           ; 1 bytes @ 0xB
  6244                           
  6245                           
  6246                           ; 1 bytes @ 0xB
  6247  007B                     	ds	1
  6248  007C                     ??___flsub:	
  6249  007C                     _tolower$1824:	
  6250                           ; 1 bytes @ 0xC
  6251                           
  6252                           
  6253                           ; 2 bytes @ 0xC
  6254  007C                     	ds	2
  6255                           
  6256                           	psect	cstackBANK0
  6257  0020                     __pcstackBANK0:	
  6258  0020                     ??___fladd:	
  6259  0020                     ?___xxtofl:	
  6260                           ; 1 bytes @ 0x0
  6261                           
  6262  0020                     ?___aodiv:	
  6263                           ; 4 bytes @ 0x0
  6264                           
  6265  0020                     ?___aomod:	
  6266                           ; 8 bytes @ 0x0
  6267                           
  6268  0020                     fputs@c:	
  6269                           ; 8 bytes @ 0x0
  6270                           
  6271  0020                     ___fpclassifyf@e:	
  6272                           ; 1 bytes @ 0x0
  6273                           
  6274  0020                     ___fldiv@rem:	
  6275                           ; 2 bytes @ 0x0
  6276                           
  6277  0020                     ___xxtofl@val:	
  6278                           ; 4 bytes @ 0x0
  6279                           
  6280  0020                     ___aodiv@divisor:	
  6281                           ; 4 bytes @ 0x0
  6282                           
  6283  0020                     ___aomod@divisor:	
  6284                           ; 8 bytes @ 0x0
  6285                           
  6286                           
  6287                           ; 8 bytes @ 0x0
  6288  0020                     	ds	1
  6289  0021                     fputs@i:	
  6290                           
  6291                           ; 2 bytes @ 0x1
  6292  0021                     	ds	1
  6293  0022                     ___fpclassifyf@u:	
  6294                           
  6295                           ; 4 bytes @ 0x2
  6296  0022                     	ds	1
  6297  0023                     fputs@s:	
  6298                           
  6299                           ; 1 bytes @ 0x3
  6300  0023                     	ds	1
  6301  0024                     ??___xxtofl:	
  6302  0024                     ?_pad:	
  6303                           ; 1 bytes @ 0x4
  6304                           
  6305  0024                     pad@buf:	
  6306                           ; 2 bytes @ 0x4
  6307                           
  6308  0024                     ___fldiv@sign:	
  6309                           ; 1 bytes @ 0x4
  6310                           
  6311                           
  6312                           ; 1 bytes @ 0x4
  6313  0024                     	ds	1
  6314  0025                     pad@p:	
  6315  0025                     ___fldiv@new_exp:	
  6316                           ; 2 bytes @ 0x5
  6317                           
  6318                           
  6319                           ; 2 bytes @ 0x5
  6320  0025                     	ds	2
  6321  0027                     ??_pad:	
  6322  0027                     ___fldiv@grs:	
  6323                           ; 1 bytes @ 0x7
  6324                           
  6325                           
  6326                           ; 4 bytes @ 0x7
  6327  0027                     	ds	1
  6328  0028                     ___xxtofl@sign:	
  6329  0028                     pad@i:	
  6330                           ; 1 bytes @ 0x8
  6331                           
  6332  0028                     ___aodiv@dividend:	
  6333                           ; 2 bytes @ 0x8
  6334                           
  6335  0028                     ___aomod@dividend:	
  6336                           ; 8 bytes @ 0x8
  6337                           
  6338                           
  6339                           ; 8 bytes @ 0x8
  6340  0028                     	ds	1
  6341  0029                     ___xxtofl@exp:	
  6342                           
  6343                           ; 1 bytes @ 0x9
  6344  0029                     	ds	1
  6345  002A                     pad@w:	
  6346  002A                     ___xxtofl@arg:	
  6347                           ; 2 bytes @ 0xA
  6348                           
  6349                           
  6350                           ; 4 bytes @ 0xA
  6351  002A                     	ds	1
  6352  002B                     ___fldiv@bexp:	
  6353                           
  6354                           ; 1 bytes @ 0xB
  6355  002B                     	ds	1
  6356  002C                     pad@fp:	
  6357  002C                     ___fldiv@aexp:	
  6358                           ; 1 bytes @ 0xC
  6359                           
  6360                           
  6361                           ; 1 bytes @ 0xC
  6362  002C                     	ds	1
  6363  002D                     ?_floorf:	
  6364  002D                     floorf@x:	
  6365                           ; 4 bytes @ 0xD
  6366                           
  6367                           
  6368                           ; 4 bytes @ 0xD
  6369  002D                     	ds	1
  6370  002E                     ?___flmul:	
  6371  002E                     ___flmul@b:	
  6372                           ; 4 bytes @ 0xE
  6373                           
  6374                           
  6375                           ; 4 bytes @ 0xE
  6376  002E                     	ds	2
  6377  0030                     ?_dtoa:	
  6378  0030                     dtoa@d:	
  6379                           ; 2 bytes @ 0x10
  6380                           
  6381                           
  6382                           ; 8 bytes @ 0x10
  6383  0030                     	ds	1
  6384  0031                     ??_floorf:	
  6385                           
  6386                           ; 1 bytes @ 0x11
  6387  0031                     	ds	1
  6388  0032                     ___flmul@a:	
  6389                           
  6390                           ; 4 bytes @ 0x12
  6391  0032                     	ds	4
  6392  0036                     ??___flmul:	
  6393                           
  6394                           ; 1 bytes @ 0x16
  6395  0036                     	ds	1
  6396  0037                     floorf@m:	
  6397                           
  6398                           ; 4 bytes @ 0x17
  6399  0037                     	ds	1
  6400  0038                     ??_dtoa:	
  6401                           
  6402                           ; 1 bytes @ 0x18
  6403  0038                     	ds	3
  6404  003B                     ___flmul@sign:	
  6405  003B                     _dtoa$1387:	
  6406                           ; 1 bytes @ 0x1B
  6407                           
  6408  003B                     floorf@e:	
  6409                           ; 2 bytes @ 0x1B
  6410                           
  6411                           
  6412                           ; 2 bytes @ 0x1B
  6413  003B                     	ds	1
  6414  003C                     ___flmul@grs:	
  6415                           
  6416                           ; 4 bytes @ 0x1C
  6417  003C                     	ds	1
  6418  003D                     dtoa@p:	
  6419  003D                     floorf@u:	
  6420                           ; 2 bytes @ 0x1D
  6421                           
  6422                           
  6423                           ; 4 bytes @ 0x1D
  6424  003D                     	ds	2
  6425  003F                     dtoa@fp:	
  6426                           
  6427                           ; 1 bytes @ 0x1F
  6428  003F                     	ds	1
  6429  0040                     ___flmul@aexp:	
  6430  0040                     dtoa@w:	
  6431                           ; 1 bytes @ 0x20
  6432                           
  6433                           
  6434                           ; 2 bytes @ 0x20
  6435  0040                     	ds	1
  6436  0041                     ___flmul@bexp:	
  6437                           
  6438                           ; 1 bytes @ 0x21
  6439  0041                     	ds	1
  6440  0042                     dtoa@s:	
  6441  0042                     ___flmul@prod:	
  6442                           ; 2 bytes @ 0x22
  6443                           
  6444                           
  6445                           ; 4 bytes @ 0x22
  6446  0042                     	ds	2
  6447  0044                     dtoa@n:	
  6448                           
  6449                           ; 8 bytes @ 0x24
  6450  0044                     	ds	2
  6451  0046                     ___flmul@temp:	
  6452                           
  6453                           ; 2 bytes @ 0x26
  6454  0046                     	ds	2
  6455  0048                     ?___flge:	
  6456  0048                     ?___flsub:	
  6457                           ; 1 bit 
  6458                           
  6459  0048                     ___flge@ff1:	
  6460                           ; 4 bytes @ 0x28
  6461                           
  6462  0048                     ___flsub@a:	
  6463                           ; 4 bytes @ 0x28
  6464                           
  6465                           
  6466                           ; 4 bytes @ 0x28
  6467  0048                     	ds	4
  6468  004C                     dtoa@i:	
  6469  004C                     ___flge@ff2:	
  6470                           ; 2 bytes @ 0x2C
  6471                           
  6472  004C                     ___flsub@b:	
  6473                           ; 4 bytes @ 0x2C
  6474                           
  6475                           
  6476                           ; 4 bytes @ 0x2C
  6477  004C                     	ds	4
  6478  0050                     ??___flge:	
  6479                           
  6480                           ; 1 bytes @ 0x30
  6481  0050                     	ds	4
  6482  0054                     ?_efgtoa:	
  6483  0054                     efgtoa@f:	
  6484                           ; 2 bytes @ 0x34
  6485                           
  6486                           
  6487                           ; 4 bytes @ 0x34
  6488  0054                     	ds	4
  6489  0058                     efgtoa@c:	
  6490                           
  6491                           ; 1 bytes @ 0x38
  6492  0058                     	ds	1
  6493  0059                     ??_efgtoa:	
  6494                           
  6495                           ; 1 bytes @ 0x39
  6496  0059                     	ds	4
  6497  005D                     ?_vfpfcnvrt:	
  6498  005D                     vfpfcnvrt@fmt:	
  6499                           ; 2 bytes @ 0x3D
  6500                           
  6501                           
  6502                           ; 1 bytes @ 0x3D
  6503  005D                     	ds	1
  6504  005E                     vfpfcnvrt@ap:	
  6505                           
  6506                           ; 1 bytes @ 0x3E
  6507  005E                     	ds	1
  6508  005F                     ??_vfpfcnvrt:	
  6509                           
  6510                           ; 1 bytes @ 0x3F
  6511  005F                     	ds	6
  6512  0065                     ?_vfprintf:	
  6513  0065                     vfprintf@fmt:	
  6514                           ; 2 bytes @ 0x45
  6515                           
  6516                           
  6517                           ; 2 bytes @ 0x45
  6518  0065                     	ds	2
  6519  0067                     vfprintf@ap:	
  6520                           
  6521                           ; 1 bytes @ 0x47
  6522  0067                     	ds	1
  6523  0068                     ??_vfprintf:	
  6524                           
  6525                           ; 1 bytes @ 0x48
  6526  0068                     	ds	2
  6527  006A                     vfprintf@fp:	
  6528                           
  6529                           ; 1 bytes @ 0x4A
  6530  006A                     	ds	1
  6531  006B                     vfprintf@cfmt:	
  6532                           
  6533                           ; 2 bytes @ 0x4B
  6534  006B                     	ds	2
  6535  006D                     ??_printf:	
  6536                           
  6537                           ; 1 bytes @ 0x4D
  6538  006D                     	ds	1
  6539  006E                     ??_Backwards:	
  6540  006E                     ??_Right:	
  6541                           ; 1 bytes @ 0x4E
  6542                           
  6543                           
  6544                           ; 1 bytes @ 0x4E
  6545  006E                     	ds	1
  6546                           
  6547                           	psect	maintext
  6548  14B6                     __pmaintext:	
  6549 ;;
  6550 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6551 ;;
  6552 ;; *************** function _main *****************
  6553 ;; Defined at:
  6554 ;;		line 58 in file "main.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  look            4   20[BANK2 ] float 
  6559 ;;  count           2   24[BANK2 ] int 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      void 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : B1F/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Locals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;Total ram usage:        8 bytes
  6574 ;; Hardware stack levels required when called:   10
  6575 ;; This function calls:
  6576 ;;		_Backwards
  6577 ;;		_CLC1_OutputStatusGet
  6578 ;;		_Forward
  6579 ;;		_Right
  6580 ;;		_SYSTEM_Initialize
  6581 ;;		_Stop
  6582 ;;		___flge
  6583 ;;		_echo
  6584 ;;		_printf
  6585 ;; This function is called by:
  6586 ;;		Startup code after reset
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           
  6591                           ;psect for function _main
  6592  14B6                     _main:	
  6593                           
  6594                           ;main.c: 61:     SYSTEM_Initialize();
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6598  14B6  3190  2000  3194   	fcall	_SYSTEM_Initialize
  6599  14B9  0020               	movlb	0	; select bank0
  6600  14BA  1617               	bsf	23,4	;volatile
  6601                           
  6602                           ;main.c: 79:     _delay((unsigned long)((2000)*(1000000/4000.0)));
  6603  14BB  3003               	movlw	3
  6604  14BC  0022               	movlb	2	; select bank2
  6605  14BD  00B3               	movwf	(??_main^(0+256)+1)
  6606  14BE  308A               	movlw	138
  6607  14BF  00B2               	movwf	??_main^(0+256)
  6608  14C0  3055               	movlw	85
  6609  14C1                     u6147:	
  6610  14C1  0B89               	decfsz	9,f
  6611  14C2  2CC1               	goto	u6147
  6612  14C3  0BB2               	decfsz	??_main^(0+256),f
  6613  14C4  2CC1               	goto	u6147
  6614  14C5  0BB3               	decfsz	(??_main^(0+256)+1),f
  6615  14C6  2CC1               	goto	u6147
  6616  14C7  3200               	nop2
  6617  14C8                     l4746:	
  6618                           
  6619                           ;main.c: 80:     int count = 0;
  6620  14C8  0022               	movlb	2	; select bank2
  6621  14C9  01B8               	clrf	main@count^(0+256)
  6622  14CA  01B9               	clrf	(main@count+1)^(0+256)
  6623  14CB  2CD3               	goto	l4748
  6624  14CC                     l290:	
  6625                           ;main.c: 86:             do { LATAbits.LATA0 = 0; } while(0);
  6626                           
  6627  14CC  0020               	movlb	0	; select bank0
  6628  14CD  1016               	bcf	22,0	;volatile
  6629                           
  6630                           ;main.c: 87:             Stop();
  6631  14CE  319E  26BE  3194   	fcall	_Stop
  6632  14D1  0020               	movlb	0	; select bank0
  6633  14D2  1596               	bsf	22,3	;volatile
  6634  14D3                     l4748:	
  6635                           
  6636                           ;main.c: 83:     {;main.c: 85:         if(CLC1_OutputStatusGet() == 0){
  6637  14D3  319E  26A1  3194   	fcall	_CLC1_OutputStatusGet
  6638  14D6  3A00               	xorlw	0
  6639  14D7  1903               	btfsc	3,2
  6640  14D8  2CCC               	goto	l290
  6641                           
  6642                           ;main.c: 90:             do { LATAbits.LATA3 = 0; } while(0);
  6643  14D9  0020               	movlb	0	; select bank0
  6644  14DA  1196               	bcf	22,3	;volatile
  6645                           
  6646                           ;main.c: 91:             do { LATAbits.LATA0 = 1; } while(0);
  6647  14DB  1416               	bsf	22,0	;volatile
  6648                           
  6649                           ;main.c: 92:             look = echo();
  6650  14DC  3192  22BF  3194   	fcall	_echo
  6651  14DF  0022               	movlb	2	; select bank2
  6652  14E0  0829               	movf	(?_echo+3)^(0+256),w
  6653  14E1  00B7               	movwf	(main@look+3)^(0+256)
  6654  14E2  0828               	movf	(?_echo+2)^(0+256),w
  6655  14E3  00B6               	movwf	(main@look+2)^(0+256)
  6656  14E4  0827               	movf	(?_echo+1)^(0+256),w
  6657  14E5  00B5               	movwf	(main@look+1)^(0+256)
  6658  14E6  0826               	movf	?_echo^(0+256),w
  6659  14E7  00B4               	movwf	main@look^(0+256)
  6660                           
  6661                           ;main.c: 93:             if(look > 30){
  6662  14E8  3041               	movlw	65
  6663  14E9  0020               	movlb	0	; select bank0
  6664  14EA  00CB               	movwf	___flge@ff1+3
  6665  14EB  30F0               	movlw	240
  6666  14EC  00CA               	movwf	___flge@ff1+2
  6667  14ED  3000               	movlw	0
  6668  14EE  00C9               	movwf	___flge@ff1+1
  6669  14EF  3000               	movlw	0
  6670  14F0  00C8               	movwf	___flge@ff1
  6671  14F1  0022               	movlb	2	; select bank2
  6672  14F2  0837               	movf	(main@look+3)^(0+256),w
  6673  14F3  0020               	movlb	0	; select bank0
  6674  14F4  00CF               	movwf	___flge@ff2+3
  6675  14F5  0022               	movlb	2	; select bank2
  6676  14F6  0836               	movf	(main@look+2)^(0+256),w
  6677  14F7  0020               	movlb	0	; select bank0
  6678  14F8  00CE               	movwf	___flge@ff2+2
  6679  14F9  0022               	movlb	2	; select bank2
  6680  14FA  0835               	movf	(main@look+1)^(0+256),w
  6681  14FB  0020               	movlb	0	; select bank0
  6682  14FC  00CD               	movwf	___flge@ff2+1
  6683  14FD  0022               	movlb	2	; select bank2
  6684  14FE  0834               	movf	main@look^(0+256),w
  6685  14FF  0020               	movlb	0	; select bank0
  6686  1500  00CC               	movwf	___flge@ff2
  6687  1501  3193  23A4  3194   	fcall	___flge
  6688  1504  1803               	btfsc	3,0
  6689  1505  2D0A               	goto	l4762
  6690                           
  6691                           ;main.c: 94:                 Forward();
  6692  1506  319E  26A6  3194   	fcall	_Forward
  6693  1509  2CC8               	goto	l4746
  6694  150A                     l4762:	
  6695  150A  3041               	movlw	65
  6696  150B  0020               	movlb	0	; select bank0
  6697  150C  00CB               	movwf	___flge@ff1+3
  6698  150D  30F0               	movlw	240
  6699  150E  00CA               	movwf	___flge@ff1+2
  6700  150F  3000               	movlw	0
  6701  1510  00C9               	movwf	___flge@ff1+1
  6702  1511  3000               	movlw	0
  6703  1512  00C8               	movwf	___flge@ff1
  6704  1513  0022               	movlb	2	; select bank2
  6705  1514  0837               	movf	(main@look+3)^(0+256),w
  6706  1515  0020               	movlb	0	; select bank0
  6707  1516  00CF               	movwf	___flge@ff2+3
  6708  1517  0022               	movlb	2	; select bank2
  6709  1518  0836               	movf	(main@look+2)^(0+256),w
  6710  1519  0020               	movlb	0	; select bank0
  6711  151A  00CE               	movwf	___flge@ff2+2
  6712  151B  0022               	movlb	2	; select bank2
  6713  151C  0835               	movf	(main@look+1)^(0+256),w
  6714  151D  0020               	movlb	0	; select bank0
  6715  151E  00CD               	movwf	___flge@ff2+1
  6716  151F  0022               	movlb	2	; select bank2
  6717  1520  0834               	movf	main@look^(0+256),w
  6718  1521  0020               	movlb	0	; select bank0
  6719  1522  00CC               	movwf	___flge@ff2
  6720  1523  3193  23A4  3194   	fcall	___flge
  6721  1526  1C03               	btfss	3,0
  6722  1527  2CD3               	goto	l4748
  6723                           
  6724                           ;main.c: 98:                 Stop();
  6725  1528  319E  26BE  3194   	fcall	_Stop
  6726                           
  6727                           ;main.c: 99:                 ++count;
  6728  152B  3001               	movlw	1
  6729  152C  0022               	movlb	2	; select bank2
  6730  152D  07B8               	addwf	main@count^(0+256),f
  6731  152E  3000               	movlw	0
  6732  152F  3DB9               	addwfc	(main@count+1)^(0+256),f
  6733                           
  6734                           ;main.c: 100:                 printf("\n\rcount : %d",count);
  6735  1530  305C               	movlw	low (STR_1| (0+32768))
  6736  1531  00A0               	movwf	printf@fmt^(0+256)
  6737  1532  3098               	movlw	high (STR_1| (0+32768))
  6738  1533  00A1               	movwf	(printf@fmt^(0+256)+1)
  6739  1534  0839               	movf	(main@count+1)^(0+256),w
  6740  1535  00A3               	movwf	((?_printf+1)^(0+256)+2)
  6741  1536  0838               	movf	main@count^(0+256),w
  6742  1537  00A2               	movwf	(?_printf^(0+256)+2)
  6743  1538  319F  2751  3194   	fcall	_printf
  6744                           
  6745                           ;main.c: 101:                 printf("\n\rSTOPED Motors");
  6746  153B  302D               	movlw	low (STR_2| (0+32768))
  6747  153C  0022               	movlb	2	; select bank2
  6748  153D  00A0               	movwf	printf@fmt^(0+256)
  6749  153E  3098               	movlw	high (STR_2| (0+32768))
  6750  153F  00A1               	movwf	(printf@fmt^(0+256)+1)
  6751  1540  319F  2751  3194   	fcall	_printf
  6752                           
  6753                           ;main.c: 102:                 if(count >5){
  6754  1543  0022               	movlb	2	; select bank2
  6755  1544  0839               	movf	(main@count+1)^(0+256),w
  6756  1545  3A80               	xorlw	128
  6757  1546  00B2               	movwf	??_main^(0+256)
  6758  1547  3080               	movlw	128
  6759  1548  0232               	subwf	??_main^(0+256),w
  6760  1549  1D03               	skipz
  6761  154A  2D4D               	goto	u6135
  6762  154B  3006               	movlw	6
  6763  154C  0238               	subwf	main@count^(0+256),w
  6764  154D                     u6135:	
  6765  154D  1C03               	skipc
  6766  154E  2CD3               	goto	l4748
  6767                           
  6768                           ;main.c: 103:                    Backwards();
  6769  154F  319F  2727  3194   	fcall	_Backwards
  6770                           
  6771                           ;main.c: 104:                    Right();
  6772  1552  319F  273C  3194   	fcall	_Right
  6773                           
  6774                           ;main.c: 105:                    Stop();
  6775  1555  319E  26BE  3194   	fcall	_Stop
  6776  1558  2CC8               	goto	l4746
  6777  1559                     __end_of_main:	
  6778                           
  6779                           	psect	text1
  6780  12BF                     __ptext1:	
  6781 ;; *************** function _echo *****************
  6782 ;; Defined at:
  6783 ;;		line 116 in file "main.c"
  6784 ;; Parameters:    Size  Location     Type
  6785 ;;		None
  6786 ;; Auto vars:     Size  Location     Type
  6787 ;;  look            4   14[BANK2 ] float 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  4    6[BANK2 ] float 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6797 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6798 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6799 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  6800 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  6801 ;;Total ram usage:       12 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    9
  6804 ;; This function calls:
  6805 ;;		_TMR1_ReadTimer
  6806 ;;		_TMR1_StartSinglePulseAcquisition
  6807 ;;		_TMR1_WriteTimer
  6808 ;;		___flmul
  6809 ;;		___xxtofl
  6810 ;;		_printf
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815                           
  6816                           
  6817                           ;psect for function _echo
  6818  12BF                     _echo:	
  6819                           
  6820                           ;incstack = 0
  6821                           ; Regs used in _echo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6822                           ;main.c: 118:     do { LATBbits.LATB4 = 1; } while(0);
  6823  12BF  0020               	movlb	0	; select bank0
  6824  12C0  1617               	bsf	23,4	;volatile
  6825                           
  6826                           ;main.c: 119:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  6827  12C1  3200               	nop2	;2 cycle nop
  6828                           
  6829                           ;main.c: 120:     do { LATBbits.LATB4 = 0; } while(0);
  6830  12C2  0020               	movlb	0	; select bank0
  6831  12C3  1217               	bcf	23,4	;volatile
  6832                           
  6833                           ;main.c: 121:     TMR1GIF = 0;
  6834  12C4  002E               	movlb	14	; select bank14
  6835  12C5  1011               	bcf	17,0	;volatile
  6836                           
  6837                           ;main.c: 122:     TMR1_WriteTimer(0);
  6838  12C6  3000               	movlw	0
  6839  12C7  00F0               	movwf	TMR1_WriteTimer@timerVal
  6840  12C8  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  6841  12C9  3188  2003  3192   	fcall	_TMR1_WriteTimer
  6842                           
  6843                           ;main.c: 123:     TMR1_StartSinglePulseAcquisition();
  6844  12CC  3188  2000  3192   	fcall	_TMR1_StartSinglePulseAcquisition
  6845  12CF                     l312:	
  6846                           ;main.c: 124:     while(!TMR1GIF);
  6847                           
  6848  12CF  002E               	movlb	14	; select bank14
  6849  12D0  1C11               	btfss	17,0	;volatile
  6850  12D1  2ACF               	goto	l312
  6851                           
  6852                           ;main.c: 125:     float look = TMR1_ReadTimer()*(300.0/37000);
  6853  12D2  303C               	movlw	60
  6854  12D3  0020               	movlb	0	; select bank0
  6855  12D4  00B1               	movwf	___flmul@b+3
  6856  12D5  3004               	movlw	4
  6857  12D6  00B0               	movwf	___flmul@b+2
  6858  12D7  30D7               	movlw	215
  6859  12D8  00AF               	movwf	___flmul@b+1
  6860  12D9  30DF               	movlw	223
  6861  12DA  00AE               	movwf	___flmul@b
  6862  12DB  319F  27C3  3192   	fcall	_TMR1_ReadTimer
  6863  12DE  0870               	movf	?_TMR1_ReadTimer,w
  6864  12DF  0022               	movlb	2	; select bank2
  6865  12E0  00AA               	movwf	??_echo^(0+256)
  6866  12E1  0871               	movf	?_TMR1_ReadTimer+1,w
  6867  12E2  00AB               	movwf	(??_echo^(0+256)+1)
  6868  12E3  01AC               	clrf	(??_echo^(0+256)+2)
  6869  12E4  01AD               	clrf	(??_echo^(0+256)+3)
  6870  12E5  082D               	movf	(??_echo+3)^(0+256),w
  6871  12E6  0020               	movlb	0	; select bank0
  6872  12E7  00A3               	movwf	___xxtofl@val+3
  6873  12E8  0022               	movlb	2	; select bank2
  6874  12E9  082C               	movf	(??_echo+2)^(0+256),w
  6875  12EA  0020               	movlb	0	; select bank0
  6876  12EB  00A2               	movwf	___xxtofl@val+2
  6877  12EC  0022               	movlb	2	; select bank2
  6878  12ED  082B               	movf	(??_echo+1)^(0+256),w
  6879  12EE  0020               	movlb	0	; select bank0
  6880  12EF  00A1               	movwf	___xxtofl@val+1
  6881  12F0  0022               	movlb	2	; select bank2
  6882  12F1  082A               	movf	??_echo^(0+256),w
  6883  12F2  0020               	movlb	0	; select bank0
  6884  12F3  00A0               	movwf	___xxtofl@val
  6885  12F4  3000               	movlw	0
  6886  12F5  3194  2420  3192   	fcall	___xxtofl
  6887  12F8  0020               	movlb	0	; select bank0
  6888  12F9  0823               	movf	?___xxtofl+3,w
  6889  12FA  00B5               	movwf	___flmul@a+3
  6890  12FB  0822               	movf	?___xxtofl+2,w
  6891  12FC  00B4               	movwf	___flmul@a+2
  6892  12FD  0821               	movf	?___xxtofl+1,w
  6893  12FE  00B3               	movwf	___flmul@a+1
  6894  12FF  0820               	movf	?___xxtofl,w
  6895  1300  00B2               	movwf	___flmul@a
  6896  1301  318B  239D  3192   	fcall	___flmul
  6897  1304  0020               	movlb	0	; select bank0
  6898  1305  0831               	movf	?___flmul+3,w
  6899  1306  0022               	movlb	2	; select bank2
  6900  1307  00B1               	movwf	(echo@look+3)^(0+256)
  6901  1308  0020               	movlb	0	; select bank0
  6902  1309  0830               	movf	?___flmul+2,w
  6903  130A  0022               	movlb	2	; select bank2
  6904  130B  00B0               	movwf	(echo@look+2)^(0+256)
  6905  130C  0020               	movlb	0	; select bank0
  6906  130D  082F               	movf	?___flmul+1,w
  6907  130E  0022               	movlb	2	; select bank2
  6908  130F  00AF               	movwf	(echo@look+1)^(0+256)
  6909  1310  0020               	movlb	0	; select bank0
  6910  1311  082E               	movf	?___flmul,w
  6911  1312  0022               	movlb	2	; select bank2
  6912  1313  00AE               	movwf	echo@look^(0+256)
  6913                           
  6914                           ;main.c: 126:     printf("\n\rEcho was just called %f",look);
  6915  1314  3000               	movlw	low (STR_3| (0+32768))
  6916  1315  00A0               	movwf	printf@fmt^(0+256)
  6917  1316  3098               	movlw	high (STR_3| (0+32768))
  6918  1317  00A1               	movwf	(printf@fmt^(0+256)+1)
  6919  1318  0831               	movf	(echo@look+3)^(0+256),w
  6920  1319  00A5               	movwf	((?_printf+3)^(0+256)+2)
  6921  131A  0830               	movf	(echo@look+2)^(0+256),w
  6922  131B  00A4               	movwf	((?_printf+2)^(0+256)+2)
  6923  131C  082F               	movf	(echo@look+1)^(0+256),w
  6924  131D  00A3               	movwf	((?_printf+1)^(0+256)+2)
  6925  131E  082E               	movf	echo@look^(0+256),w
  6926  131F  00A2               	movwf	(?_printf^(0+256)+2)
  6927  1320  319F  2751         	fcall	_printf
  6928                           
  6929                           ;main.c: 128:     return look;
  6930  1322  0022               	movlb	2	; select bank2
  6931  1323  0831               	movf	(echo@look+3)^(0+256),w
  6932  1324  00A9               	movwf	(?_echo+3)^(0+256)
  6933  1325  0830               	movf	(echo@look+2)^(0+256),w
  6934  1326  00A8               	movwf	(?_echo+2)^(0+256)
  6935  1327  082F               	movf	(echo@look+1)^(0+256),w
  6936  1328  00A7               	movwf	(?_echo+1)^(0+256)
  6937  1329  082E               	movf	echo@look^(0+256),w
  6938  132A  00A6               	movwf	?_echo^(0+256)
  6939  132B  0008               	return
  6940  132C                     __end_of_echo:	
  6941                           
  6942                           	psect	text2
  6943  1420                     __ptext2:	
  6944 ;; *************** function ___xxtofl *****************
  6945 ;; Defined at:
  6946 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  sign            1    wreg     unsigned char 
  6949 ;;  val             4    0[BANK0 ] long 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  sign            1    8[BANK0 ] unsigned char 
  6952 ;;  arg             4   10[BANK0 ] unsigned long 
  6953 ;;  exp             1    9[BANK0 ] unsigned char 
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  4    0[BANK0 ] unsigned char 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6963 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;Total ram usage:       14 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_echo
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           
  6977                           ;psect for function ___xxtofl
  6978  1420                     ___xxtofl:	
  6979                           
  6980                           ;incstack = 0
  6981                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6982                           ;___xxtofl@sign stored from wreg
  6983  1420  0020               	movlb	0	; select bank0
  6984  1421  00A8               	movwf	___xxtofl@sign
  6985  1422  0828               	movf	___xxtofl@sign,w
  6986  1423  1D03               	btfss	3,2
  6987  1424  1FA3               	btfss	___xxtofl@val+3,7
  6988  1425  2C36               	goto	l4646
  6989  1426  0920               	comf	___xxtofl@val,w
  6990  1427  00AA               	movwf	___xxtofl@arg
  6991  1428  0921               	comf	___xxtofl@val+1,w
  6992  1429  00AB               	movwf	___xxtofl@arg+1
  6993  142A  0922               	comf	___xxtofl@val+2,w
  6994  142B  00AC               	movwf	___xxtofl@arg+2
  6995  142C  0923               	comf	___xxtofl@val+3,w
  6996  142D  00AD               	movwf	___xxtofl@arg+3
  6997  142E  0AAA               	incf	___xxtofl@arg,f
  6998  142F  1903               	skipnz
  6999  1430  0AAB               	incf	___xxtofl@arg+1,f
  7000  1431  1903               	skipnz
  7001  1432  0AAC               	incf	___xxtofl@arg+2,f
  7002  1433  1903               	skipnz
  7003  1434  0AAD               	incf	___xxtofl@arg+3,f
  7004  1435  2C3E               	goto	l1317
  7005  1436                     l4646:	
  7006  1436  0823               	movf	___xxtofl@val+3,w
  7007  1437  00AD               	movwf	___xxtofl@arg+3
  7008  1438  0822               	movf	___xxtofl@val+2,w
  7009  1439  00AC               	movwf	___xxtofl@arg+2
  7010  143A  0821               	movf	___xxtofl@val+1,w
  7011  143B  00AB               	movwf	___xxtofl@arg+1
  7012  143C  0820               	movf	___xxtofl@val,w
  7013  143D  00AA               	movwf	___xxtofl@arg
  7014  143E                     l1317:	
  7015  143E  0823               	movf	___xxtofl@val+3,w
  7016  143F  0422               	iorwf	___xxtofl@val+2,w
  7017  1440  0421               	iorwf	___xxtofl@val+1,w
  7018  1441  0420               	iorwf	___xxtofl@val,w
  7019  1442  1D03               	skipz
  7020  1443  2C4D               	goto	l4652
  7021  1444  3000               	movlw	0
  7022  1445  00A3               	movwf	?___xxtofl+3
  7023  1446  3000               	movlw	0
  7024  1447  00A2               	movwf	?___xxtofl+2
  7025  1448  3000               	movlw	0
  7026  1449  00A1               	movwf	?___xxtofl+1
  7027  144A  3000               	movlw	0
  7028  144B  00A0               	movwf	?___xxtofl
  7029  144C  0008               	return
  7030  144D                     l4652:	
  7031  144D  3096               	movlw	150
  7032  144E  00A4               	movwf	??___xxtofl
  7033  144F  0824               	movf	??___xxtofl,w
  7034  1450  00A9               	movwf	___xxtofl@exp
  7035  1451                     l4656:	
  7036  1451  30FE               	movlw	254
  7037  1452  052D               	andwf	___xxtofl@arg+3,w
  7038  1453  1903               	btfsc	3,2
  7039  1454  2C74               	goto	l1323
  7040  1455  3001               	movlw	1
  7041  1456  00A4               	movwf	??___xxtofl
  7042  1457  0824               	movf	??___xxtofl,w
  7043  1458  07A9               	addwf	___xxtofl@exp,f
  7044  1459  3001               	movlw	1
  7045  145A                     u5965:	
  7046  145A  36AD               	lsrf	___xxtofl@arg+3,f
  7047  145B  0CAC               	rrf	___xxtofl@arg+2,f
  7048  145C  0CAB               	rrf	___xxtofl@arg+1,f
  7049  145D  0CAA               	rrf	___xxtofl@arg,f
  7050  145E  0B89               	decfsz	9,f
  7051  145F  2C5A               	goto	u5965
  7052  1460  2C51               	goto	l4656
  7053  1461                     l4658:	
  7054  1461  3001               	movlw	1
  7055  1462  00A4               	movwf	??___xxtofl
  7056  1463  0824               	movf	??___xxtofl,w
  7057  1464  07A9               	addwf	___xxtofl@exp,f
  7058  1465  3001               	movlw	1
  7059  1466  07AA               	addwf	___xxtofl@arg,f
  7060  1467  3000               	movlw	0
  7061  1468  3DAB               	addwfc	___xxtofl@arg+1,f
  7062  1469  3000               	movlw	0
  7063  146A  3DAC               	addwfc	___xxtofl@arg+2,f
  7064  146B  3000               	movlw	0
  7065  146C  3DAD               	addwfc	___xxtofl@arg+3,f
  7066  146D  3001               	movlw	1
  7067  146E                     u5985:	
  7068  146E  36AD               	lsrf	___xxtofl@arg+3,f
  7069  146F  0CAC               	rrf	___xxtofl@arg+2,f
  7070  1470  0CAB               	rrf	___xxtofl@arg+1,f
  7071  1471  0CAA               	rrf	___xxtofl@arg,f
  7072  1472  0B89               	decfsz	9,f
  7073  1473  2C6E               	goto	u5985
  7074  1474                     l1323:	
  7075  1474  30FF               	movlw	255
  7076  1475  052D               	andwf	___xxtofl@arg+3,w
  7077  1476  1903               	btfsc	3,2
  7078  1477  2C86               	goto	l4666
  7079  1478  2C61               	goto	l4658
  7080  1479                     l4668:	
  7081  1479  3002               	movlw	2
  7082  147A  0229               	subwf	___xxtofl@exp,w
  7083  147B  1C03               	btfss	3,0
  7084  147C  2C88               	goto	l1330
  7085  147D  3001               	movlw	1
  7086  147E  02A9               	subwf	___xxtofl@exp,f
  7087  147F  3001               	movlw	1
  7088  1480                     u6005:	
  7089  1480  35AA               	lslf	___xxtofl@arg,f
  7090  1481  0DAB               	rlf	___xxtofl@arg+1,f
  7091  1482  0DAC               	rlf	___xxtofl@arg+2,f
  7092  1483  0DAD               	rlf	___xxtofl@arg+3,f
  7093  1484  0B89               	decfsz	9,f
  7094  1485  2C80               	goto	u6005
  7095  1486                     l4666:	
  7096  1486  1FAC               	btfss	___xxtofl@arg+2,7
  7097  1487  2C79               	goto	l4668
  7098  1488                     l1330:	
  7099  1488  1829               	btfsc	___xxtofl@exp,0
  7100  1489  2C92               	goto	l1331
  7101  148A  30FF               	movlw	255
  7102  148B  05AA               	andwf	___xxtofl@arg,f
  7103  148C  30FF               	movlw	255
  7104  148D  05AB               	andwf	___xxtofl@arg+1,f
  7105  148E  307F               	movlw	127
  7106  148F  05AC               	andwf	___xxtofl@arg+2,f
  7107  1490  30FF               	movlw	255
  7108  1491  05AD               	andwf	___xxtofl@arg+3,f
  7109  1492                     l1331:	
  7110  1492  1003               	clrc
  7111  1493  0CA9               	rrf	___xxtofl@exp,f
  7112  1494  0829               	movf	___xxtofl@exp,w
  7113  1495  00A4               	movwf	??___xxtofl
  7114  1496  01A5               	clrf	??___xxtofl+1
  7115  1497  01A6               	clrf	??___xxtofl+2
  7116  1498  01A7               	clrf	??___xxtofl+3
  7117  1499  3018               	movlw	24
  7118  149A                     u6045:	
  7119  149A  35A4               	lslf	??___xxtofl,f
  7120  149B  0DA5               	rlf	??___xxtofl+1,f
  7121  149C  0DA6               	rlf	??___xxtofl+2,f
  7122  149D  0DA7               	rlf	??___xxtofl+3,f
  7123  149E  0B89               	decfsz	9,f
  7124  149F  2C9A               	goto	u6045
  7125  14A0  0824               	movf	??___xxtofl,w
  7126  14A1  04AA               	iorwf	___xxtofl@arg,f
  7127  14A2  0825               	movf	??___xxtofl+1,w
  7128  14A3  04AB               	iorwf	___xxtofl@arg+1,f
  7129  14A4  0826               	movf	??___xxtofl+2,w
  7130  14A5  04AC               	iorwf	___xxtofl@arg+2,f
  7131  14A6  0827               	movf	??___xxtofl+3,w
  7132  14A7  04AD               	iorwf	___xxtofl@arg+3,f
  7133  14A8  0828               	movf	___xxtofl@sign,w
  7134  14A9  1D03               	btfss	3,2
  7135  14AA  1FA3               	btfss	___xxtofl@val+3,7
  7136  14AB  2CAD               	goto	l4680
  7137  14AC  17AD               	bsf	___xxtofl@arg+3,7
  7138  14AD                     l4680:	
  7139  14AD  082D               	movf	___xxtofl@arg+3,w
  7140  14AE  00A3               	movwf	?___xxtofl+3
  7141  14AF  082C               	movf	___xxtofl@arg+2,w
  7142  14B0  00A2               	movwf	?___xxtofl+2
  7143  14B1  082B               	movf	___xxtofl@arg+1,w
  7144  14B2  00A1               	movwf	?___xxtofl+1
  7145  14B3  082A               	movf	___xxtofl@arg,w
  7146  14B4  00A0               	movwf	?___xxtofl
  7147  14B5  0008               	return
  7148  14B6                     __end_of___xxtofl:	
  7149                           
  7150                           	psect	text3
  7151  0803                     __ptext3:	
  7152 ;; *************** function _TMR1_WriteTimer *****************
  7153 ;; Defined at:
  7154 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  timerVal        2    0[COMMON] unsigned short 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;Total ram usage:        2 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; This function calls:
  7175 ;;		Nothing
  7176 ;; This function is called by:
  7177 ;;		_echo
  7178 ;;		_TMR1_Reload
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _TMR1_WriteTimer
  7184  0803                     _TMR1_WriteTimer:	
  7185                           
  7186                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  7190  0803  0024               	movlb	4	; select bank4
  7191  0804  1D0E               	btfss	14,2	;volatile
  7192  0805  280D               	goto	l4524
  7193                           
  7194                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7195  0806  100E               	bcf	14,0	;volatile
  7196                           
  7197                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  7198  0807  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7199  0808  008D               	movwf	13	;volatile
  7200                           
  7201                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  7202  0809  0870               	movf	TMR1_WriteTimer@timerVal,w
  7203  080A  008C               	movwf	12	;volatile
  7204                           
  7205                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7206  080B  140E               	bsf	14,0	;volatile
  7207                           
  7208                           ;mcc_generated_files/tmr1.c: 133:     }
  7209  080C  0008               	return
  7210  080D                     l4524:	
  7211                           
  7212                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  7213  080D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7214  080E  008D               	movwf	13	;volatile
  7215                           
  7216                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  7217  080F  0870               	movf	TMR1_WriteTimer@timerVal,w
  7218  0810  008C               	movwf	12	;volatile
  7219  0811  0008               	return
  7220  0812                     __end_of_TMR1_WriteTimer:	
  7221                           
  7222                           	psect	text4
  7223  0800                     __ptext4:	
  7224 ;; *************** function _TMR1_StartSinglePulseAcquisition *****************
  7225 ;; Defined at:
  7226 ;;		line 147 in file "mcc_generated_files/tmr1.c"
  7227 ;; Parameters:    Size  Location     Type
  7228 ;;		None
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;		None
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  1    wreg      void 
  7233 ;; Registers used:
  7234 ;;		None
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;Total ram usage:        0 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_echo
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function _TMR1_StartSinglePulseAcquisition
  7255  0800                     _TMR1_StartSinglePulseAcquisition:	
  7256                           
  7257                           ;mcc_generated_files/tmr1.c: 149:     T1GCONbits.T1GGO = 1;
  7258                           
  7259                           ;incstack = 0
  7260                           ; Regs used in _TMR1_StartSinglePulseAcquisition: []
  7261  0800  0024               	movlb	4	; select bank4
  7262  0801  158F               	bsf	15,3	;volatile
  7263  0802  0008               	return
  7264  0803                     __end_of_TMR1_StartSinglePulseAcquisition:	
  7265                           
  7266                           	psect	text5
  7267  1FC3                     __ptext5:	
  7268 ;; *************** function _TMR1_ReadTimer *****************
  7269 ;; Defined at:
  7270 ;;		line 104 in file "mcc_generated_files/tmr1.c"
  7271 ;; Parameters:    Size  Location     Type
  7272 ;;		None
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  readVal         2    7[COMMON] unsigned short 
  7275 ;;  readValLow      1   10[COMMON] unsigned char 
  7276 ;;  readValHigh     1    9[COMMON] unsigned char 
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  2    0[COMMON] unsigned short 
  7279 ;; Registers used:
  7280 ;;		wreg
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;Total ram usage:       11 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_echo
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _TMR1_ReadTimer
  7301  1FC3                     _TMR1_ReadTimer:	
  7302                           
  7303                           ;mcc_generated_files/tmr1.c: 106:     uint16_t readVal;;mcc_generated_files/tmr1.c: 107:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 108:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 110:     T1CONbits.T1RD16 = 1;
  7304                           
  7305                           ;incstack = 0
  7306                           ; Regs used in _TMR1_ReadTimer: [wreg]
  7307  1FC3  0024               	movlb	4	; select bank4
  7308  1FC4  148E               	bsf	14,1	;volatile
  7309                           
  7310                           ;mcc_generated_files/tmr1.c: 112:     readValLow = TMR1L;
  7311  1FC5  080C               	movf	12,w	;volatile
  7312  1FC6  00F2               	movwf	??_TMR1_ReadTimer
  7313  1FC7  0872               	movf	??_TMR1_ReadTimer,w
  7314  1FC8  00FA               	movwf	TMR1_ReadTimer@readValLow
  7315                           
  7316                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
  7317  1FC9  080D               	movf	13,w	;volatile
  7318  1FCA  00F2               	movwf	??_TMR1_ReadTimer
  7319  1FCB  0872               	movf	??_TMR1_ReadTimer,w
  7320  1FCC  00F9               	movwf	TMR1_ReadTimer@readValHigh
  7321                           
  7322                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  7323  1FCD  087A               	movf	TMR1_ReadTimer@readValLow,w
  7324  1FCE  00F2               	movwf	??_TMR1_ReadTimer
  7325  1FCF  01F3               	clrf	??_TMR1_ReadTimer+1
  7326  1FD0  0879               	movf	TMR1_ReadTimer@readValHigh,w
  7327  1FD1  00F4               	movwf	??_TMR1_ReadTimer+2
  7328  1FD2  01F5               	clrf	??_TMR1_ReadTimer+3
  7329  1FD3  0874               	movf	??_TMR1_ReadTimer+2,w
  7330  1FD4  00F5               	movwf	??_TMR1_ReadTimer+3
  7331  1FD5  01F4               	clrf	??_TMR1_ReadTimer+2
  7332  1FD6  0872               	movf	??_TMR1_ReadTimer,w
  7333  1FD7  0474               	iorwf	??_TMR1_ReadTimer+2,w
  7334  1FD8  00F7               	movwf	TMR1_ReadTimer@readVal
  7335  1FD9  0873               	movf	??_TMR1_ReadTimer+1,w
  7336  1FDA  0475               	iorwf	??_TMR1_ReadTimer+3,w
  7337  1FDB  00F8               	movwf	TMR1_ReadTimer@readVal+1
  7338                           
  7339                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
  7340  1FDC  0878               	movf	TMR1_ReadTimer@readVal+1,w
  7341  1FDD  00F1               	movwf	?_TMR1_ReadTimer+1
  7342  1FDE  0877               	movf	TMR1_ReadTimer@readVal,w
  7343  1FDF  00F0               	movwf	?_TMR1_ReadTimer
  7344  1FE0  0008               	return
  7345  1FE1                     __end_of_TMR1_ReadTimer:	
  7346                           
  7347                           	psect	text6
  7348  1EBE                     __ptext6:	
  7349 ;; *************** function _Stop *****************
  7350 ;; Defined at:
  7351 ;;		line 131 in file "main.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;		None
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;		None
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		None
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;Total ram usage:        0 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_main
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           
  7379                           ;psect for function _Stop
  7380  1EBE                     _Stop:	
  7381                           
  7382                           ;incstack = 0
  7383                           ; Regs used in _Stop: []
  7384                           ;main.c: 133:     do { LATCbits.LATC7 = 0; } while(0);
  7385  1EBE  0020               	movlb	0	; select bank0
  7386  1EBF  1398               	bcf	24,7	;volatile
  7387                           
  7388                           ;main.c: 134:     do { LATCbits.LATC2 = 0; } while(0);
  7389  1EC0  1118               	bcf	24,2	;volatile
  7390                           
  7391                           ;main.c: 135:     do { LATCbits.LATC6 = 0; } while(0);
  7392  1EC1  1318               	bcf	24,6	;volatile
  7393                           
  7394                           ;main.c: 136:     do { LATCbits.LATC5 = 0; } while(0);
  7395  1EC2  1298               	bcf	24,5	;volatile
  7396  1EC3  0008               	return
  7397  1EC4                     __end_of_Stop:	
  7398                           
  7399                           	psect	text7
  7400  1000                     __ptext7:	
  7401 ;; *************** function _SYSTEM_Initialize *****************
  7402 ;; Defined at:
  7403 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;		None
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;		None
  7408 ;; Return value:  Size  Location     Type
  7409 ;;                  1    wreg      void 
  7410 ;; Registers used:
  7411 ;;		wreg, status,2, status,0, pclath, cstack
  7412 ;; Tracked objects:
  7413 ;;		On entry : 0/0
  7414 ;;		On exit  : 0/0
  7415 ;;		Unchanged: 0/0
  7416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;Total ram usage:        0 bytes
  7422 ;; Hardware stack levels used:    1
  7423 ;; Hardware stack levels required when called:    2
  7424 ;; This function calls:
  7425 ;;		_CLC1_Initialize
  7426 ;;		_EUSART_Initialize
  7427 ;;		_OSCILLATOR_Initialize
  7428 ;;		_PIN_MANAGER_Initialize
  7429 ;;		_PMD_Initialize
  7430 ;;		_PWM7_Initialize
  7431 ;;		_TMR1_Initialize
  7432 ;;		_TMR2_Initialize
  7433 ;;		_TMR6_Initialize
  7434 ;; This function is called by:
  7435 ;;		_main
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _SYSTEM_Initialize
  7441  1000                     _SYSTEM_Initialize:	
  7442                           
  7443                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  7444                           
  7445                           ;incstack = 0
  7446                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7447  1000  319E  26D2  3190   	fcall	_PMD_Initialize
  7448                           
  7449                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7450  1003  3190  20CA  3190   	fcall	_PIN_MANAGER_Initialize
  7451                           
  7452                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7453  1006  319E  26E3  3190   	fcall	_OSCILLATOR_Initialize
  7454                           
  7455                           ;mcc_generated_files/mcc.c: 55:     TMR6_Initialize();
  7456  1009  319E  26F7  3190   	fcall	_TMR6_Initialize
  7457                           
  7458                           ;mcc_generated_files/mcc.c: 56:     CLC1_Initialize();
  7459  100C  319F  2714  3190   	fcall	_CLC1_Initialize
  7460                           
  7461                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7462  100F  319F  2705  3190   	fcall	_TMR2_Initialize
  7463                           
  7464                           ;mcc_generated_files/mcc.c: 58:     PWM7_Initialize();
  7465  1012  319E  26EC  3190   	fcall	_PWM7_Initialize
  7466                           
  7467                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  7468  1015  319F  2767  3190   	fcall	_TMR1_Initialize
  7469                           
  7470                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  7471  1018  3190  207A         	fcall	_EUSART_Initialize
  7472  101A  0008               	return
  7473  101B                     __end_of_SYSTEM_Initialize:	
  7474                           
  7475                           	psect	text8
  7476  1EF7                     __ptext8:	
  7477 ;; *************** function _TMR6_Initialize *****************
  7478 ;; Defined at:
  7479 ;;		line 62 in file "mcc_generated_files/tmr6.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;		None
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      void 
  7486 ;; Registers used:
  7487 ;;		wreg, status,2
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;Total ram usage:        0 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_SYSTEM_Initialize
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           
  7507                           ;psect for function _TMR6_Initialize
  7508  1EF7                     _TMR6_Initialize:	
  7509                           
  7510                           ;mcc_generated_files/tmr6.c: 67:     T6CLKCON = 0x01;
  7511                           
  7512                           ;incstack = 0
  7513                           ; Regs used in _TMR6_Initialize: [wreg+status,2]
  7514  1EF7  3001               	movlw	1
  7515  1EF8  0025               	movlb	5	; select bank5
  7516  1EF9  009C               	movwf	28	;volatile
  7517                           
  7518                           ;mcc_generated_files/tmr6.c: 70:     T6HLT = 0x00;
  7519  1EFA  019B               	clrf	27	;volatile
  7520                           
  7521                           ;mcc_generated_files/tmr6.c: 73:     T6RST = 0x00;
  7522  1EFB  019D               	clrf	29	;volatile
  7523                           
  7524                           ;mcc_generated_files/tmr6.c: 76:     T6PR = 0xFF;
  7525  1EFC  30FF               	movlw	255
  7526  1EFD  0099               	movwf	25	;volatile
  7527                           
  7528                           ;mcc_generated_files/tmr6.c: 79:     T6TMR = 0x00;
  7529  1EFE  0198               	clrf	24	;volatile
  7530                           
  7531                           ;mcc_generated_files/tmr6.c: 82:     PIR4bits.TMR6IF = 0;
  7532  1EFF  002E               	movlb	14	; select bank14
  7533  1F00  1290               	bcf	16,5	;volatile
  7534                           
  7535                           ;mcc_generated_files/tmr6.c: 85:     T6CON = 0xA0;
  7536  1F01  30A0               	movlw	160
  7537  1F02  0025               	movlb	5	; select bank5
  7538  1F03  009A               	movwf	26	;volatile
  7539  1F04  0008               	return
  7540  1F05                     __end_of_TMR6_Initialize:	
  7541                           
  7542                           	psect	text9
  7543  1F05                     __ptext9:	
  7544 ;; *************** function _TMR2_Initialize *****************
  7545 ;; Defined at:
  7546 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7564 ;;Total ram usage:        0 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; This function calls:
  7567 ;;		Nothing
  7568 ;; This function is called by:
  7569 ;;		_SYSTEM_Initialize
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _TMR2_Initialize
  7575  1F05                     _TMR2_Initialize:	
  7576                           
  7577                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  7578                           
  7579                           ;incstack = 0
  7580                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
  7581  1F05  3001               	movlw	1
  7582  1F06  0025               	movlb	5	; select bank5
  7583  1F07  0090               	movwf	16	;volatile
  7584                           
  7585                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x11;
  7586  1F08  3011               	movlw	17
  7587  1F09  008F               	movwf	15	;volatile
  7588                           
  7589                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  7590  1F0A  0191               	clrf	17	;volatile
  7591                           
  7592                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xC2;
  7593  1F0B  30C2               	movlw	194
  7594  1F0C  008D               	movwf	13	;volatile
  7595                           
  7596                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  7597  1F0D  018C               	clrf	12	;volatile
  7598                           
  7599                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  7600  1F0E  002E               	movlb	14	; select bank14
  7601  1F0F  1090               	bcf	16,1	;volatile
  7602                           
  7603                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xF0;
  7604  1F10  30F0               	movlw	240
  7605  1F11  0025               	movlb	5	; select bank5
  7606  1F12  008E               	movwf	14	;volatile
  7607  1F13  0008               	return
  7608  1F14                     __end_of_TMR2_Initialize:	
  7609                           
  7610                           	psect	text10
  7611  1F67                     __ptext10:	
  7612 ;; *************** function _TMR1_Initialize *****************
  7613 ;; Defined at:
  7614 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_SYSTEM_Initialize
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           
  7642                           ;psect for function _TMR1_Initialize
  7643  1F67                     _TMR1_Initialize:	
  7644                           
  7645                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0xD0;
  7646                           
  7647                           ;incstack = 0
  7648                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
  7649  1F67  30D0               	movlw	208
  7650  1F68  0024               	movlb	4	; select bank4
  7651  1F69  008F               	movwf	15	;volatile
  7652                           
  7653                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  7654  1F6A  0190               	clrf	16	;volatile
  7655                           
  7656                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x02;
  7657  1F6B  3002               	movlw	2
  7658  1F6C  0091               	movwf	17	;volatile
  7659                           
  7660                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x83;
  7661  1F6D  3083               	movlw	131
  7662  1F6E  008D               	movwf	13	;volatile
  7663                           
  7664                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0x00;
  7665  1F6F  018C               	clrf	12	;volatile
  7666                           
  7667                           ;mcc_generated_files/tmr1.c: 83:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7668  1F70  080D               	movf	13,w	;volatile
  7669  1F71  0022               	movlb	2	; select bank2
  7670  1F72  00D1               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  7671  1F73  0024               	movlb	4	; select bank4
  7672  1F74  080C               	movf	12,w	;volatile
  7673  1F75  0022               	movlb	2	; select bank2
  7674  1F76  00D0               	movwf	_timer1ReloadVal^(0+256)	;volatile
  7675                           
  7676                           ;mcc_generated_files/tmr1.c: 86:     PIR4bits.TMR1IF = 0;
  7677  1F77  002E               	movlb	14	; select bank14
  7678  1F78  1010               	bcf	16,0	;volatile
  7679                           
  7680                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  7681  1F79  3001               	movlw	1
  7682  1F7A  0024               	movlb	4	; select bank4
  7683  1F7B  008E               	movwf	14	;volatile
  7684  1F7C  0008               	return
  7685  1F7D                     __end_of_TMR1_Initialize:	
  7686                           
  7687                           	psect	text11
  7688  1EEC                     __ptext11:	
  7689 ;; *************** function _PWM7_Initialize *****************
  7690 ;; Defined at:
  7691 ;;		line 58 in file "mcc_generated_files/pwm7.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;		None
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2, status,0
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;Total ram usage:        0 bytes
  7710 ;; Hardware stack levels used:    1
  7711 ;; This function calls:
  7712 ;;		Nothing
  7713 ;; This function is called by:
  7714 ;;		_SYSTEM_Initialize
  7715 ;; This function uses a non-reentrant model
  7716 ;;
  7717                           
  7718                           
  7719                           ;psect for function _PWM7_Initialize
  7720  1EEC                     _PWM7_Initialize:	
  7721                           
  7722                           ;mcc_generated_files/pwm7.c: 62:     PWM7CON = 0x80;
  7723                           
  7724                           ;incstack = 0
  7725                           ; Regs used in _PWM7_Initialize: [wreg+status,2+status,0]
  7726  1EEC  3080               	movlw	128
  7727  1EED  0027               	movlb	7	; select bank7
  7728  1EEE  0092               	movwf	18	;volatile
  7729                           
  7730                           ;mcc_generated_files/pwm7.c: 65:     PWM7DCH = 0x7F;
  7731  1EEF  307F               	movlw	127
  7732  1EF0  0091               	movwf	17	;volatile
  7733                           
  7734                           ;mcc_generated_files/pwm7.c: 68:     PWM7DCL = 0xC0;
  7735  1EF1  30C0               	movlw	192
  7736  1EF2  0090               	movwf	16	;volatile
  7737                           
  7738                           ;mcc_generated_files/pwm7.c: 71:     CCPTMRS1bits.P7TSEL = 3;
  7739  1EF3  3030               	movlw	48
  7740  1EF4  0024               	movlb	4	; select bank4
  7741  1EF5  049F               	iorwf	31,f	;volatile
  7742  1EF6  0008               	return
  7743  1EF7                     __end_of_PWM7_Initialize:	
  7744                           
  7745                           	psect	text12
  7746  1ED2                     __ptext12:	
  7747 ;; *************** function _PMD_Initialize *****************
  7748 ;; Defined at:
  7749 ;;		line 77 in file "mcc_generated_files/mcc.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		status,2
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;Total ram usage:        0 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; This function calls:
  7770 ;;		Nothing
  7771 ;; This function is called by:
  7772 ;;		_SYSTEM_Initialize
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function _PMD_Initialize
  7778  1ED2                     _PMD_Initialize:	
  7779                           
  7780                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
  7781                           
  7782                           ;incstack = 0
  7783                           ; Regs used in _PMD_Initialize: [status,2]
  7784  1ED2  002F               	movlb	15	; select bank15
  7785  1ED3  0196               	clrf	22	;volatile
  7786                           
  7787                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
  7788  1ED4  0197               	clrf	23	;volatile
  7789                           
  7790                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
  7791  1ED5  0198               	clrf	24	;volatile
  7792                           
  7793                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
  7794  1ED6  0199               	clrf	25	;volatile
  7795                           
  7796                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
  7797  1ED7  019A               	clrf	26	;volatile
  7798                           
  7799                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
  7800  1ED8  019B               	clrf	27	;volatile
  7801  1ED9  0008               	return
  7802  1EDA                     __end_of_PMD_Initialize:	
  7803                           
  7804                           	psect	text13
  7805  10CA                     __ptext13:	
  7806 ;; *************** function _PIN_MANAGER_Initialize *****************
  7807 ;; Defined at:
  7808 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;		None
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  1    wreg      void 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;Total ram usage:        0 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_SYSTEM_Initialize
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function _PIN_MANAGER_Initialize
  7837  10CA                     _PIN_MANAGER_Initialize:	
  7838                           
  7839                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7840                           
  7841                           ;incstack = 0
  7842                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7843  10CA  0020               	movlb	0	; select bank0
  7844  10CB  0196               	clrf	22	;volatile
  7845                           
  7846                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7847  10CC  0197               	clrf	23	;volatile
  7848                           
  7849                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x01;
  7850  10CD  3001               	movlw	1
  7851  10CE  0098               	movwf	24	;volatile
  7852                           
  7853                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF6;
  7854  10CF  30F6               	movlw	246
  7855  10D0  0091               	movwf	17	;volatile
  7856                           
  7857                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xEF;
  7858  10D1  30EF               	movlw	239
  7859  10D2  0092               	movwf	18	;volatile
  7860                           
  7861                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x0A;
  7862  10D3  300A               	movlw	10
  7863  10D4  0093               	movwf	19	;volatile
  7864                           
  7865                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xE4;
  7866  10D5  30E4               	movlw	228
  7867  10D6  003E               	movlb	30	; select bank30
  7868  10D7  00CE               	movwf	78	;volatile
  7869                           
  7870                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xCF;
  7871  10D8  30CF               	movlw	207
  7872  10D9  00C3               	movwf	67	;volatile
  7873                           
  7874                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD6;
  7875  10DA  30D6               	movlw	214
  7876  10DB  00B8               	movwf	56	;volatile
  7877                           
  7878                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  7879  10DC  01E5               	clrf	101	;volatile
  7880                           
  7881                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  7882  10DD  01C4               	clrf	68	;volatile
  7883                           
  7884                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x00;
  7885  10DE  01B9               	clrf	57	;volatile
  7886                           
  7887                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x18;
  7888  10DF  3018               	movlw	24
  7889  10E0  00CF               	movwf	79	;volatile
  7890                           
  7891                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  7892  10E1  01BA               	clrf	58	;volatile
  7893                           
  7894                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  7895  10E2  01C5               	clrf	69	;volatile
  7896                           
  7897                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  7898  10E3  01D0               	clrf	80	;volatile
  7899                           
  7900                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  7901  10E4  30FF               	movlw	255
  7902  10E5  00BB               	movwf	59	;volatile
  7903                           
  7904                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  7905  10E6  30FF               	movlw	255
  7906  10E7  00C6               	movwf	70	;volatile
  7907                           
  7908                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  7909  10E8  30FF               	movlw	255
  7910  10E9  00D1               	movwf	81	;volatile
  7911                           
  7912                           ;mcc_generated_files/pin_manager.c: 107:     RC0PPS = 0x10;
  7913  10EA  3010               	movlw	16
  7914  10EB  00A0               	movwf	32	;volatile
  7915                           
  7916                           ;mcc_generated_files/pin_manager.c: 108:     RXPPS = 0x11;
  7917  10EC  3011               	movlw	17
  7918  10ED  003D               	movlb	29	; select bank29
  7919  10EE  00CB               	movwf	75	;volatile
  7920                           
  7921                           ;mcc_generated_files/pin_manager.c: 109:     T1GPPS = 0x0D;
  7922  10EF  300D               	movlw	13
  7923  10F0  0093               	movwf	19	;volatile
  7924                           
  7925                           ;mcc_generated_files/pin_manager.c: 110:     T2AINPPS = 0x05;
  7926  10F1  3005               	movlw	5
  7927  10F2  009C               	movwf	28	;volatile
  7928                           
  7929                           ;mcc_generated_files/pin_manager.c: 111:     RC4PPS = 0x0F;
  7930  10F3  300F               	movlw	15
  7931  10F4  003E               	movlb	30	; select bank30
  7932  10F5  00A4               	movwf	36	;volatile
  7933                           
  7934                           ;mcc_generated_files/pin_manager.c: 112:     T6AINPPS = 0x13;
  7935  10F6  3013               	movlw	19
  7936  10F7  003D               	movlb	29	; select bank29
  7937  10F8  009E               	movwf	30	;volatile
  7938  10F9  0008               	return
  7939  10FA                     __end_of_PIN_MANAGER_Initialize:	
  7940                           
  7941                           	psect	text14
  7942  1EE3                     __ptext14:	
  7943 ;; *************** function _OSCILLATOR_Initialize *****************
  7944 ;; Defined at:
  7945 ;;		line 63 in file "mcc_generated_files/mcc.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;		None
  7948 ;; Auto vars:     Size  Location     Type
  7949 ;;		None
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, status,2
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;Total ram usage:        0 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_SYSTEM_Initialize
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function _OSCILLATOR_Initialize
  7974  1EE3                     _OSCILLATOR_Initialize:	
  7975                           
  7976                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
  7977                           
  7978                           ;incstack = 0
  7979                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7980  1EE3  3062               	movlw	98
  7981  1EE4  0031               	movlb	17	; select bank17
  7982  1EE5  008D               	movwf	13	;volatile
  7983                           
  7984                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
  7985  1EE6  018F               	clrf	15	;volatile
  7986                           
  7987                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
  7988  1EE7  0191               	clrf	17	;volatile
  7989                           
  7990                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
  7991  1EE8  3002               	movlw	2
  7992  1EE9  0093               	movwf	19	;volatile
  7993                           
  7994                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
  7995  1EEA  0192               	clrf	18	;volatile
  7996  1EEB  0008               	return
  7997  1EEC                     __end_of_OSCILLATOR_Initialize:	
  7998                           
  7999                           	psect	text15
  8000  107A                     __ptext15:	
  8001 ;; *************** function _EUSART_Initialize *****************
  8002 ;; Defined at:
  8003 ;;		line 65 in file "mcc_generated_files/eusart.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;		None
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;		None
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1    wreg      void 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0, pclath, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    1
  8024 ;; This function calls:
  8025 ;;		_EUSART_SetErrorHandler
  8026 ;;		_EUSART_SetFramingErrorHandler
  8027 ;;		_EUSART_SetOverrunErrorHandler
  8028 ;; This function is called by:
  8029 ;;		_SYSTEM_Initialize
  8030 ;; This function uses a non-reentrant model
  8031 ;;
  8032                           
  8033                           
  8034                           ;psect for function _EUSART_Initialize
  8035  107A                     _EUSART_Initialize:	
  8036                           
  8037                           ;mcc_generated_files/eusart.c: 70:     BAUD1CON = 0x08;
  8038                           
  8039                           ;incstack = 0
  8040                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8041  107A  3008               	movlw	8
  8042  107B  0022               	movlb	2	; select bank2
  8043  107C  009F               	movwf	31	;volatile
  8044                           
  8045                           ;mcc_generated_files/eusart.c: 73:     RC1STA = 0x90;
  8046  107D  3090               	movlw	144
  8047  107E  009D               	movwf	29	;volatile
  8048                           
  8049                           ;mcc_generated_files/eusart.c: 76:     TX1STA = 0x24;
  8050  107F  3024               	movlw	36
  8051  1080  009E               	movwf	30	;volatile
  8052                           
  8053                           ;mcc_generated_files/eusart.c: 79:     SP1BRGL = 0x19;
  8054  1081  3019               	movlw	25
  8055  1082  009B               	movwf	27	;volatile
  8056                           
  8057                           ;mcc_generated_files/eusart.c: 82:     SP1BRGH = 0x00;
  8058  1083  019C               	clrf	28	;volatile
  8059                           
  8060                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8061  1084  3000               	movlw	0
  8062  1085  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8063  1086  3000               	movlw	0
  8064  1087  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8065  1088  319E  26B2  3190   	fcall	_EUSART_SetFramingErrorHandler
  8066                           
  8067                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8068  108B  3000               	movlw	0
  8069  108C  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8070  108D  3000               	movlw	0
  8071  108E  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8072  108F  319E  26B8  3190   	fcall	_EUSART_SetOverrunErrorHandler
  8073                           
  8074                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8075  1092  3000               	movlw	0
  8076  1093  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  8077  1094  3000               	movlw	0
  8078  1095  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8079  1096  319E  26AC         	fcall	_EUSART_SetErrorHandler
  8080                           
  8081                           ;mcc_generated_files/eusart.c: 89:     eusartRxLastError.status = 0;
  8082  1098  0020               	movlb	0	; select bank0
  8083  1099  01EF               	clrf	_eusartRxLastError	;volatile
  8084  109A  0008               	return
  8085  109B                     __end_of_EUSART_Initialize:	
  8086                           
  8087                           	psect	text16
  8088  1EB8                     __ptext16:	
  8089 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8090 ;; Defined at:
  8091 ;;		line 169 in file "mcc_generated_files/eusart.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8094 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;Total ram usage:        2 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_EUSART_Initialize
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _EUSART_SetOverrunErrorHandler
  8121  1EB8                     _EUSART_SetOverrunErrorHandler:	
  8122                           
  8123                           ;mcc_generated_files/eusart.c: 170:     EUSART_OverrunErrorHandler = interruptHandler;
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8127  1EB8  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8128  1EB9  0022               	movlb	2	; select bank2
  8129  1EBA  00CD               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  8130  1EBB  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8131  1EBC  00CC               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  8132  1EBD  0008               	return
  8133  1EBE                     __end_of_EUSART_SetOverrunErrorHandler:	
  8134                           
  8135                           	psect	text17
  8136  1EB2                     __ptext17:	
  8137 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8138 ;; Defined at:
  8139 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8142 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;		None
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;Total ram usage:        2 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_EUSART_Initialize
  8164 ;; This function uses a non-reentrant model
  8165 ;;
  8166                           
  8167                           
  8168                           ;psect for function _EUSART_SetFramingErrorHandler
  8169  1EB2                     _EUSART_SetFramingErrorHandler:	
  8170                           
  8171                           ;mcc_generated_files/eusart.c: 166:     EUSART_FramingErrorHandler = interruptHandler;
  8172                           
  8173                           ;incstack = 0
  8174                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8175  1EB2  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8176  1EB3  0022               	movlb	2	; select bank2
  8177  1EB4  00CF               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  8178  1EB5  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8179  1EB6  00CE               	movwf	_EUSART_FramingErrorHandler^(0+256)
  8180  1EB7  0008               	return
  8181  1EB8                     __end_of_EUSART_SetFramingErrorHandler:	
  8182                           
  8183                           	psect	text18
  8184  1EAC                     __ptext18:	
  8185 ;; *************** function _EUSART_SetErrorHandler *****************
  8186 ;; Defined at:
  8187 ;;		line 173 in file "mcc_generated_files/eusart.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8190 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;Total ram usage:        2 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_EUSART_Initialize
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function _EUSART_SetErrorHandler
  8217  1EAC                     _EUSART_SetErrorHandler:	
  8218                           
  8219                           ;mcc_generated_files/eusart.c: 174:     EUSART_ErrorHandler = interruptHandler;
  8220                           
  8221                           ;incstack = 0
  8222                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8223  1EAC  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8224  1EAD  0022               	movlb	2	; select bank2
  8225  1EAE  00CB               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  8226  1EAF  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8227  1EB0  00CA               	movwf	_EUSART_ErrorHandler^(0+256)
  8228  1EB1  0008               	return
  8229  1EB2                     __end_of_EUSART_SetErrorHandler:	
  8230                           
  8231                           	psect	text19
  8232  1F14                     __ptext19:	
  8233 ;; *************** function _CLC1_Initialize *****************
  8234 ;; Defined at:
  8235 ;;		line 58 in file "mcc_generated_files/clc1.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;		None
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;		None
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  1    wreg      void 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8253 ;;Total ram usage:        0 bytes
  8254 ;; Hardware stack levels used:    1
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_SYSTEM_Initialize
  8259 ;; This function uses a non-reentrant model
  8260 ;;
  8261                           
  8262                           
  8263                           ;psect for function _CLC1_Initialize
  8264  1F14                     _CLC1_Initialize:	
  8265                           
  8266                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x0A;
  8267                           
  8268                           ;incstack = 0
  8269                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
  8270  1F14  300A               	movlw	10
  8271  1F15  003C               	movlb	28	; select bank28
  8272  1F16  0091               	movwf	17	;volatile
  8273                           
  8274                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x0C;
  8275  1F17  300C               	movlw	12
  8276  1F18  0092               	movwf	18	;volatile
  8277                           
  8278                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x0C;
  8279  1F19  300C               	movlw	12
  8280  1F1A  0093               	movwf	19	;volatile
  8281                           
  8282                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x0C;
  8283  1F1B  300C               	movlw	12
  8284  1F1C  0094               	movwf	20	;volatile
  8285                           
  8286                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x0C;
  8287  1F1D  300C               	movlw	12
  8288  1F1E  0095               	movwf	21	;volatile
  8289                           
  8290                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x02;
  8291  1F1F  3002               	movlw	2
  8292  1F20  0096               	movwf	22	;volatile
  8293                           
  8294                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
  8295  1F21  0197               	clrf	23	;volatile
  8296                           
  8297                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
  8298  1F22  0198               	clrf	24	;volatile
  8299                           
  8300                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
  8301  1F23  0199               	clrf	25	;volatile
  8302                           
  8303                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x86;
  8304  1F24  3086               	movlw	134
  8305  1F25  0090               	movwf	16	;volatile
  8306  1F26  0008               	return
  8307  1F27                     __end_of_CLC1_Initialize:	
  8308                           
  8309                           	psect	text20
  8310  1F3C                     __ptext20:	
  8311 ;; *************** function _Right *****************
  8312 ;; Defined at:
  8313 ;;		line 150 in file "main.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      void 
  8320 ;; Registers used:
  8321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8322 ;; Tracked objects:
  8323 ;;		On entry : 0/0
  8324 ;;		On exit  : 0/0
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;Total ram usage:        1 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; Hardware stack levels required when called:    9
  8334 ;; This function calls:
  8335 ;;		_printf
  8336 ;; This function is called by:
  8337 ;;		_main
  8338 ;; This function uses a non-reentrant model
  8339 ;;
  8340                           
  8341                           
  8342                           ;psect for function _Right
  8343  1F3C                     _Right:	
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in _Right: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8347                           ;main.c: 151:     do { LATCbits.LATC7 = 0; } while(0);
  8348  1F3C  0020               	movlb	0	; select bank0
  8349  1F3D  1398               	bcf	24,7	;volatile
  8350                           
  8351                           ;main.c: 152:     do { LATCbits.LATC2 = 1; } while(0);
  8352  1F3E  1518               	bsf	24,2	;volatile
  8353                           
  8354                           ;main.c: 153:     do { LATCbits.LATC6 = 1; } while(0);
  8355  1F3F  1718               	bsf	24,6	;volatile
  8356                           
  8357                           ;main.c: 154:     do { LATCbits.LATC5 = 0; } while(0);
  8358  1F40  1298               	bcf	24,5	;volatile
  8359                           
  8360                           ;main.c: 155:     _delay((unsigned long)((500)*(1000000/4000.0)));
  8361  1F41  30A3               	movlw	163
  8362  1F42  0020               	movlb	0	; select bank0
  8363  1F43  00EE               	movwf	??_Right
  8364  1F44  3055               	movlw	85
  8365  1F45                     u6157:	
  8366  1F45  0B89               	decfsz	9,f
  8367  1F46  2F45               	goto	u6157
  8368  1F47  0BEE               	decfsz	??_Right,f
  8369  1F48  2F45               	goto	u6157
  8370                           
  8371                           ;main.c: 156:     printf("\n\rturning Right");
  8372  1F49  303D               	movlw	low (STR_4| (0+32768))
  8373  1F4A  0022               	movlb	2	; select bank2
  8374  1F4B  00A0               	movwf	printf@fmt^(0+256)
  8375  1F4C  3098               	movlw	high (STR_4| (0+32768))
  8376  1F4D  00A1               	movwf	(printf@fmt^(0+256)+1)
  8377  1F4E  319F  2751         	fcall	_printf
  8378  1F50  0008               	return
  8379  1F51                     __end_of_Right:	
  8380                           
  8381                           	psect	text21
  8382  1EA6                     __ptext21:	
  8383 ;; *************** function _Forward *****************
  8384 ;; Defined at:
  8385 ;;		line 141 in file "main.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		None
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_main
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function _Forward
  8414  1EA6                     _Forward:	
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in _Forward: []
  8418                           ;main.c: 143:     do { LATCbits.LATC7 = 1; } while(0);
  8419  1EA6  0020               	movlb	0	; select bank0
  8420  1EA7  1798               	bsf	24,7	;volatile
  8421                           
  8422                           ;main.c: 144:     do { LATCbits.LATC2 = 0; } while(0);
  8423  1EA8  1118               	bcf	24,2	;volatile
  8424                           
  8425                           ;main.c: 145:     do { LATCbits.LATC6 = 1; } while(0);
  8426  1EA9  1718               	bsf	24,6	;volatile
  8427                           
  8428                           ;main.c: 146:     do { LATCbits.LATC5 = 0; } while(0);
  8429  1EAA  1298               	bcf	24,5	;volatile
  8430  1EAB  0008               	return
  8431  1EAC                     __end_of_Forward:	
  8432                           
  8433                           	psect	text22
  8434  1EA1                     __ptext22:	
  8435 ;; *************** function _CLC1_OutputStatusGet *****************
  8436 ;; Defined at:
  8437 ;;		line 86 in file "mcc_generated_files/clc1.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;		None
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      _Bool 
  8444 ;; Registers used:
  8445 ;;		wreg, status,2, status,0
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;Total ram usage:        0 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; This function calls:
  8458 ;;		Nothing
  8459 ;; This function is called by:
  8460 ;;		_main
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           
  8465                           ;psect for function _CLC1_OutputStatusGet
  8466  1EA1                     _CLC1_OutputStatusGet:	
  8467                           
  8468                           ;mcc_generated_files/clc1.c: 88:     return(CLC1CONbits.LC1OUT);
  8469                           
  8470                           ;incstack = 0
  8471                           ; Regs used in _CLC1_OutputStatusGet: [wreg+status,2+status,0]
  8472  1EA1  003C               	movlb	28	; select bank28
  8473  1EA2  0E10               	swapf	16,w	;volatile
  8474  1EA3  0C89               	rrf	9,f
  8475  1EA4  3901               	andlw	1
  8476  1EA5  0008               	return
  8477  1EA6                     __end_of_CLC1_OutputStatusGet:	
  8478                           
  8479                           	psect	text23
  8480  1F27                     __ptext23:	
  8481 ;; *************** function _Backwards *****************
  8482 ;; Defined at:
  8483 ;;		line 166 in file "main.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8500 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8501 ;;Total ram usage:        1 bytes
  8502 ;; Hardware stack levels used:    1
  8503 ;; Hardware stack levels required when called:    9
  8504 ;; This function calls:
  8505 ;;		_printf
  8506 ;; This function is called by:
  8507 ;;		_main
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           
  8512                           ;psect for function _Backwards
  8513  1F27                     _Backwards:	
  8514                           
  8515                           ;incstack = 0
  8516                           ; Regs used in _Backwards: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8517                           ;main.c: 167:     do { LATCbits.LATC7 = 0; } while(0);
  8518  1F27  0020               	movlb	0	; select bank0
  8519  1F28  1398               	bcf	24,7	;volatile
  8520                           
  8521                           ;main.c: 168:     do { LATCbits.LATC2 = 1; } while(0);
  8522  1F29  1518               	bsf	24,2	;volatile
  8523                           
  8524                           ;main.c: 169:     do { LATCbits.LATC6 = 0; } while(0);
  8525  1F2A  1318               	bcf	24,6	;volatile
  8526                           
  8527                           ;main.c: 170:     do { LATCbits.LATC5 = 1; } while(0);
  8528  1F2B  1698               	bsf	24,5	;volatile
  8529                           
  8530                           ;main.c: 171:     _delay((unsigned long)((500)*(1000000/4000.0)));
  8531  1F2C  30A3               	movlw	163
  8532  1F2D  0020               	movlb	0	; select bank0
  8533  1F2E  00EE               	movwf	??_Backwards
  8534  1F2F  3055               	movlw	85
  8535  1F30                     u6167:	
  8536  1F30  0B89               	decfsz	9,f
  8537  1F31  2F30               	goto	u6167
  8538  1F32  0BEE               	decfsz	??_Backwards,f
  8539  1F33  2F30               	goto	u6167
  8540                           
  8541                           ;main.c: 172:     printf("\n\rmoving Backwards");
  8542  1F34  301A               	movlw	low (STR_6| (0+32768))
  8543  1F35  0022               	movlb	2	; select bank2
  8544  1F36  00A0               	movwf	printf@fmt^(0+256)
  8545  1F37  3098               	movlw	high (STR_6| (0+32768))
  8546  1F38  00A1               	movwf	(printf@fmt^(0+256)+1)
  8547  1F39  319F  2751         	fcall	_printf
  8548  1F3B  0008               	return
  8549  1F3C                     __end_of_Backwards:	
  8550                           
  8551                           	psect	text24
  8552  1F51                     __ptext24:	
  8553 ;; *************** function _printf *****************
  8554 ;; Defined at:
  8555 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\printf.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  fmt             2    0[BANK2 ] PTR const unsigned char 
  8558 ;;		 -> STR_6(19), STR_5(15), STR_4(16), STR_3(26), 
  8559 ;;		 -> STR_2(16), STR_1(13), 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  ret             2    0        int 
  8562 ;;  ap              1   78[BANK1 ] PTR void [1]
  8563 ;;		 -> ?_printf(2), 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  2    0[BANK2 ] int 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8573 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Totals:         0       1       3       6       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;Total ram usage:       10 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    8
  8580 ;; This function calls:
  8581 ;;		_vfprintf
  8582 ;; This function is called by:
  8583 ;;		_main
  8584 ;;		_echo
  8585 ;;		_Right
  8586 ;;		_Backwards
  8587 ;;		_Left
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           
  8592                           ;psect for function _printf
  8593  1F51                     _printf:	
  8594                           
  8595                           ;incstack = 0
  8596                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8597  1F51  3022               	movlw	(low ((?_printf| (0+256)+2)))& (0+255)
  8598  1F52  0020               	movlb	0	; select bank0
  8599  1F53  00ED               	movwf	??_printf
  8600  1F54  086D               	movf	??_printf,w
  8601  1F55  0021               	movlb	1	; select bank1
  8602  1F56  00EE               	movwf	printf@ap^(0+128)
  8603  1F57  0022               	movlb	2	; select bank2
  8604  1F58  0821               	movf	(printf@fmt+1)^(0+256),w
  8605  1F59  0020               	movlb	0	; select bank0
  8606  1F5A  00E6               	movwf	vfprintf@fmt+1
  8607  1F5B  0022               	movlb	2	; select bank2
  8608  1F5C  0820               	movf	printf@fmt^(0+256),w
  8609  1F5D  0020               	movlb	0	; select bank0
  8610  1F5E  00E5               	movwf	vfprintf@fmt
  8611  1F5F  30EE               	movlw	(low (printf@ap| 0))& (0+255)
  8612  1F60  00ED               	movwf	??_printf
  8613  1F61  086D               	movf	??_printf,w
  8614  1F62  00E7               	movwf	vfprintf@ap
  8615  1F63  3000               	movlw	0
  8616  1F64  3190  209B         	fcall	_vfprintf
  8617  1F66  0008               	return
  8618  1F67                     __end_of_printf:	
  8619                           
  8620                           	psect	text25
  8621  109B                     __ptext25:	
  8622 ;; *************** function _vfprintf *****************
  8623 ;; Defined at:
  8624 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  fp              1    wreg     PTR struct _IO_FILE
  8627 ;;		 -> NULL(0), 
  8628 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  8629 ;;		 -> STR_6(19), STR_5(15), STR_4(16), STR_3(26), 
  8630 ;;		 -> STR_2(16), STR_1(13), 
  8631 ;;  ap              1   71[BANK0 ] PTR PTR void 
  8632 ;;		 -> printf@ap(1), 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  fp              1   74[BANK0 ] PTR struct _IO_FILE
  8635 ;;		 -> NULL(0), 
  8636 ;;  cfmt            2   75[BANK0 ] PTR unsigned char 
  8637 ;;		 -> STR_6(19), STR_5(15), STR_4(16), STR_3(26), 
  8638 ;;		 -> STR_2(16), STR_1(13), 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  2   69[BANK0 ] int 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8648 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8649 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8650 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;Total ram usage:        8 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    7
  8655 ;; This function calls:
  8656 ;;		_vfpfcnvrt
  8657 ;; This function is called by:
  8658 ;;		_printf
  8659 ;; This function uses a non-reentrant model
  8660 ;;
  8661                           
  8662                           
  8663                           ;psect for function _vfprintf
  8664  109B                     _vfprintf:	
  8665                           
  8666                           ;incstack = 0
  8667                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8668                           ;vfprintf@fp stored from wreg
  8669  109B  0020               	movlb	0	; select bank0
  8670  109C  00EA               	movwf	vfprintf@fp
  8671                           
  8672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  8673  109D  0866               	movf	vfprintf@fmt+1,w
  8674  109E  00EC               	movwf	vfprintf@cfmt+1
  8675  109F  0865               	movf	vfprintf@fmt,w
  8676  10A0  00EB               	movwf	vfprintf@cfmt
  8677                           
  8678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  8679  10A1  0022               	movlb	2	; select bank2
  8680  10A2  01C2               	clrf	_nout^(0+256)
  8681  10A3  01C3               	clrf	(_nout+1)^(0+256)
  8682  10A4                     l4490:	
  8683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8684                           
  8685                           
  8686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  8687  10A4  0020               	movlb	0	; select bank0
  8688  10A5  086B               	movf	vfprintf@cfmt,w
  8689  10A6  0084               	movwf	4
  8690  10A7  086C               	movf	vfprintf@cfmt+1,w
  8691  10A8  0085               	movwf	5
  8692  10A9  0012               	moviw fsr0++
  8693  10AA  1903               	btfsc	3,2
  8694  10AB  28C1               	goto	l4492
  8695                           
  8696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  8697  10AC  306B               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8698  10AD  00E8               	movwf	??_vfprintf
  8699  10AE  0868               	movf	??_vfprintf,w
  8700  10AF  00DD               	movwf	vfpfcnvrt@fmt
  8701  10B0  0867               	movf	vfprintf@ap,w
  8702  10B1  00E9               	movwf	??_vfprintf+1
  8703  10B2  0869               	movf	??_vfprintf+1,w
  8704  10B3  00DE               	movwf	vfpfcnvrt@ap
  8705  10B4  086A               	movf	vfprintf@fp,w
  8706  10B5  318D  25C9  3190   	fcall	_vfpfcnvrt
  8707  10B8  0020               	movlb	0	; select bank0
  8708  10B9  085D               	movf	?_vfpfcnvrt,w
  8709  10BA  0022               	movlb	2	; select bank2
  8710  10BB  07C2               	addwf	_nout^(0+256),f
  8711  10BC  0020               	movlb	0	; select bank0
  8712  10BD  085E               	movf	?_vfpfcnvrt+1,w
  8713  10BE  0022               	movlb	2	; select bank2
  8714  10BF  3DC3               	addwfc	(_nout+1)^(0+256),f
  8715  10C0  28A4               	goto	l4490
  8716  10C1                     l4492:	
  8717                           
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  8719  10C1  0022               	movlb	2	; select bank2
  8720  10C2  0843               	movf	(_nout+1)^(0+256),w
  8721  10C3  0020               	movlb	0	; select bank0
  8722  10C4  00E6               	movwf	?_vfprintf+1
  8723  10C5  0022               	movlb	2	; select bank2
  8724  10C6  0842               	movf	_nout^(0+256),w
  8725  10C7  0020               	movlb	0	; select bank0
  8726  10C8  00E5               	movwf	?_vfprintf
  8727  10C9  0008               	return
  8728  10CA                     __end_of_vfprintf:	
  8729                           
  8730                           	psect	text26
  8731  0DC9                     __ptext26:	
  8732 ;; *************** function _vfpfcnvrt *****************
  8733 ;; Defined at:
  8734 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  fp              1    wreg     PTR struct _IO_FILE
  8737 ;;		 -> NULL(0), 
  8738 ;;  fmt             1   61[BANK0 ] PTR PTR unsigned char 
  8739 ;;		 -> vfprintf@cfmt(2), 
  8740 ;;  ap              1   62[BANK0 ] PTR PTR void 
  8741 ;;		 -> printf@ap(1), 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  fp              1   75[BANK1 ] PTR struct _IO_FILE
  8744 ;;		 -> NULL(0), 
  8745 ;;  ll              8   57[BANK1 ] long long 
  8746 ;;  llu             8    0        unsigned long long 
  8747 ;;  f               4   67[BANK1 ] unsigned long long 
  8748 ;;  ct              3   71[BANK1 ] unsigned char [3]
  8749 ;;  vp              2    0        PTR void 
  8750 ;;  i               2    0        int 
  8751 ;;  done            2    0        int 
  8752 ;;  cp              2    0        PTR unsigned char 
  8753 ;;  c               1   74[BANK1 ] unsigned char 
  8754 ;; Return value:  Size  Location     Type
  8755 ;;                  2   61[BANK0 ] int 
  8756 ;; Registers used:
  8757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8758 ;; Tracked objects:
  8759 ;;		On entry : 0/0
  8760 ;;		On exit  : 0/0
  8761 ;;		Unchanged: 0/0
  8762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0
  8765 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8766 ;;      Totals:         0       8      19       0       0       0       0       0       0       0       0       0       
      +0       0
  8767 ;;Total ram usage:       27 bytes
  8768 ;; Hardware stack levels used:    1
  8769 ;; Hardware stack levels required when called:    6
  8770 ;; This function calls:
  8771 ;;		_dtoa
  8772 ;;		_efgtoa
  8773 ;;		_fputc
  8774 ;;		_isupper
  8775 ;;		_strncmp
  8776 ;;		_tolower
  8777 ;; This function is called by:
  8778 ;;		_vfprintf
  8779 ;; This function uses a non-reentrant model
  8780 ;;
  8781                           
  8782                           
  8783                           ;psect for function _vfpfcnvrt
  8784  0DC9                     _vfpfcnvrt:	
  8785                           
  8786                           ;incstack = 0
  8787                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8788                           ;vfpfcnvrt@fp stored from wreg
  8789  0DC9  0021               	movlb	1	; select bank1
  8790  0DCA  00EB               	movwf	vfpfcnvrt@fp^(0+128)
  8791                           
  8792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  8793  0DCB  0020               	movlb	0	; select bank0
  8794  0DCC  085D               	movf	vfpfcnvrt@fmt,w
  8795  0DCD  0086               	movwf	6
  8796  0DCE  0187               	clrf	7
  8797  0DCF  3F40               	moviw [0]fsr1
  8798  0DD0  00DF               	movwf	??_vfpfcnvrt
  8799  0DD1  3F41               	moviw [1]fsr1
  8800  0DD2  00E0               	movwf	??_vfpfcnvrt+1
  8801  0DD3  085F               	movf	??_vfpfcnvrt,w
  8802  0DD4  0084               	movwf	4
  8803  0DD5  0860               	movf	??_vfpfcnvrt+1,w
  8804  0DD6  0085               	movwf	5
  8805  0DD7  0012               	moviw fsr0++
  8806  0DD8  3A25               	xorlw	37
  8807  0DD9  1D03               	btfss	3,2
  8808  0DDA  2FDB               	goto	l4470
  8809                           
  8810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  8811  0DDB  085D               	movf	vfpfcnvrt@fmt,w
  8812  0DDC  0086               	movwf	6
  8813  0DDD  0187               	clrf	7
  8814  0DDE  3001               	movlw	1
  8815  0DDF  0781               	addwf	1,f
  8816  0DE0  3141               	addfsr 1,1
  8817  0DE1  1803               	skipnc
  8818  0DE2  0A81               	incf	1,f
  8819                           
  8820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  8821  0DE3  0022               	movlb	2	; select bank2
  8822  0DE4  01C4               	clrf	_width^(0+256)
  8823  0DE5  01C5               	clrf	(_width+1)^(0+256)
  8824  0DE6  01C8               	clrf	_flags^(0+256)
  8825  0DE7  01C9               	clrf	(_flags+1)^(0+256)
  8826                           
  8827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  8828  0DE8  30FF               	movlw	255
  8829  0DE9  00C6               	movwf	_prec^(0+256)
  8830  0DEA  30FF               	movlw	255
  8831  0DEB  00C7               	movwf	(_prec^(0+256)+1)
  8832                           
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  8834  0DEC  0020               	movlb	0	; select bank0
  8835  0DED  085D               	movf	vfpfcnvrt@fmt,w
  8836  0DEE  0086               	movwf	6
  8837  0DEF  0187               	clrf	7
  8838  0DF0  3F40               	moviw [0]fsr1
  8839  0DF1  00DF               	movwf	??_vfpfcnvrt
  8840  0DF2  3F41               	moviw [1]fsr1
  8841  0DF3  00E0               	movwf	??_vfpfcnvrt+1
  8842  0DF4  085F               	movf	??_vfpfcnvrt,w
  8843  0DF5  0084               	movwf	4
  8844  0DF6  0860               	movf	??_vfpfcnvrt+1,w
  8845  0DF7  0085               	movwf	5
  8846  0DF8  0800               	movf	0,w	;code access
  8847  0DF9  00E1               	movwf	??_vfpfcnvrt+2
  8848  0DFA  01E2               	clrf	??_vfpfcnvrt+3
  8849  0DFB  0861               	movf	??_vfpfcnvrt+2,w
  8850  0DFC  00F6               	movwf	tolower@c
  8851  0DFD  0862               	movf	??_vfpfcnvrt+3,w
  8852  0DFE  00F7               	movwf	tolower@c+1
  8853  0DFF  3190  2059  318D   	fcall	_tolower
  8854  0E02  0876               	movf	?_tolower,w
  8855  0E03  0020               	movlb	0	; select bank0
  8856  0E04  00E3               	movwf	??_vfpfcnvrt+4
  8857  0E05  0863               	movf	??_vfpfcnvrt+4,w
  8858  0E06  0021               	movlb	1	; select bank1
  8859  0E07  00E7               	movwf	vfpfcnvrt@ct^(0+128)
  8860                           
  8861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  8862  0E08  0867               	movf	vfpfcnvrt@ct^(0+128),w
  8863  0E09  1903               	btfsc	3,2
  8864  0E0A  2E4C               	goto	l4412
  8865                           
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  8867  0E0B  0020               	movlb	0	; select bank0
  8868  0E0C  085D               	movf	vfpfcnvrt@fmt,w
  8869  0E0D  0086               	movwf	6
  8870  0E0E  0187               	clrf	7
  8871  0E0F  3F40               	moviw [0]fsr1
  8872  0E10  00DF               	movwf	??_vfpfcnvrt
  8873  0E11  3F41               	moviw [1]fsr1
  8874  0E12  00E0               	movwf	??_vfpfcnvrt+1
  8875  0E13  3001               	movlw	1
  8876  0E14  075F               	addwf	??_vfpfcnvrt,w
  8877  0E15  0084               	movwf	4
  8878  0E16  0860               	movf	??_vfpfcnvrt+1,w
  8879  0E17  1803               	skipnc
  8880  0E18  0A60               	incf	??_vfpfcnvrt+1,w
  8881  0E19  0085               	movwf	5
  8882  0E1A  0800               	movf	0,w	;code access
  8883  0E1B  00E1               	movwf	??_vfpfcnvrt+2
  8884  0E1C  01E2               	clrf	??_vfpfcnvrt+3
  8885  0E1D  0861               	movf	??_vfpfcnvrt+2,w
  8886  0E1E  00F6               	movwf	tolower@c
  8887  0E1F  0862               	movf	??_vfpfcnvrt+3,w
  8888  0E20  00F7               	movwf	tolower@c+1
  8889  0E21  3190  2059  318D   	fcall	_tolower
  8890  0E24  0876               	movf	?_tolower,w
  8891  0E25  0020               	movlb	0	; select bank0
  8892  0E26  00E3               	movwf	??_vfpfcnvrt+4
  8893  0E27  0863               	movf	??_vfpfcnvrt+4,w
  8894  0E28  0021               	movlb	1	; select bank1
  8895  0E29  00E8               	movwf	(vfpfcnvrt@ct^(0+128)+1)
  8896                           
  8897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  8898  0E2A  0868               	movf	(vfpfcnvrt@ct^(0+128)+1),w
  8899  0E2B  1903               	btfsc	3,2
  8900  0E2C  2E4C               	goto	l4412
  8901                           
  8902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  8903  0E2D  0020               	movlb	0	; select bank0
  8904  0E2E  085D               	movf	vfpfcnvrt@fmt,w
  8905  0E2F  0086               	movwf	6
  8906  0E30  0187               	clrf	7
  8907  0E31  3F40               	moviw [0]fsr1
  8908  0E32  00DF               	movwf	??_vfpfcnvrt
  8909  0E33  3F41               	moviw [1]fsr1
  8910  0E34  00E0               	movwf	??_vfpfcnvrt+1
  8911  0E35  3002               	movlw	2
  8912  0E36  075F               	addwf	??_vfpfcnvrt,w
  8913  0E37  0084               	movwf	4
  8914  0E38  0860               	movf	??_vfpfcnvrt+1,w
  8915  0E39  1803               	skipnc
  8916  0E3A  0A60               	incf	??_vfpfcnvrt+1,w
  8917  0E3B  0085               	movwf	5
  8918  0E3C  0800               	movf	0,w	;code access
  8919  0E3D  00E1               	movwf	??_vfpfcnvrt+2
  8920  0E3E  01E2               	clrf	??_vfpfcnvrt+3
  8921  0E3F  0861               	movf	??_vfpfcnvrt+2,w
  8922  0E40  00F6               	movwf	tolower@c
  8923  0E41  0862               	movf	??_vfpfcnvrt+3,w
  8924  0E42  00F7               	movwf	tolower@c+1
  8925  0E43  3190  2059  318D   	fcall	_tolower
  8926  0E46  0876               	movf	?_tolower,w
  8927  0E47  0020               	movlb	0	; select bank0
  8928  0E48  00E3               	movwf	??_vfpfcnvrt+4
  8929  0E49  0863               	movf	??_vfpfcnvrt+4,w
  8930  0E4A  0021               	movlb	1	; select bank1
  8931  0E4B  00E9               	movwf	(vfpfcnvrt@ct^(0+128)+2)
  8932  0E4C                     l4412:	
  8933                           
  8934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8935  0E4C  0020               	movlb	0	; select bank0
  8936  0E4D  085D               	movf	vfpfcnvrt@fmt,w
  8937  0E4E  0086               	movwf	6
  8938  0E4F  0187               	clrf	7
  8939  0E50  3F40               	moviw [0]fsr1
  8940  0E51  00DF               	movwf	??_vfpfcnvrt
  8941  0E52  3F41               	moviw [1]fsr1
  8942  0E53  00E0               	movwf	??_vfpfcnvrt+1
  8943  0E54  085F               	movf	??_vfpfcnvrt,w
  8944  0E55  0084               	movwf	4
  8945  0E56  0860               	movf	??_vfpfcnvrt+1,w
  8946  0E57  0085               	movwf	5
  8947  0E58  0012               	moviw fsr0++
  8948  0E59  3A64               	xorlw	100
  8949  0E5A  1903               	btfsc	3,2
  8950  0E5B  2E6B               	goto	l4416
  8951  0E5C  085D               	movf	vfpfcnvrt@fmt,w
  8952  0E5D  0086               	movwf	6
  8953  0E5E  0187               	clrf	7
  8954  0E5F  3F40               	moviw [0]fsr1
  8955  0E60  00DF               	movwf	??_vfpfcnvrt
  8956  0E61  3F41               	moviw [1]fsr1
  8957  0E62  00E0               	movwf	??_vfpfcnvrt+1
  8958  0E63  085F               	movf	??_vfpfcnvrt,w
  8959  0E64  0084               	movwf	4
  8960  0E65  0860               	movf	??_vfpfcnvrt+1,w
  8961  0E66  0085               	movwf	5
  8962  0E67  0012               	moviw fsr0++
  8963  0E68  3A69               	xorlw	105
  8964  0E69  1D03               	btfss	3,2
  8965  0E6A  2EB9               	goto	l4424
  8966  0E6B                     l4416:	
  8967                           
  8968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  8969  0E6B  085D               	movf	vfpfcnvrt@fmt,w
  8970  0E6C  0086               	movwf	6
  8971  0E6D  0187               	clrf	7
  8972  0E6E  3001               	movlw	1
  8973  0E6F  0781               	addwf	1,f
  8974  0E70  3141               	addfsr 1,1
  8975  0E71  1803               	skipnc
  8976  0E72  0A81               	incf	1,f
  8977                           
  8978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8979  0E73  085E               	movf	vfpfcnvrt@ap,w
  8980  0E74  0086               	movwf	6
  8981  0E75  0187               	clrf	7
  8982  0E76  0801               	movf	1,w
  8983  0E77  0084               	movwf	4
  8984  0E78  3001               	movlw	1	; select bank2/3
  8985  0E79  0085               	movwf	5
  8986  0E7A  3002               	movlw	2
  8987  0E7B  0781               	addwf	1,f
  8988  0E7C  3F00               	moviw [0]fsr0
  8989  0E7D  00DF               	movwf	??_vfpfcnvrt
  8990  0E7E  3F01               	moviw [1]fsr0
  8991  0E7F  00E0               	movwf	??_vfpfcnvrt+1
  8992  0E80  085F               	movf	??_vfpfcnvrt,w
  8993  0E81  0021               	movlb	1	; select bank1
  8994  0E82  00D9               	movwf	vfpfcnvrt@ll^(0+128)
  8995  0E83  0020               	movlb	0	; select bank0
  8996  0E84  0860               	movf	??_vfpfcnvrt+1,w
  8997  0E85  0021               	movlb	1	; select bank1
  8998  0E86  00DA               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  8999  0E87  0D89               	rlf	9,f
  9000  0E88  3B89               	subwfb	9,f
  9001  0E89  0989               	comf	9,f
  9002  0E8A  00DB               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  9003  0E8B  00DC               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  9004  0E8C  00DD               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  9005  0E8D  00DE               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  9006  0E8E  00DF               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  9007  0E8F  00E0               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  9008                           
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  9010  0E90  0859               	movf	vfpfcnvrt@ll^(0+128),w
  9011  0E91  0020               	movlb	0	; select bank0
  9012  0E92  00B0               	movwf	dtoa@d
  9013  0E93  0021               	movlb	1	; select bank1
  9014  0E94  085A               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  9015  0E95  0020               	movlb	0	; select bank0
  9016  0E96  00B1               	movwf	dtoa@d+1
  9017  0E97  0021               	movlb	1	; select bank1
  9018  0E98  085B               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  9019  0E99  0020               	movlb	0	; select bank0
  9020  0E9A  00B2               	movwf	dtoa@d+2
  9021  0E9B  0021               	movlb	1	; select bank1
  9022  0E9C  085C               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  9023  0E9D  0020               	movlb	0	; select bank0
  9024  0E9E  00B3               	movwf	dtoa@d+3
  9025  0E9F  0021               	movlb	1	; select bank1
  9026  0EA0  085D               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  9027  0EA1  0020               	movlb	0	; select bank0
  9028  0EA2  00B4               	movwf	dtoa@d+4
  9029  0EA3  0021               	movlb	1	; select bank1
  9030  0EA4  085E               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  9031  0EA5  0020               	movlb	0	; select bank0
  9032  0EA6  00B5               	movwf	dtoa@d+5
  9033  0EA7  0021               	movlb	1	; select bank1
  9034  0EA8  085F               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  9035  0EA9  0020               	movlb	0	; select bank0
  9036  0EAA  00B6               	movwf	dtoa@d+6
  9037  0EAB  0021               	movlb	1	; select bank1
  9038  0EAC  0860               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  9039  0EAD  0020               	movlb	0	; select bank0
  9040  0EAE  00B7               	movwf	dtoa@d+7
  9041  0EAF  0021               	movlb	1	; select bank1
  9042  0EB0  086B               	movf	vfpfcnvrt@fp^(0+128),w
  9043  0EB1  3188  2063         	fcall	_dtoa
  9044  0EB3  0020               	movlb	0	; select bank0
  9045  0EB4  0831               	movf	?_dtoa+1,w
  9046  0EB5  00DE               	movwf	?_vfpfcnvrt+1
  9047  0EB6  0830               	movf	?_dtoa,w
  9048  0EB7  00DD               	movwf	?_vfpfcnvrt
  9049  0EB8  0008               	return
  9050  0EB9                     l4424:	
  9051                           
  9052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  9053  0EB9  3066               	movlw	102
  9054  0EBA  0021               	movlb	1	; select bank1
  9055  0EBB  0667               	xorwf	vfpfcnvrt@ct^(0+128),w
  9056  0EBC  1D03               	btfss	3,2
  9057  0EBD  2F09               	goto	l4436
  9058                           
  9059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  9060  0EBE  0020               	movlb	0	; select bank0
  9061  0EBF  085D               	movf	vfpfcnvrt@fmt,w
  9062  0EC0  0086               	movwf	6
  9063  0EC1  0187               	clrf	7
  9064  0EC2  3F40               	moviw [0]fsr1
  9065  0EC3  00DF               	movwf	??_vfpfcnvrt
  9066  0EC4  3F41               	moviw [1]fsr1
  9067  0EC5  00E0               	movwf	??_vfpfcnvrt+1
  9068  0EC6  085F               	movf	??_vfpfcnvrt,w
  9069  0EC7  0084               	movwf	4
  9070  0EC8  0860               	movf	??_vfpfcnvrt+1,w
  9071  0EC9  0085               	movwf	5
  9072  0ECA  0800               	movf	0,w	;code access
  9073  0ECB  00E1               	movwf	??_vfpfcnvrt+2
  9074  0ECC  0861               	movf	??_vfpfcnvrt+2,w
  9075  0ECD  0021               	movlb	1	; select bank1
  9076  0ECE  00EA               	movwf	vfpfcnvrt@c^(0+128)
  9077                           
  9078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  9079  0ECF  0020               	movlb	0	; select bank0
  9080  0ED0  085D               	movf	vfpfcnvrt@fmt,w
  9081  0ED1  0086               	movwf	6
  9082  0ED2  0187               	clrf	7
  9083  0ED3  3001               	movlw	1
  9084  0ED4  0781               	addwf	1,f
  9085  0ED5  3141               	addfsr 1,1
  9086  0ED6  1803               	skipnc
  9087  0ED7  0A81               	incf	1,f
  9088                           
  9089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9090  0ED8  085E               	movf	vfpfcnvrt@ap,w
  9091  0ED9  0086               	movwf	6
  9092  0EDA  0187               	clrf	7
  9093  0EDB  0801               	movf	1,w
  9094  0EDC  0084               	movwf	4
  9095  0EDD  3001               	movlw	1	; select bank2/3
  9096  0EDE  0085               	movwf	5
  9097  0EDF  3004               	movlw	4
  9098  0EE0  0781               	addwf	1,f
  9099  0EE1  3F00               	moviw [0]fsr0
  9100  0EE2  0021               	movlb	1	; select bank1
  9101  0EE3  00E3               	movwf	vfpfcnvrt@f^(0+128)
  9102  0EE4  3F01               	moviw [1]fsr0
  9103  0EE5  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  9104  0EE6  3F02               	moviw [2]fsr0
  9105  0EE7  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  9106  0EE8  3F03               	moviw [3]fsr0
  9107  0EE9  00E6               	movwf	(vfpfcnvrt@f+3)^(0+128)
  9108                           
  9109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  9110  0EEA  0866               	movf	(vfpfcnvrt@f+3)^(0+128),w
  9111  0EEB  0020               	movlb	0	; select bank0
  9112  0EEC  00D7               	movwf	efgtoa@f+3
  9113  0EED  0021               	movlb	1	; select bank1
  9114  0EEE  0865               	movf	(vfpfcnvrt@f+2)^(0+128),w
  9115  0EEF  0020               	movlb	0	; select bank0
  9116  0EF0  00D6               	movwf	efgtoa@f+2
  9117  0EF1  0021               	movlb	1	; select bank1
  9118  0EF2  0864               	movf	(vfpfcnvrt@f+1)^(0+128),w
  9119  0EF3  0020               	movlb	0	; select bank0
  9120  0EF4  00D5               	movwf	efgtoa@f+1
  9121  0EF5  0021               	movlb	1	; select bank1
  9122  0EF6  0863               	movf	vfpfcnvrt@f^(0+128),w
  9123  0EF7  0020               	movlb	0	; select bank0
  9124  0EF8  00D4               	movwf	efgtoa@f
  9125  0EF9  0021               	movlb	1	; select bank1
  9126  0EFA  086A               	movf	vfpfcnvrt@c^(0+128),w
  9127  0EFB  0020               	movlb	0	; select bank0
  9128  0EFC  00DF               	movwf	??_vfpfcnvrt
  9129  0EFD  085F               	movf	??_vfpfcnvrt,w
  9130  0EFE  00D8               	movwf	efgtoa@c
  9131  0EFF  0021               	movlb	1	; select bank1
  9132  0F00  086B               	movf	vfpfcnvrt@fp^(0+128),w
  9133  0F01  3181  21A5         	fcall	_efgtoa
  9134  0F03  0020               	movlb	0	; select bank0
  9135  0F04  0855               	movf	?_efgtoa+1,w
  9136  0F05  00DE               	movwf	?_vfpfcnvrt+1
  9137  0F06  0854               	movf	?_efgtoa,w
  9138  0F07  00DD               	movwf	?_vfpfcnvrt
  9139  0F08  0008               	return
  9140  0F09                     l4436:	
  9141                           
  9142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9143  0F09  3079               	movlw	low (STR_15| (0+32768))
  9144  0F0A  00F0               	movwf	strncmp@_r
  9145  0F0B  3098               	movlw	high (STR_15| (0+32768))
  9146  0F0C  00F1               	movwf	strncmp@_r+1
  9147  0F0D  3002               	movlw	2
  9148  0F0E  00F2               	movwf	strncmp@n
  9149  0F0F  3000               	movlw	0
  9150  0F10  00F3               	movwf	strncmp@n+1
  9151  0F11  30E7               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  9152  0F12  3191  21BC  318D   	fcall	_strncmp
  9153  0F15  0870               	movf	?_strncmp,w
  9154  0F16  0471               	iorwf	?_strncmp+1,w
  9155  0F17  1D03               	btfss	3,2
  9156  0F18  2FA6               	goto	l4454
  9157                           
  9158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9159  0F19  0020               	movlb	0	; select bank0
  9160  0F1A  085D               	movf	vfpfcnvrt@fmt,w
  9161  0F1B  0086               	movwf	6
  9162  0F1C  0187               	clrf	7
  9163  0F1D  3F40               	moviw [0]fsr1
  9164  0F1E  00DF               	movwf	??_vfpfcnvrt
  9165  0F1F  3F41               	moviw [1]fsr1
  9166  0F20  00E0               	movwf	??_vfpfcnvrt+1
  9167  0F21  3001               	movlw	1
  9168  0F22  075F               	addwf	??_vfpfcnvrt,w
  9169  0F23  0084               	movwf	4
  9170  0F24  0860               	movf	??_vfpfcnvrt+1,w
  9171  0F25  1803               	skipnc
  9172  0F26  0A60               	incf	??_vfpfcnvrt+1,w
  9173  0F27  0085               	movwf	5
  9174  0F28  0800               	movf	0,w	;code access
  9175  0F29  00E1               	movwf	??_vfpfcnvrt+2
  9176  0F2A  0861               	movf	??_vfpfcnvrt+2,w
  9177  0F2B  0021               	movlb	1	; select bank1
  9178  0F2C  00EA               	movwf	vfpfcnvrt@c^(0+128)
  9179  0F2D  0020               	movlb	0	; select bank0
  9180  0F2E  085D               	movf	vfpfcnvrt@fmt,w
  9181  0F2F  0086               	movwf	6
  9182  0F30  0187               	clrf	7
  9183  0F31  3F40               	moviw [0]fsr1
  9184  0F32  00DF               	movwf	??_vfpfcnvrt
  9185  0F33  3F41               	moviw [1]fsr1
  9186  0F34  00E0               	movwf	??_vfpfcnvrt+1
  9187  0F35  085F               	movf	??_vfpfcnvrt,w
  9188  0F36  0084               	movwf	4
  9189  0F37  0860               	movf	??_vfpfcnvrt+1,w
  9190  0F38  0085               	movwf	5
  9191  0F39  0800               	movf	0,w	;code access
  9192  0F3A  3EBF               	addlw	191
  9193  0F3B  00E1               	movwf	??_vfpfcnvrt+2
  9194  0F3C  30FF               	movlw	255
  9195  0F3D  1803               	skipnc
  9196  0F3E  3000               	movlw	0
  9197  0F3F  00E2               	movwf	??_vfpfcnvrt+3
  9198  0F40  3000               	movlw	0
  9199  0F41  0262               	subwf	??_vfpfcnvrt+3,w
  9200  0F42  301A               	movlw	26
  9201  0F43  1903               	skipnz
  9202  0F44  0261               	subwf	??_vfpfcnvrt+2,w
  9203  0F45  1803               	btfsc	3,0
  9204  0F46  2F49               	goto	u5870
  9205  0F47  3001               	movlw	1
  9206  0F48  2F4A               	goto	u5880
  9207  0F49                     u5870:	
  9208  0F49  3000               	movlw	0
  9209  0F4A                     u5880:	
  9210  0F4A  00E3               	movwf	??_vfpfcnvrt+4
  9211  0F4B  01E4               	clrf	??_vfpfcnvrt+5
  9212  0F4C  0863               	movf	??_vfpfcnvrt+4,w
  9213  0F4D  0021               	movlb	1	; select bank1
  9214  0F4E  00E1               	movwf	_vfpfcnvrt$1440^(0+128)
  9215  0F4F  0020               	movlb	0	; select bank0
  9216  0F50  0864               	movf	??_vfpfcnvrt+5,w
  9217  0F51  0021               	movlb	1	; select bank1
  9218  0F52  00E2               	movwf	(_vfpfcnvrt$1440+1)^(0+128)
  9219  0F53  0861               	movf	_vfpfcnvrt$1440^(0+128),w
  9220  0F54  0462               	iorwf	(_vfpfcnvrt$1440+1)^(0+128),w
  9221  0F55  1903               	btfsc	3,2
  9222  0F56  2F6A               	goto	l4446
  9223                           
  9224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  9225  0F57  0020               	movlb	0	; select bank0
  9226  0F58  085E               	movf	vfpfcnvrt@ap,w
  9227  0F59  0086               	movwf	6
  9228  0F5A  0187               	clrf	7
  9229  0F5B  0801               	movf	1,w
  9230  0F5C  0084               	movwf	4
  9231  0F5D  3001               	movlw	1	; select bank2/3
  9232  0F5E  0085               	movwf	5
  9233  0F5F  3004               	movlw	4
  9234  0F60  0781               	addwf	1,f
  9235  0F61  3F00               	moviw [0]fsr0
  9236  0F62  0021               	movlb	1	; select bank1
  9237  0F63  00E3               	movwf	vfpfcnvrt@f^(0+128)
  9238  0F64  3F01               	moviw [1]fsr0
  9239  0F65  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  9240  0F66  3F02               	moviw [2]fsr0
  9241  0F67  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  9242  0F68  3F03               	moviw [3]fsr0
  9243  0F69  2F7C               	goto	L1
  9244  0F6A                     l4446:	
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  9246                           
  9247                           
  9248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9249  0F6A  0020               	movlb	0	; select bank0
  9250  0F6B  085E               	movf	vfpfcnvrt@ap,w
  9251  0F6C  0086               	movwf	6
  9252  0F6D  0187               	clrf	7
  9253  0F6E  0801               	movf	1,w
  9254  0F6F  0084               	movwf	4
  9255  0F70  3001               	movlw	1	; select bank2/3
  9256  0F71  0085               	movwf	5
  9257  0F72  3004               	movlw	4
  9258  0F73  0781               	addwf	1,f
  9259  0F74  3F00               	moviw [0]fsr0
  9260  0F75  0021               	movlb	1	; select bank1
  9261  0F76  00E3               	movwf	vfpfcnvrt@f^(0+128)
  9262  0F77  3F01               	moviw [1]fsr0
  9263  0F78  00E4               	movwf	(vfpfcnvrt@f+1)^(0+128)
  9264  0F79  3F02               	moviw [2]fsr0
  9265  0F7A  00E5               	movwf	(vfpfcnvrt@f+2)^(0+128)
  9266  0F7B  3F03               	moviw [3]fsr0
  9267  0F7C                     L1:	
  9268  0F7C  00E6               	movwf	(vfpfcnvrt@f+3)^(0+128)
  9269                           
  9270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  9271  0F7D  0020               	movlb	0	; select bank0
  9272  0F7E  085D               	movf	vfpfcnvrt@fmt,w
  9273  0F7F  0086               	movwf	6
  9274  0F80  0187               	clrf	7
  9275  0F81  3002               	movlw	2
  9276  0F82  0781               	addwf	1,f
  9277  0F83  3141               	addfsr 1,1
  9278  0F84  1803               	skipnc
  9279  0F85  0A81               	incf	1,f
  9280                           
  9281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  9282  0F86  0021               	movlb	1	; select bank1
  9283  0F87  0866               	movf	(vfpfcnvrt@f+3)^(0+128),w
  9284  0F88  0020               	movlb	0	; select bank0
  9285  0F89  00D7               	movwf	efgtoa@f+3
  9286  0F8A  0021               	movlb	1	; select bank1
  9287  0F8B  0865               	movf	(vfpfcnvrt@f+2)^(0+128),w
  9288  0F8C  0020               	movlb	0	; select bank0
  9289  0F8D  00D6               	movwf	efgtoa@f+2
  9290  0F8E  0021               	movlb	1	; select bank1
  9291  0F8F  0864               	movf	(vfpfcnvrt@f+1)^(0+128),w
  9292  0F90  0020               	movlb	0	; select bank0
  9293  0F91  00D5               	movwf	efgtoa@f+1
  9294  0F92  0021               	movlb	1	; select bank1
  9295  0F93  0863               	movf	vfpfcnvrt@f^(0+128),w
  9296  0F94  0020               	movlb	0	; select bank0
  9297  0F95  00D4               	movwf	efgtoa@f
  9298  0F96  0021               	movlb	1	; select bank1
  9299  0F97  086A               	movf	vfpfcnvrt@c^(0+128),w
  9300  0F98  0020               	movlb	0	; select bank0
  9301  0F99  00DF               	movwf	??_vfpfcnvrt
  9302  0F9A  085F               	movf	??_vfpfcnvrt,w
  9303  0F9B  00D8               	movwf	efgtoa@c
  9304  0F9C  0021               	movlb	1	; select bank1
  9305  0F9D  086B               	movf	vfpfcnvrt@fp^(0+128),w
  9306  0F9E  3181  21A5         	fcall	_efgtoa
  9307  0FA0  0020               	movlb	0	; select bank0
  9308  0FA1  0855               	movf	?_efgtoa+1,w
  9309  0FA2  00DE               	movwf	?_vfpfcnvrt+1
  9310  0FA3  0854               	movf	?_efgtoa,w
  9311  0FA4  00DD               	movwf	?_vfpfcnvrt
  9312  0FA5  0008               	return
  9313  0FA6                     l4454:	
  9314                           
  9315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  9316  0FA6  0020               	movlb	0	; select bank0
  9317  0FA7  085D               	movf	vfpfcnvrt@fmt,w
  9318  0FA8  0086               	movwf	6
  9319  0FA9  0187               	clrf	7
  9320  0FAA  3F40               	moviw [0]fsr1
  9321  0FAB  00DF               	movwf	??_vfpfcnvrt
  9322  0FAC  3F41               	moviw [1]fsr1
  9323  0FAD  00E0               	movwf	??_vfpfcnvrt+1
  9324  0FAE  085F               	movf	??_vfpfcnvrt,w
  9325  0FAF  0084               	movwf	4
  9326  0FB0  0860               	movf	??_vfpfcnvrt+1,w
  9327  0FB1  0085               	movwf	5
  9328  0FB2  0012               	moviw fsr0++
  9329  0FB3  3A25               	xorlw	37
  9330  0FB4  1D03               	btfss	3,2
  9331  0FB5  2FD0               	goto	l4464
  9332                           
  9333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  9334  0FB6  085D               	movf	vfpfcnvrt@fmt,w
  9335  0FB7  0086               	movwf	6
  9336  0FB8  0187               	clrf	7
  9337  0FB9  3001               	movlw	1
  9338  0FBA  0781               	addwf	1,f
  9339  0FBB  3141               	addfsr 1,1
  9340  0FBC  1803               	skipnc
  9341  0FBD  0A81               	incf	1,f
  9342                           
  9343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  9344  0FBE  3025               	movlw	37
  9345  0FBF  00F2               	movwf	fputc@c
  9346  0FC0  3000               	movlw	0
  9347  0FC1  00F3               	movwf	fputc@c+1
  9348  0FC2  0021               	movlb	1	; select bank1
  9349  0FC3  086B               	movf	vfpfcnvrt@fp^(0+128),w
  9350  0FC4  0020               	movlb	0	; select bank0
  9351  0FC5  00DF               	movwf	??_vfpfcnvrt
  9352  0FC6  085F               	movf	??_vfpfcnvrt,w
  9353  0FC7  00F4               	movwf	fputc@fp
  9354  0FC8  3190  20FA         	fcall	_fputc
  9355  0FCA                     l4460:	
  9356                           
  9357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  9358  0FCA  3001               	movlw	1
  9359  0FCB  0020               	movlb	0	; select bank0
  9360  0FCC  00DD               	movwf	?_vfpfcnvrt
  9361  0FCD  3000               	movlw	0
  9362  0FCE  00DE               	movwf	?_vfpfcnvrt+1
  9363  0FCF  0008               	return
  9364  0FD0                     l4464:	
  9365                           
  9366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  9367  0FD0  085D               	movf	vfpfcnvrt@fmt,w
  9368  0FD1  0086               	movwf	6
  9369  0FD2  0187               	clrf	7
  9370  0FD3  3001               	movlw	1
  9371  0FD4  0781               	addwf	1,f
  9372  0FD5  3141               	addfsr 1,1
  9373  0FD6  1803               	skipnc
  9374  0FD7  0A81               	incf	1,f
  9375                           
  9376                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  9377  0FD8  01DD               	clrf	?_vfpfcnvrt
  9378  0FD9  01DE               	clrf	?_vfpfcnvrt+1
  9379  0FDA  0008               	return
  9380  0FDB                     l4470:	
  9381                           
  9382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  9383  0FDB  085D               	movf	vfpfcnvrt@fmt,w
  9384  0FDC  0086               	movwf	6
  9385  0FDD  0187               	clrf	7
  9386  0FDE  3F40               	moviw [0]fsr1
  9387  0FDF  00DF               	movwf	??_vfpfcnvrt
  9388  0FE0  3F41               	moviw [1]fsr1
  9389  0FE1  00E0               	movwf	??_vfpfcnvrt+1
  9390  0FE2  085F               	movf	??_vfpfcnvrt,w
  9391  0FE3  0084               	movwf	4
  9392  0FE4  0860               	movf	??_vfpfcnvrt+1,w
  9393  0FE5  0085               	movwf	5
  9394  0FE6  0800               	movf	0,w	;code access
  9395  0FE7  00E1               	movwf	??_vfpfcnvrt+2
  9396  0FE8  01E2               	clrf	??_vfpfcnvrt+3
  9397  0FE9  0861               	movf	??_vfpfcnvrt+2,w
  9398  0FEA  00F2               	movwf	fputc@c
  9399  0FEB  0862               	movf	??_vfpfcnvrt+3,w
  9400  0FEC  00F3               	movwf	fputc@c+1
  9401  0FED  0021               	movlb	1	; select bank1
  9402  0FEE  086B               	movf	vfpfcnvrt@fp^(0+128),w
  9403  0FEF  0020               	movlb	0	; select bank0
  9404  0FF0  00E3               	movwf	??_vfpfcnvrt+4
  9405  0FF1  0863               	movf	??_vfpfcnvrt+4,w
  9406  0FF2  00F4               	movwf	fputc@fp
  9407  0FF3  3190  20FA  318D   	fcall	_fputc
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  9410  0FF6  0020               	movlb	0	; select bank0
  9411  0FF7  085D               	movf	vfpfcnvrt@fmt,w
  9412  0FF8  0086               	movwf	6
  9413  0FF9  0187               	clrf	7
  9414  0FFA  3001               	movlw	1
  9415  0FFB  0781               	addwf	1,f
  9416  0FFC  3141               	addfsr 1,1
  9417  0FFD  1803               	skipnc
  9418  0FFE  0A81               	incf	1,f
  9419  0FFF  2FCA               	goto	l4460
  9420  1000                     __end_of_vfpfcnvrt:	
  9421                           
  9422                           	psect	text27
  9423  11BC                     __ptext27:	
  9424 ;; *************** function _strncmp *****************
  9425 ;; Defined at:
  9426 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  9427 ;; Parameters:    Size  Location     Type
  9428 ;;  _l              1    wreg     PTR const unsigned char 
  9429 ;;		 -> vfpfcnvrt@ct(3), 
  9430 ;;  _r              2    0[COMMON] PTR const unsigned char 
  9431 ;;		 -> STR_17(3), 
  9432 ;;  n               2    2[COMMON] unsigned int 
  9433 ;; Auto vars:     Size  Location     Type
  9434 ;;  _l              1    5[COMMON] PTR const unsigned char 
  9435 ;;		 -> vfpfcnvrt@ct(3), 
  9436 ;;  r               2    6[COMMON] PTR const unsigned char 
  9437 ;;		 -> STR_17(3), 
  9438 ;;  l               1    8[COMMON] PTR const unsigned char 
  9439 ;;		 -> vfpfcnvrt@ct(3), 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  2    0[COMMON] int 
  9442 ;; Registers used:
  9443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9452 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9453 ;;Total ram usage:        9 bytes
  9454 ;; Hardware stack levels used:    1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_vfpfcnvrt
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           
  9463                           ;psect for function _strncmp
  9464  11BC                     _strncmp:	
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  9468                           ;strncmp@_l stored from wreg
  9469  11BC  00F5               	movwf	strncmp@_l
  9470  11BD  0875               	movf	strncmp@_l,w
  9471  11BE  00F4               	movwf	??_strncmp
  9472  11BF  0874               	movf	??_strncmp,w
  9473  11C0  00F8               	movwf	strncmp@l
  9474  11C1  0871               	movf	strncmp@_r+1,w
  9475  11C2  00F7               	movwf	strncmp@r+1
  9476  11C3  0870               	movf	strncmp@_r,w
  9477  11C4  00F6               	movwf	strncmp@r
  9478  11C5  3001               	movlw	1
  9479  11C6  02F2               	subwf	strncmp@n,f
  9480  11C7  3000               	movlw	0
  9481  11C8  3BF3               	subwfb	strncmp@n+1,f
  9482  11C9  0A72               	incf	strncmp@n,w
  9483  11CA  1D03               	skipz
  9484  11CB  29F6               	goto	l4382
  9485  11CC  0A73               	incf	strncmp@n+1,w
  9486  11CD  1D03               	btfss	3,2
  9487  11CE  29F6               	goto	l4382
  9488  11CF  01F0               	clrf	?_strncmp
  9489  11D0  01F1               	clrf	?_strncmp+1
  9490  11D1  0008               	return
  9491  11D2                     l4384:	
  9492  11D2  0876               	movf	strncmp@r,w
  9493  11D3  0084               	movwf	4
  9494  11D4  0877               	movf	strncmp@r+1,w
  9495  11D5  0085               	movwf	5
  9496  11D6  0012               	moviw fsr0++
  9497  11D7  1903               	btfsc	3,2
  9498  11D8  29FC               	goto	l4390
  9499  11D9  0872               	movf	strncmp@n,w
  9500  11DA  0473               	iorwf	strncmp@n+1,w
  9501  11DB  1903               	btfsc	3,2
  9502  11DC  29FC               	goto	l4390
  9503  11DD  0876               	movf	strncmp@r,w
  9504  11DE  0084               	movwf	4
  9505  11DF  0877               	movf	strncmp@r+1,w
  9506  11E0  0085               	movwf	5
  9507  11E1  0800               	movf	0,w	;code access
  9508  11E2  00F4               	movwf	??_strncmp
  9509  11E3  0878               	movf	strncmp@l,w
  9510  11E4  0086               	movwf	6
  9511  11E5  0187               	clrf	7
  9512  11E6  0801               	movf	1,w
  9513  11E7  0674               	xorwf	??_strncmp,w
  9514  11E8  1D03               	btfss	3,2
  9515  11E9  29FC               	goto	l4390
  9516  11EA  3001               	movlw	1
  9517  11EB  00F4               	movwf	??_strncmp
  9518  11EC  0874               	movf	??_strncmp,w
  9519  11ED  07F8               	addwf	strncmp@l,f
  9520  11EE  3001               	movlw	1
  9521  11EF  07F6               	addwf	strncmp@r,f
  9522  11F0  3000               	movlw	0
  9523  11F1  3DF7               	addwfc	strncmp@r+1,f
  9524  11F2  3001               	movlw	1
  9525  11F3  02F2               	subwf	strncmp@n,f
  9526  11F4  3000               	movlw	0
  9527  11F5  3BF3               	subwfb	strncmp@n+1,f
  9528  11F6                     l4382:	
  9529  11F6  0878               	movf	strncmp@l,w
  9530  11F7  0086               	movwf	6
  9531  11F8  0187               	clrf	7
  9532  11F9  0801               	movf	1,w
  9533  11FA  1D03               	btfss	3,2
  9534  11FB  29D2               	goto	l4384
  9535  11FC                     l4390:	
  9536  11FC  0878               	movf	strncmp@l,w
  9537  11FD  0086               	movwf	6
  9538  11FE  0187               	clrf	7
  9539  11FF  0876               	movf	strncmp@r,w
  9540  1200  0084               	movwf	4
  9541  1201  0877               	movf	strncmp@r+1,w
  9542  1202  0085               	movwf	5
  9543  1203  0800               	movf	0,w	;code access
  9544  1204  0201               	subwf	1,w
  9545  1205  00F0               	movwf	?_strncmp
  9546  1206  01F1               	clrf	?_strncmp+1
  9547  1207  1C03               	skipc
  9548  1208  03F1               	decf	?_strncmp+1,f
  9549  1209  0008               	return
  9550  120A                     __end_of_strncmp:	
  9551                           
  9552                           	psect	text28
  9553  01A5                     __ptext28:	
  9554 ;; *************** function _efgtoa *****************
  9555 ;; Defined at:
  9556 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  fp              1    wreg     PTR struct _IO_FILE
  9559 ;;		 -> NULL(0), 
  9560 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  9561 ;;  c               1   56[BANK0 ] unsigned char 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  fp              1   30[BANK1 ] PTR struct _IO_FILE
  9564 ;;		 -> NULL(0), 
  9565 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  9566 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  9567 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  9568 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  9569 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  9570 ;;  n               2   51[BANK1 ] int 
  9571 ;;  e               2   49[BANK1 ] int 
  9572 ;;  i               2   43[BANK1 ] int 
  9573 ;;  w               2   32[BANK1 ] int 
  9574 ;;  p               2   28[BANK1 ] int 
  9575 ;;  sign            2   26[BANK1 ] int 
  9576 ;;  d               2   24[BANK1 ] int 
  9577 ;;  ne              2   22[BANK1 ] int 
  9578 ;;  m               2   20[BANK1 ] int 
  9579 ;;  pp              2   18[BANK1 ] int 
  9580 ;;  t               2   16[BANK1 ] int 
  9581 ;;  mode            1   34[BANK1 ] unsigned char 
  9582 ;;  nmode           1   31[BANK1 ] unsigned char 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  2   52[BANK0 ] int 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9592 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9593 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Totals:         0       9      57       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;Total ram usage:       66 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    5
  9599 ;; This function calls:
  9600 ;;		___awdiv
  9601 ;;		___awmod
  9602 ;;		___fladd
  9603 ;;		___fldiv
  9604 ;;		___fleq
  9605 ;;		___flge
  9606 ;;		___flmul
  9607 ;;		___flneg
  9608 ;;		___flsub
  9609 ;;		___fltol
  9610 ;;		___fpclassifyf
  9611 ;;		_floorf
  9612 ;;		_isupper
  9613 ;;		_pad
  9614 ;;		_strcpy
  9615 ;;		_tolower
  9616 ;; This function is called by:
  9617 ;;		_vfpfcnvrt
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           
  9622                           ;psect for function _efgtoa
  9623  01A5                     _efgtoa:	
  9624                           
  9625                           ;incstack = 0
  9626                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9627                           ;efgtoa@fp stored from wreg
  9628  01A5  0021               	movlb	1	; select bank1
  9629  01A6  00BE               	movwf	efgtoa@fp^(0+128)
  9630                           
  9631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9632  01A7  01BA               	clrf	efgtoa@sign^(0+128)
  9633  01A8  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  9634                           
  9635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9636  01A9  0020               	movlb	0	; select bank0
  9637  01AA  0857               	movf	efgtoa@f+3,w
  9638  01AB  0021               	movlb	1	; select bank1
  9639  01AC  00D0               	movwf	(efgtoa@g+3)^(0+128)
  9640  01AD  0020               	movlb	0	; select bank0
  9641  01AE  0856               	movf	efgtoa@f+2,w
  9642  01AF  0021               	movlb	1	; select bank1
  9643  01B0  00CF               	movwf	(efgtoa@g+2)^(0+128)
  9644  01B1  0020               	movlb	0	; select bank0
  9645  01B2  0855               	movf	efgtoa@f+1,w
  9646  01B3  0021               	movlb	1	; select bank1
  9647  01B4  00CE               	movwf	(efgtoa@g+1)^(0+128)
  9648  01B5  0020               	movlb	0	; select bank0
  9649  01B6  0854               	movf	efgtoa@f,w
  9650  01B7  0021               	movlb	1	; select bank1
  9651  01B8  00CD               	movwf	efgtoa@g^(0+128)
  9652                           
  9653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9654  01B9  0850               	movf	(efgtoa@g+3)^(0+128),w
  9655  01BA  0020               	movlb	0	; select bank0
  9656  01BB  00CB               	movwf	___flge@ff1+3
  9657  01BC  0021               	movlb	1	; select bank1
  9658  01BD  084F               	movf	(efgtoa@g+2)^(0+128),w
  9659  01BE  0020               	movlb	0	; select bank0
  9660  01BF  00CA               	movwf	___flge@ff1+2
  9661  01C0  0021               	movlb	1	; select bank1
  9662  01C1  084E               	movf	(efgtoa@g+1)^(0+128),w
  9663  01C2  0020               	movlb	0	; select bank0
  9664  01C3  00C9               	movwf	___flge@ff1+1
  9665  01C4  0021               	movlb	1	; select bank1
  9666  01C5  084D               	movf	efgtoa@g^(0+128),w
  9667  01C6  0020               	movlb	0	; select bank0
  9668  01C7  00C8               	movwf	___flge@ff1
  9669  01C8  3000               	movlw	0
  9670  01C9  00CF               	movwf	___flge@ff2+3
  9671  01CA  3000               	movlw	0
  9672  01CB  00CE               	movwf	___flge@ff2+2
  9673  01CC  3000               	movlw	0
  9674  01CD  00CD               	movwf	___flge@ff2+1
  9675  01CE  3000               	movlw	0
  9676  01CF  00CC               	movwf	___flge@ff2
  9677  01D0  3193  23A4  3181   	fcall	___flge
  9678  01D3  1803               	btfsc	3,0
  9679  01D4  29EE               	goto	l4086
  9680                           
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9682  01D5  3001               	movlw	1
  9683  01D6  0021               	movlb	1	; select bank1
  9684  01D7  00BA               	movwf	efgtoa@sign^(0+128)
  9685  01D8  3000               	movlw	0
  9686  01D9  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  9687                           
  9688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9689  01DA  0850               	movf	(efgtoa@g+3)^(0+128),w
  9690  01DB  00F3               	movwf	___flneg@f1+3
  9691  01DC  084F               	movf	(efgtoa@g+2)^(0+128),w
  9692  01DD  00F2               	movwf	___flneg@f1+2
  9693  01DE  084E               	movf	(efgtoa@g+1)^(0+128),w
  9694  01DF  00F1               	movwf	___flneg@f1+1
  9695  01E0  084D               	movf	efgtoa@g^(0+128),w
  9696  01E1  00F0               	movwf	___flneg@f1
  9697  01E2  319E  26DA  3181   	fcall	___flneg
  9698  01E5  0873               	movf	?___flneg+3,w
  9699  01E6  0021               	movlb	1	; select bank1
  9700  01E7  00D0               	movwf	(efgtoa@g+3)^(0+128)
  9701  01E8  0872               	movf	?___flneg+2,w
  9702  01E9  00CF               	movwf	(efgtoa@g+2)^(0+128)
  9703  01EA  0871               	movf	?___flneg+1,w
  9704  01EB  00CE               	movwf	(efgtoa@g+1)^(0+128)
  9705  01EC  0870               	movf	?___flneg,w
  9706  01ED  00CD               	movwf	efgtoa@g^(0+128)
  9707  01EE                     l4086:	
  9708                           
  9709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9710  01EE  0021               	movlb	1	; select bank1
  9711  01EF  01D3               	clrf	efgtoa@n^(0+128)
  9712  01F0  01D4               	clrf	(efgtoa@n+1)^(0+128)
  9713                           
  9714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9715  01F1  0022               	movlb	2	; select bank2
  9716  01F2  0845               	movf	(_width+1)^(0+256),w
  9717  01F3  0021               	movlb	1	; select bank1
  9718  01F4  00C1               	movwf	(efgtoa@w+1)^(0+128)
  9719  01F5  0022               	movlb	2	; select bank2
  9720  01F6  0844               	movf	_width^(0+256),w
  9721  01F7  0021               	movlb	1	; select bank1
  9722  01F8  00C0               	movwf	efgtoa@w^(0+128)
  9723                           
  9724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9725  01F9  083A               	movf	efgtoa@sign^(0+128),w
  9726  01FA  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  9727  01FB  1D03               	btfss	3,2
  9728  01FC  2A00               	goto	l4094
  9729  01FD  0022               	movlb	2	; select bank2
  9730  01FE  1D48               	btfss	_flags^(0+256),2
  9731  01FF  2A1A               	goto	l4106
  9732  0200                     l4094:	
  9733                           
  9734                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9735  0200  0021               	movlb	1	; select bank1
  9736  0201  083A               	movf	efgtoa@sign^(0+128),w
  9737  0202  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  9738  0203  1D03               	btfss	3,2
  9739  0204  2A07               	goto	l4098
  9740  0205  302B               	movlw	43
  9741  0206  2A08               	goto	L2
  9742  0207                     l4098:	
  9743  0207  302D               	movlw	45
  9744  0208                     L2:	
  9745  0208  00A4               	movwf	_efgtoa$1411^(0+128)
  9746  0209  3000               	movlw	0
  9747  020A  00A5               	movwf	(_efgtoa$1411^(0+128)+1)
  9748  020B  0824               	movf	_efgtoa$1411^(0+128),w
  9749  020C  0020               	movlb	0	; select bank0
  9750  020D  00D9               	movwf	??_efgtoa
  9751  020E  0859               	movf	??_efgtoa,w
  9752  020F  0023               	movlb	3	; select bank3
  9753  0210  00A0               	movwf	_dbuf^(0+384)
  9754                           
  9755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9756  0211  3001               	movlw	1
  9757  0212  0021               	movlb	1	; select bank1
  9758  0213  07D3               	addwf	efgtoa@n^(0+128),f
  9759  0214  3000               	movlw	0
  9760  0215  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  9761                           
  9762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9763  0216  30FF               	movlw	255
  9764  0217  07C0               	addwf	efgtoa@w^(0+128),f
  9765  0218  30FF               	movlw	255
  9766  0219  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  9767  021A                     l4106:	
  9768                           
  9769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9770  021A  0021               	movlb	1	; select bank1
  9771  021B  0850               	movf	(efgtoa@g+3)^(0+128),w
  9772  021C  00F3               	movwf	___fpclassifyf@x+3
  9773  021D  084F               	movf	(efgtoa@g+2)^(0+128),w
  9774  021E  00F2               	movwf	___fpclassifyf@x+2
  9775  021F  084E               	movf	(efgtoa@g+1)^(0+128),w
  9776  0220  00F1               	movwf	___fpclassifyf@x+1
  9777  0221  084D               	movf	efgtoa@g^(0+128),w
  9778  0222  00F0               	movwf	___fpclassifyf@x
  9779  0223  3193  232C  3181   	fcall	___fpclassifyf
  9780  0226  0370               	decf	?___fpclassifyf,w
  9781  0227  0471               	iorwf	?___fpclassifyf+1,w
  9782  0228  1D03               	btfss	3,2
  9783  0229  2A72               	goto	l4124
  9784  022A  0020               	movlb	0	; select bank0
  9785  022B  0858               	movf	efgtoa@c,w
  9786  022C  3EBF               	addlw	191
  9787  022D  00D9               	movwf	??_efgtoa
  9788  022E  30FF               	movlw	255
  9789  022F  1803               	skipnc
  9790  0230  3000               	movlw	0
  9791  0231  00DA               	movwf	??_efgtoa+1
  9792  0232  3000               	movlw	0
  9793  0233  025A               	subwf	??_efgtoa+1,w
  9794  0234  301A               	movlw	26
  9795  0235  1903               	skipnz
  9796  0236  0259               	subwf	??_efgtoa,w
  9797  0237  1803               	btfsc	3,0
  9798  0238  2A3B               	goto	u5280
  9799  0239  3001               	movlw	1
  9800  023A  2A3C               	goto	u5290
  9801  023B                     u5280:	
  9802  023B  3000               	movlw	0
  9803  023C                     u5290:	
  9804  023C  00DB               	movwf	??_efgtoa+2
  9805  023D  01DC               	clrf	??_efgtoa+3
  9806  023E  085B               	movf	??_efgtoa+2,w
  9807  023F  0021               	movlb	1	; select bank1
  9808  0240  00A6               	movwf	_efgtoa$1412^(0+128)
  9809  0241  0020               	movlb	0	; select bank0
  9810  0242  085C               	movf	??_efgtoa+3,w
  9811  0243  0021               	movlb	1	; select bank1
  9812  0244  00A7               	movwf	(_efgtoa$1412+1)^(0+128)
  9813  0245  0826               	movf	_efgtoa$1412^(0+128),w
  9814  0246  0427               	iorwf	(_efgtoa$1412+1)^(0+128),w
  9815  0247  1903               	btfsc	3,2
  9816  0248  2A4D               	goto	l4116
  9817                           
  9818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  9819  0249  3069               	movlw	low (STR_7| (0+32768))
  9820  024A  00F0               	movwf	strcpy@src
  9821  024B  3098               	movlw	high (STR_7| (0+32768))
  9822  024C  2A50               	goto	L3
  9823  024D                     l4116:	
  9824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  9825                           
  9826                           
  9827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  9828  024D  3071               	movlw	low (STR_8| (0+32768))
  9829  024E  00F0               	movwf	strcpy@src
  9830  024F  3098               	movlw	high (STR_8| (0+32768))
  9831  0250                     L3:	
  9832  0250  00F1               	movwf	strcpy@src+1
  9833  0251  0853               	movf	efgtoa@n^(0+128),w
  9834  0252  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9835  0253  3190  203A  3181   	fcall	_strcpy
  9836                           
  9837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9838  0256  30FD               	movlw	253
  9839  0257  0021               	movlb	1	; select bank1
  9840  0258  07C0               	addwf	efgtoa@w^(0+128),f
  9841  0259  30FF               	movlw	255
  9842  025A  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  9843                           
  9844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  9845  025B  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9846  025C  0020               	movlb	0	; select bank0
  9847  025D  00D9               	movwf	??_efgtoa
  9848  025E  0859               	movf	??_efgtoa,w
  9849  025F  00A4               	movwf	pad@buf
  9850  0260  0021               	movlb	1	; select bank1
  9851  0261  0841               	movf	(efgtoa@w+1)^(0+128),w
  9852  0262  0020               	movlb	0	; select bank0
  9853  0263  00A6               	movwf	pad@p+1
  9854  0264  0021               	movlb	1	; select bank1
  9855  0265  0840               	movf	efgtoa@w^(0+128),w
  9856  0266  0020               	movlb	0	; select bank0
  9857  0267  00A5               	movwf	pad@p
  9858  0268  0021               	movlb	1	; select bank1
  9859  0269  083E               	movf	efgtoa@fp^(0+128),w
  9860  026A  3192  220A         	fcall	_pad
  9861  026C  0020               	movlb	0	; select bank0
  9862  026D  0825               	movf	?_pad+1,w
  9863  026E  00D5               	movwf	?_efgtoa+1
  9864  026F  0824               	movf	?_pad,w
  9865  0270  00D4               	movwf	?_efgtoa
  9866  0271  0008               	return
  9867  0272                     l4124:	
  9868                           
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9870  0272  0021               	movlb	1	; select bank1
  9871  0273  0850               	movf	(efgtoa@g+3)^(0+128),w
  9872  0274  00F3               	movwf	___fpclassifyf@x+3
  9873  0275  084F               	movf	(efgtoa@g+2)^(0+128),w
  9874  0276  00F2               	movwf	___fpclassifyf@x+2
  9875  0277  084E               	movf	(efgtoa@g+1)^(0+128),w
  9876  0278  00F1               	movwf	___fpclassifyf@x+1
  9877  0279  084D               	movf	efgtoa@g^(0+128),w
  9878  027A  00F0               	movwf	___fpclassifyf@x
  9879  027B  3193  232C  3181   	fcall	___fpclassifyf
  9880  027E  0870               	movf	?___fpclassifyf,w
  9881  027F  0471               	iorwf	?___fpclassifyf+1,w
  9882  0280  1D03               	btfss	3,2
  9883  0281  2ACA               	goto	l4142
  9884  0282  0020               	movlb	0	; select bank0
  9885  0283  0858               	movf	efgtoa@c,w
  9886  0284  3EBF               	addlw	191
  9887  0285  00D9               	movwf	??_efgtoa
  9888  0286  30FF               	movlw	255
  9889  0287  1803               	skipnc
  9890  0288  3000               	movlw	0
  9891  0289  00DA               	movwf	??_efgtoa+1
  9892  028A  3000               	movlw	0
  9893  028B  025A               	subwf	??_efgtoa+1,w
  9894  028C  301A               	movlw	26
  9895  028D  1903               	skipnz
  9896  028E  0259               	subwf	??_efgtoa,w
  9897  028F  1803               	btfsc	3,0
  9898  0290  2A93               	goto	u5320
  9899  0291  3001               	movlw	1
  9900  0292  2A94               	goto	u5330
  9901  0293                     u5320:	
  9902  0293  3000               	movlw	0
  9903  0294                     u5330:	
  9904  0294  00DB               	movwf	??_efgtoa+2
  9905  0295  01DC               	clrf	??_efgtoa+3
  9906  0296  085B               	movf	??_efgtoa+2,w
  9907  0297  0021               	movlb	1	; select bank1
  9908  0298  00A8               	movwf	_efgtoa$1416^(0+128)
  9909  0299  0020               	movlb	0	; select bank0
  9910  029A  085C               	movf	??_efgtoa+3,w
  9911  029B  0021               	movlb	1	; select bank1
  9912  029C  00A9               	movwf	(_efgtoa$1416+1)^(0+128)
  9913  029D  0828               	movf	_efgtoa$1416^(0+128),w
  9914  029E  0429               	iorwf	(_efgtoa$1416+1)^(0+128),w
  9915  029F  1903               	btfsc	3,2
  9916  02A0  2AA5               	goto	l4134
  9917                           
  9918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  9919  02A1  306D               	movlw	low (STR_11| (0+32768))
  9920  02A2  00F0               	movwf	strcpy@src
  9921  02A3  3098               	movlw	high (STR_11| (0+32768))
  9922  02A4  2AA8               	goto	L4
  9923  02A5                     l4134:	
  9924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  9925                           
  9926                           
  9927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  9928  02A5  3075               	movlw	low (STR_12| (0+32768))
  9929  02A6  00F0               	movwf	strcpy@src
  9930  02A7  3098               	movlw	high (STR_12| (0+32768))
  9931  02A8                     L4:	
  9932  02A8  00F1               	movwf	strcpy@src+1
  9933  02A9  0853               	movf	efgtoa@n^(0+128),w
  9934  02AA  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9935  02AB  3190  203A  3181   	fcall	_strcpy
  9936                           
  9937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  9938  02AE  30FD               	movlw	253
  9939  02AF  0021               	movlb	1	; select bank1
  9940  02B0  07C0               	addwf	efgtoa@w^(0+128),f
  9941  02B1  30FF               	movlw	255
  9942  02B2  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  9943                           
  9944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  9945  02B3  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  9946  02B4  0020               	movlb	0	; select bank0
  9947  02B5  00D9               	movwf	??_efgtoa
  9948  02B6  0859               	movf	??_efgtoa,w
  9949  02B7  00A4               	movwf	pad@buf
  9950  02B8  0021               	movlb	1	; select bank1
  9951  02B9  0841               	movf	(efgtoa@w+1)^(0+128),w
  9952  02BA  0020               	movlb	0	; select bank0
  9953  02BB  00A6               	movwf	pad@p+1
  9954  02BC  0021               	movlb	1	; select bank1
  9955  02BD  0840               	movf	efgtoa@w^(0+128),w
  9956  02BE  0020               	movlb	0	; select bank0
  9957  02BF  00A5               	movwf	pad@p
  9958  02C0  0021               	movlb	1	; select bank1
  9959  02C1  083E               	movf	efgtoa@fp^(0+128),w
  9960  02C2  3192  220A         	fcall	_pad
  9961  02C4  0020               	movlb	0	; select bank0
  9962  02C5  0825               	movf	?_pad+1,w
  9963  02C6  00D5               	movwf	?_efgtoa+1
  9964  02C7  0824               	movf	?_pad,w
  9965  02C8  00D4               	movwf	?_efgtoa
  9966  02C9  0008               	return
  9967  02CA                     l4142:	
  9968                           
  9969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  9970  02CA  303F               	movlw	63
  9971  02CB  0021               	movlb	1	; select bank1
  9972  02CC  00D8               	movwf	(efgtoa@u+3)^(0+128)
  9973  02CD  3080               	movlw	128
  9974  02CE  00D7               	movwf	(efgtoa@u+2)^(0+128)
  9975  02CF  3000               	movlw	0
  9976  02D0  00D6               	movwf	(efgtoa@u+1)^(0+128)
  9977  02D1  3000               	movlw	0
  9978  02D2  00D5               	movwf	efgtoa@u^(0+128)
  9979                           
  9980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  9981  02D3  01D1               	clrf	efgtoa@e^(0+128)
  9982  02D4  01D2               	clrf	(efgtoa@e+1)^(0+128)
  9983                           
  9984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  9985  02D5  0850               	movf	(efgtoa@g+3)^(0+128),w
  9986  02D6  00F3               	movwf	___fleq@ff1+3
  9987  02D7  084F               	movf	(efgtoa@g+2)^(0+128),w
  9988  02D8  00F2               	movwf	___fleq@ff1+2
  9989  02D9  084E               	movf	(efgtoa@g+1)^(0+128),w
  9990  02DA  00F1               	movwf	___fleq@ff1+1
  9991  02DB  084D               	movf	efgtoa@g^(0+128),w
  9992  02DC  00F0               	movwf	___fleq@ff1
  9993  02DD  3000               	movlw	0
  9994  02DE  00F7               	movwf	___fleq@ff2+3
  9995  02DF  3000               	movlw	0
  9996  02E0  00F6               	movwf	___fleq@ff2+2
  9997  02E1  3000               	movlw	0
  9998  02E2  00F5               	movwf	___fleq@ff2+1
  9999  02E3  3000               	movlw	0
 10000  02E4  00F4               	movwf	___fleq@ff2
 10001  02E5  3191  2174  3181   	fcall	___fleq
 10002  02E8  1C03               	btfss	3,0
 10003  02E9  2B1B               	goto	l4154
 10004  02EA  2B9B               	goto	l4162
 10005  02EB                     l4150:	
 10006                           
 10007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 10008  02EB  3041               	movlw	65
 10009  02EC  0020               	movlb	0	; select bank0
 10010  02ED  00B1               	movwf	___flmul@b+3
 10011  02EE  3020               	movlw	32
 10012  02EF  00B0               	movwf	___flmul@b+2
 10013  02F0  3000               	movlw	0
 10014  02F1  00AF               	movwf	___flmul@b+1
 10015  02F2  3000               	movlw	0
 10016  02F3  00AE               	movwf	___flmul@b
 10017  02F4  0021               	movlb	1	; select bank1
 10018  02F5  0858               	movf	(efgtoa@u+3)^(0+128),w
 10019  02F6  0020               	movlb	0	; select bank0
 10020  02F7  00B5               	movwf	___flmul@a+3
 10021  02F8  0021               	movlb	1	; select bank1
 10022  02F9  0857               	movf	(efgtoa@u+2)^(0+128),w
 10023  02FA  0020               	movlb	0	; select bank0
 10024  02FB  00B4               	movwf	___flmul@a+2
 10025  02FC  0021               	movlb	1	; select bank1
 10026  02FD  0856               	movf	(efgtoa@u+1)^(0+128),w
 10027  02FE  0020               	movlb	0	; select bank0
 10028  02FF  00B3               	movwf	___flmul@a+1
 10029  0300  0021               	movlb	1	; select bank1
 10030  0301  0855               	movf	efgtoa@u^(0+128),w
 10031  0302  0020               	movlb	0	; select bank0
 10032  0303  00B2               	movwf	___flmul@a
 10033  0304  318B  239D  3181   	fcall	___flmul
 10034  0307  0020               	movlb	0	; select bank0
 10035  0308  0831               	movf	?___flmul+3,w
 10036  0309  0021               	movlb	1	; select bank1
 10037  030A  00D8               	movwf	(efgtoa@u+3)^(0+128)
 10038  030B  0020               	movlb	0	; select bank0
 10039  030C  0830               	movf	?___flmul+2,w
 10040  030D  0021               	movlb	1	; select bank1
 10041  030E  00D7               	movwf	(efgtoa@u+2)^(0+128)
 10042  030F  0020               	movlb	0	; select bank0
 10043  0310  082F               	movf	?___flmul+1,w
 10044  0311  0021               	movlb	1	; select bank1
 10045  0312  00D6               	movwf	(efgtoa@u+1)^(0+128)
 10046  0313  0020               	movlb	0	; select bank0
 10047  0314  082E               	movf	?___flmul,w
 10048  0315  0021               	movlb	1	; select bank1
 10049  0316  00D5               	movwf	efgtoa@u^(0+128)
 10050                           
 10051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 10052  0317  3001               	movlw	1
 10053  0318  07D1               	addwf	efgtoa@e^(0+128),f
 10054  0319  3000               	movlw	0
 10055  031A  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
 10056  031B                     l4154:	
 10057                           
 10058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 10059  031B  0021               	movlb	1	; select bank1
 10060  031C  0850               	movf	(efgtoa@g+3)^(0+128),w
 10061  031D  0020               	movlb	0	; select bank0
 10062  031E  00CB               	movwf	___flge@ff1+3
 10063  031F  0021               	movlb	1	; select bank1
 10064  0320  084F               	movf	(efgtoa@g+2)^(0+128),w
 10065  0321  0020               	movlb	0	; select bank0
 10066  0322  00CA               	movwf	___flge@ff1+2
 10067  0323  0021               	movlb	1	; select bank1
 10068  0324  084E               	movf	(efgtoa@g+1)^(0+128),w
 10069  0325  0020               	movlb	0	; select bank0
 10070  0326  00C9               	movwf	___flge@ff1+1
 10071  0327  0021               	movlb	1	; select bank1
 10072  0328  084D               	movf	efgtoa@g^(0+128),w
 10073  0329  0020               	movlb	0	; select bank0
 10074  032A  00C8               	movwf	___flge@ff1
 10075  032B  3041               	movlw	65
 10076  032C  00B1               	movwf	___flmul@b+3
 10077  032D  3020               	movlw	32
 10078  032E  00B0               	movwf	___flmul@b+2
 10079  032F  3000               	movlw	0
 10080  0330  00AF               	movwf	___flmul@b+1
 10081  0331  3000               	movlw	0
 10082  0332  00AE               	movwf	___flmul@b
 10083  0333  0021               	movlb	1	; select bank1
 10084  0334  0858               	movf	(efgtoa@u+3)^(0+128),w
 10085  0335  0020               	movlb	0	; select bank0
 10086  0336  00B5               	movwf	___flmul@a+3
 10087  0337  0021               	movlb	1	; select bank1
 10088  0338  0857               	movf	(efgtoa@u+2)^(0+128),w
 10089  0339  0020               	movlb	0	; select bank0
 10090  033A  00B4               	movwf	___flmul@a+2
 10091  033B  0021               	movlb	1	; select bank1
 10092  033C  0856               	movf	(efgtoa@u+1)^(0+128),w
 10093  033D  0020               	movlb	0	; select bank0
 10094  033E  00B3               	movwf	___flmul@a+1
 10095  033F  0021               	movlb	1	; select bank1
 10096  0340  0855               	movf	efgtoa@u^(0+128),w
 10097  0341  0020               	movlb	0	; select bank0
 10098  0342  00B2               	movwf	___flmul@a
 10099  0343  318B  239D  3181   	fcall	___flmul
 10100  0346  0020               	movlb	0	; select bank0
 10101  0347  0831               	movf	?___flmul+3,w
 10102  0348  00CF               	movwf	___flge@ff2+3
 10103  0349  0830               	movf	?___flmul+2,w
 10104  034A  00CE               	movwf	___flge@ff2+2
 10105  034B  082F               	movf	?___flmul+1,w
 10106  034C  00CD               	movwf	___flge@ff2+1
 10107  034D  082E               	movf	?___flmul,w
 10108  034E  00CC               	movwf	___flge@ff2
 10109  034F  3193  23A4  3181   	fcall	___flge
 10110  0352  1C03               	btfss	3,0
 10111  0353  2B76               	goto	l4160
 10112  0354  2AEB               	goto	l4150
 10113  0355                     l4156:	
 10114                           
 10115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 10116  0355  3041               	movlw	65
 10117  0356  00F3               	movwf	___fldiv@a+3
 10118  0357  3020               	movlw	32
 10119  0358  00F2               	movwf	___fldiv@a+2
 10120  0359  3000               	movlw	0
 10121  035A  00F1               	movwf	___fldiv@a+1
 10122  035B  3000               	movlw	0
 10123  035C  00F0               	movwf	___fldiv@a
 10124  035D  0021               	movlb	1	; select bank1
 10125  035E  0858               	movf	(efgtoa@u+3)^(0+128),w
 10126  035F  00F7               	movwf	___fldiv@b+3
 10127  0360  0857               	movf	(efgtoa@u+2)^(0+128),w
 10128  0361  00F6               	movwf	___fldiv@b+2
 10129  0362  0856               	movf	(efgtoa@u+1)^(0+128),w
 10130  0363  00F5               	movwf	___fldiv@b+1
 10131  0364  0855               	movf	efgtoa@u^(0+128),w
 10132  0365  00F4               	movwf	___fldiv@b
 10133  0366  3180  202B  3181   	fcall	___fldiv
 10134  0369  0873               	movf	?___fldiv+3,w
 10135  036A  0021               	movlb	1	; select bank1
 10136  036B  00D8               	movwf	(efgtoa@u+3)^(0+128)
 10137  036C  0872               	movf	?___fldiv+2,w
 10138  036D  00D7               	movwf	(efgtoa@u+2)^(0+128)
 10139  036E  0871               	movf	?___fldiv+1,w
 10140  036F  00D6               	movwf	(efgtoa@u+1)^(0+128)
 10141  0370  0870               	movf	?___fldiv,w
 10142  0371  00D5               	movwf	efgtoa@u^(0+128)
 10143                           
 10144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 10145  0372  30FF               	movlw	255
 10146  0373  07D1               	addwf	efgtoa@e^(0+128),f
 10147  0374  30FF               	movlw	255
 10148  0375  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
 10149  0376                     l4160:	
 10150                           
 10151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 10152  0376  0021               	movlb	1	; select bank1
 10153  0377  0850               	movf	(efgtoa@g+3)^(0+128),w
 10154  0378  0020               	movlb	0	; select bank0
 10155  0379  00CB               	movwf	___flge@ff1+3
 10156  037A  0021               	movlb	1	; select bank1
 10157  037B  084F               	movf	(efgtoa@g+2)^(0+128),w
 10158  037C  0020               	movlb	0	; select bank0
 10159  037D  00CA               	movwf	___flge@ff1+2
 10160  037E  0021               	movlb	1	; select bank1
 10161  037F  084E               	movf	(efgtoa@g+1)^(0+128),w
 10162  0380  0020               	movlb	0	; select bank0
 10163  0381  00C9               	movwf	___flge@ff1+1
 10164  0382  0021               	movlb	1	; select bank1
 10165  0383  084D               	movf	efgtoa@g^(0+128),w
 10166  0384  0020               	movlb	0	; select bank0
 10167  0385  00C8               	movwf	___flge@ff1
 10168  0386  0021               	movlb	1	; select bank1
 10169  0387  0858               	movf	(efgtoa@u+3)^(0+128),w
 10170  0388  0020               	movlb	0	; select bank0
 10171  0389  00CF               	movwf	___flge@ff2+3
 10172  038A  0021               	movlb	1	; select bank1
 10173  038B  0857               	movf	(efgtoa@u+2)^(0+128),w
 10174  038C  0020               	movlb	0	; select bank0
 10175  038D  00CE               	movwf	___flge@ff2+2
 10176  038E  0021               	movlb	1	; select bank1
 10177  038F  0856               	movf	(efgtoa@u+1)^(0+128),w
 10178  0390  0020               	movlb	0	; select bank0
 10179  0391  00CD               	movwf	___flge@ff2+1
 10180  0392  0021               	movlb	1	; select bank1
 10181  0393  0855               	movf	efgtoa@u^(0+128),w
 10182  0394  0020               	movlb	0	; select bank0
 10183  0395  00CC               	movwf	___flge@ff2
 10184  0396  3193  23A4  3181   	fcall	___flge
 10185  0399  1C03               	btfss	3,0
 10186  039A  2B55               	goto	l4156
 10187  039B                     l4162:	
 10188                           
 10189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 10190  039B  0020               	movlb	0	; select bank0
 10191  039C  0858               	movf	efgtoa@c,w
 10192  039D  00D9               	movwf	??_efgtoa
 10193  039E  01DA               	clrf	??_efgtoa+1
 10194  039F  0859               	movf	??_efgtoa,w
 10195  03A0  00F6               	movwf	tolower@c
 10196  03A1  085A               	movf	??_efgtoa+1,w
 10197  03A2  00F7               	movwf	tolower@c+1
 10198  03A3  3190  2059  3181   	fcall	_tolower
 10199  03A6  0876               	movf	?_tolower,w
 10200  03A7  0020               	movlb	0	; select bank0
 10201  03A8  00DB               	movwf	??_efgtoa+2
 10202  03A9  085B               	movf	??_efgtoa+2,w
 10203  03AA  0021               	movlb	1	; select bank1
 10204  03AB  00C2               	movwf	efgtoa@mode^(0+128)
 10205                           
 10206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 10207  03AC  0842               	movf	efgtoa@mode^(0+128),w
 10208  03AD  0020               	movlb	0	; select bank0
 10209  03AE  00D9               	movwf	??_efgtoa
 10210  03AF  0859               	movf	??_efgtoa,w
 10211  03B0  0021               	movlb	1	; select bank1
 10212  03B1  00BF               	movwf	efgtoa@nmode^(0+128)
 10213                           
 10214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 10215  03B2  3067               	movlw	103
 10216  03B3  0642               	xorwf	efgtoa@mode^(0+128),w
 10217  03B4  1D03               	btfss	3,2
 10218  03B5  2BD2               	goto	l796
 10219                           
 10220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 10221  03B6  0022               	movlb	2	; select bank2
 10222  03B7  0846               	movf	_prec^(0+256),w
 10223  03B8  0447               	iorwf	(_prec+1)^(0+256),w
 10224  03B9  1D03               	btfss	3,2
 10225  03BA  2BBF               	goto	l797
 10226                           
 10227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 10228  03BB  3001               	movlw	1
 10229  03BC  00C6               	movwf	_prec^(0+256)
 10230  03BD  3000               	movlw	0
 10231  03BE  00C7               	movwf	(_prec^(0+256)+1)
 10232  03BF                     l797:	
 10233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
 10234                           
 10235                           
 10236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 10237  03BF  0847               	movf	(_prec+1)^(0+256),w
 10238  03C0  3A80               	xorlw	128
 10239  03C1  0020               	movlb	0	; select bank0
 10240  03C2  00D9               	movwf	??_efgtoa
 10241  03C3  3080               	movlw	128
 10242  03C4  0259               	subwf	??_efgtoa,w
 10243  03C5  1D03               	skipz
 10244  03C6  2BCA               	goto	u5405
 10245  03C7  3001               	movlw	1
 10246  03C8  0022               	movlb	2	; select bank2
 10247  03C9  0246               	subwf	_prec^(0+256),w
 10248  03CA                     u5405:	
 10249  03CA  1803               	skipnc
 10250  03CB  2BD5               	goto	l4174
 10251  03CC                     l4172:	
 10252  03CC  3006               	movlw	6
 10253  03CD  0021               	movlb	1	; select bank1
 10254  03CE  00BC               	movwf	efgtoa@p^(0+128)
 10255  03CF  3000               	movlw	0
 10256  03D0  00BD               	movwf	(efgtoa@p^(0+128)+1)
 10257  03D1  2BDD               	goto	l4180
 10258  03D2                     l796:	
 10259                           
 10260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 10261  03D2  0022               	movlb	2	; select bank2
 10262  03D3  1BC7               	btfsc	(_prec+1)^(0+256),7
 10263  03D4  2BCC               	goto	l4172
 10264  03D5                     l4174:	
 10265  03D5  0022               	movlb	2	; select bank2
 10266  03D6  0847               	movf	(_prec+1)^(0+256),w
 10267  03D7  0021               	movlb	1	; select bank1
 10268  03D8  00BD               	movwf	(efgtoa@p+1)^(0+128)
 10269  03D9  0022               	movlb	2	; select bank2
 10270  03DA  0846               	movf	_prec^(0+256),w
 10271  03DB  0021               	movlb	1	; select bank1
 10272  03DC  00BC               	movwf	efgtoa@p^(0+128)
 10273  03DD                     l4180:	
 10274                           
 10275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10276  03DD  3067               	movlw	103
 10277  03DE  0642               	xorwf	efgtoa@mode^(0+128),w
 10278  03DF  1D03               	btfss	3,2
 10279  03E0  2C10               	goto	l807
 10280                           
 10281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10282  03E1  0852               	movf	(efgtoa@e+1)^(0+128),w
 10283  03E2  3A80               	xorlw	128
 10284  03E3  0020               	movlb	0	; select bank0
 10285  03E4  00D9               	movwf	??_efgtoa
 10286  03E5  307F               	movlw	127
 10287  03E6  0259               	subwf	??_efgtoa,w
 10288  03E7  1D03               	skipz
 10289  03E8  2BEC               	goto	u5435
 10290  03E9  30FC               	movlw	252
 10291  03EA  0021               	movlb	1	; select bank1
 10292  03EB  0251               	subwf	efgtoa@e^(0+128),w
 10293  03EC                     u5435:	
 10294  03EC  1C03               	skipc
 10295  03ED  2C0A               	goto	l4188
 10296  03EE  0021               	movlb	1	; select bank1
 10297  03EF  083C               	movf	efgtoa@p^(0+128),w
 10298  03F0  3EFF               	addlw	255
 10299  03F1  0020               	movlb	0	; select bank0
 10300  03F2  00D9               	movwf	??_efgtoa
 10301  03F3  30FF               	movlw	255
 10302  03F4  0021               	movlb	1	; select bank1
 10303  03F5  3D3D               	addwfc	(efgtoa@p+1)^(0+128),w
 10304  03F6  0020               	movlb	0	; select bank0
 10305  03F7  00DA               	movwf	??_efgtoa+1
 10306  03F8  085A               	movf	??_efgtoa+1,w
 10307  03F9  3A80               	xorlw	128
 10308  03FA  00DB               	movwf	??_efgtoa+2
 10309  03FB  0021               	movlb	1	; select bank1
 10310  03FC  0852               	movf	(efgtoa@e+1)^(0+128),w
 10311  03FD  3A80               	xorlw	128
 10312  03FE  0020               	movlb	0	; select bank0
 10313  03FF  025B               	subwf	??_efgtoa+2,w
 10314  0400  1D03               	skipz
 10315  0401  2C06               	goto	u5445
 10316  0402  0021               	movlb	1	; select bank1
 10317  0403  0851               	movf	efgtoa@e^(0+128),w
 10318  0404  0020               	movlb	0	; select bank0
 10319  0405  0259               	subwf	??_efgtoa,w
 10320  0406                     u5445:	
 10321  0406  1C03               	skipc
 10322  0407  2C0A               	goto	l4188
 10323                           
 10324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10325  0408  3066               	movlw	102
 10326  0409  2C0B               	goto	L5
 10327  040A                     l4188:	
 10328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10329                           
 10330                           
 10331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10332  040A  3065               	movlw	101
 10333  040B                     L5:	
 10334  040B  0020               	movlb	0	; select bank0
 10335  040C  00D9               	movwf	??_efgtoa
 10336  040D  0859               	movf	??_efgtoa,w
 10337  040E  0021               	movlb	1	; select bank1
 10338  040F  00BF               	movwf	efgtoa@nmode^(0+128)
 10339  0410                     l807:	
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
 10341                           
 10342                           
 10343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10344  0410  083D               	movf	(efgtoa@p+1)^(0+128),w
 10345  0411  00B5               	movwf	(efgtoa@m+1)^(0+128)
 10346  0412  083C               	movf	efgtoa@p^(0+128),w
 10347  0413  00B4               	movwf	efgtoa@m^(0+128)
 10348                           
 10349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10350  0414  3067               	movlw	103
 10351  0415  0642               	xorwf	efgtoa@mode^(0+128),w
 10352  0416  1D03               	btfss	3,2
 10353  0417  2C1D               	goto	l4196
 10354  0418  3066               	movlw	102
 10355  0419  063F               	xorwf	efgtoa@nmode^(0+128),w
 10356  041A  1903               	btfsc	3,2
 10357  041B  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
 10358  041C  2C21               	goto	l4198
 10359  041D                     l4196:	
 10360                           
 10361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10362  041D  3001               	movlw	1
 10363  041E  07B4               	addwf	efgtoa@m^(0+128),f
 10364  041F  3000               	movlw	0
 10365  0420  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
 10366  0421                     l4198:	
 10367                           
 10368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10369  0421  3066               	movlw	102
 10370  0422  063F               	xorwf	efgtoa@nmode^(0+128),w
 10371  0423  1D03               	btfss	3,2
 10372  0424  2C39               	goto	l4210
 10373                           
 10374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10375  0425  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
 10376  0426  2C31               	goto	l4206
 10377                           
 10378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10379  0427  303F               	movlw	63
 10380  0428  00D8               	movwf	(efgtoa@u+3)^(0+128)
 10381  0429  3080               	movlw	128
 10382  042A  00D7               	movwf	(efgtoa@u+2)^(0+128)
 10383  042B  3000               	movlw	0
 10384  042C  00D6               	movwf	(efgtoa@u+1)^(0+128)
 10385  042D  3000               	movlw	0
 10386  042E  00D5               	movwf	efgtoa@u^(0+128)
 10387                           
 10388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10389  042F  01D1               	clrf	efgtoa@e^(0+128)
 10390  0430  01D2               	clrf	(efgtoa@e+1)^(0+128)
 10391  0431                     l4206:	
 10392                           
 10393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10394  0431  3067               	movlw	103
 10395  0432  0642               	xorwf	efgtoa@mode^(0+128),w
 10396  0433  1903               	btfsc	3,2
 10397  0434  2C39               	goto	l4210
 10398                           
 10399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10400  0435  0851               	movf	efgtoa@e^(0+128),w
 10401  0436  07B4               	addwf	efgtoa@m^(0+128),f
 10402  0437  0852               	movf	(efgtoa@e+1)^(0+128),w
 10403  0438  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
 10404  0439                     l4210:	
 10405                           
 10406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10407  0439  01CB               	clrf	efgtoa@i^(0+128)
 10408  043A  01CC               	clrf	(efgtoa@i+1)^(0+128)
 10409                           
 10410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10411  043B  0850               	movf	(efgtoa@g+3)^(0+128),w
 10412  043C  00C6               	movwf	(efgtoa@h+3)^(0+128)
 10413  043D  084F               	movf	(efgtoa@g+2)^(0+128),w
 10414  043E  00C5               	movwf	(efgtoa@h+2)^(0+128)
 10415  043F  084E               	movf	(efgtoa@g+1)^(0+128),w
 10416  0440  00C4               	movwf	(efgtoa@h+1)^(0+128)
 10417  0441  084D               	movf	efgtoa@g^(0+128),w
 10418  0442  00C3               	movwf	efgtoa@h^(0+128)
 10419                           
 10420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10421  0443  0858               	movf	(efgtoa@u+3)^(0+128),w
 10422  0444  00A3               	movwf	(efgtoa@ou+3)^(0+128)
 10423  0445  0857               	movf	(efgtoa@u+2)^(0+128),w
 10424  0446  00A2               	movwf	(efgtoa@ou+2)^(0+128)
 10425  0447  0856               	movf	(efgtoa@u+1)^(0+128),w
 10426  0448  00A1               	movwf	(efgtoa@ou+1)^(0+128)
 10427  0449  0855               	movf	efgtoa@u^(0+128),w
 10428  044A  00A0               	movwf	efgtoa@ou^(0+128)
 10429  044B                     l4220:	
 10430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10431                           
 10432                           
 10433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10434  044B  084C               	movf	(efgtoa@i+1)^(0+128),w
 10435  044C  3A80               	xorlw	128
 10436  044D  0020               	movlb	0	; select bank0
 10437  044E  00D9               	movwf	??_efgtoa
 10438  044F  0021               	movlb	1	; select bank1
 10439  0450  0835               	movf	(efgtoa@m+1)^(0+128),w
 10440  0451  3A80               	xorlw	128
 10441  0452  0020               	movlb	0	; select bank0
 10442  0453  0259               	subwf	??_efgtoa,w
 10443  0454  1D03               	skipz
 10444  0455  2C59               	goto	u5515
 10445  0456  0021               	movlb	1	; select bank1
 10446  0457  0834               	movf	efgtoa@m^(0+128),w
 10447  0458  024B               	subwf	efgtoa@i^(0+128),w
 10448  0459                     u5515:	
 10449  0459  1803               	btfsc	3,0
 10450  045A  2D0A               	goto	l4222
 10451                           
 10452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10453  045B  0021               	movlb	1	; select bank1
 10454  045C  0858               	movf	(efgtoa@u+3)^(0+128),w
 10455  045D  00F3               	movwf	___fldiv@a+3
 10456  045E  0857               	movf	(efgtoa@u+2)^(0+128),w
 10457  045F  00F2               	movwf	___fldiv@a+2
 10458  0460  0856               	movf	(efgtoa@u+1)^(0+128),w
 10459  0461  00F1               	movwf	___fldiv@a+1
 10460  0462  0855               	movf	efgtoa@u^(0+128),w
 10461  0463  00F0               	movwf	___fldiv@a
 10462  0464  0846               	movf	(efgtoa@h+3)^(0+128),w
 10463  0465  00F7               	movwf	___fldiv@b+3
 10464  0466  0845               	movf	(efgtoa@h+2)^(0+128),w
 10465  0467  00F6               	movwf	___fldiv@b+2
 10466  0468  0844               	movf	(efgtoa@h+1)^(0+128),w
 10467  0469  00F5               	movwf	___fldiv@b+1
 10468  046A  0843               	movf	efgtoa@h^(0+128),w
 10469  046B  00F4               	movwf	___fldiv@b
 10470  046C  3180  202B  3181   	fcall	___fldiv
 10471  046F  0873               	movf	?___fldiv+3,w
 10472  0470  0020               	movlb	0	; select bank0
 10473  0471  00B0               	movwf	floorf@x+3
 10474  0472  0872               	movf	?___fldiv+2,w
 10475  0473  00AF               	movwf	floorf@x+2
 10476  0474  0871               	movf	?___fldiv+1,w
 10477  0475  00AE               	movwf	floorf@x+1
 10478  0476  0870               	movf	?___fldiv,w
 10479  0477  00AD               	movwf	floorf@x
 10480  0478  3195  2559  3181   	fcall	_floorf
 10481  047B  0020               	movlb	0	; select bank0
 10482  047C  0830               	movf	?_floorf+3,w
 10483  047D  0021               	movlb	1	; select bank1
 10484  047E  00CA               	movwf	(efgtoa@l+3)^(0+128)
 10485  047F  0020               	movlb	0	; select bank0
 10486  0480  082F               	movf	?_floorf+2,w
 10487  0481  0021               	movlb	1	; select bank1
 10488  0482  00C9               	movwf	(efgtoa@l+2)^(0+128)
 10489  0483  0020               	movlb	0	; select bank0
 10490  0484  082E               	movf	?_floorf+1,w
 10491  0485  0021               	movlb	1	; select bank1
 10492  0486  00C8               	movwf	(efgtoa@l+1)^(0+128)
 10493  0487  0020               	movlb	0	; select bank0
 10494  0488  082D               	movf	?_floorf,w
 10495  0489  0021               	movlb	1	; select bank1
 10496  048A  00C7               	movwf	efgtoa@l^(0+128)
 10497                           
 10498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10499  048B  084A               	movf	(efgtoa@l+3)^(0+128),w
 10500  048C  00F3               	movwf	___fltol@f1+3
 10501  048D  0849               	movf	(efgtoa@l+2)^(0+128),w
 10502  048E  00F2               	movwf	___fltol@f1+2
 10503  048F  0848               	movf	(efgtoa@l+1)^(0+128),w
 10504  0490  00F1               	movwf	___fltol@f1+1
 10505  0491  0847               	movf	efgtoa@l^(0+128),w
 10506  0492  00F0               	movwf	___fltol@f1
 10507  0493  3192  225A  3181   	fcall	___fltol
 10508  0496  0871               	movf	?___fltol+1,w
 10509  0497  0021               	movlb	1	; select bank1
 10510  0498  00B9               	movwf	(efgtoa@d+1)^(0+128)
 10511  0499  0870               	movf	?___fltol,w
 10512  049A  00B8               	movwf	efgtoa@d^(0+128)
 10513                           
 10514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10515  049B  084A               	movf	(efgtoa@l+3)^(0+128),w
 10516  049C  0020               	movlb	0	; select bank0
 10517  049D  00B5               	movwf	___flmul@a+3
 10518  049E  0021               	movlb	1	; select bank1
 10519  049F  0849               	movf	(efgtoa@l+2)^(0+128),w
 10520  04A0  0020               	movlb	0	; select bank0
 10521  04A1  00B4               	movwf	___flmul@a+2
 10522  04A2  0021               	movlb	1	; select bank1
 10523  04A3  0848               	movf	(efgtoa@l+1)^(0+128),w
 10524  04A4  0020               	movlb	0	; select bank0
 10525  04A5  00B3               	movwf	___flmul@a+1
 10526  04A6  0021               	movlb	1	; select bank1
 10527  04A7  0847               	movf	efgtoa@l^(0+128),w
 10528  04A8  0020               	movlb	0	; select bank0
 10529  04A9  00B2               	movwf	___flmul@a
 10530  04AA  0021               	movlb	1	; select bank1
 10531  04AB  0858               	movf	(efgtoa@u+3)^(0+128),w
 10532  04AC  0020               	movlb	0	; select bank0
 10533  04AD  00B1               	movwf	___flmul@b+3
 10534  04AE  0021               	movlb	1	; select bank1
 10535  04AF  0857               	movf	(efgtoa@u+2)^(0+128),w
 10536  04B0  0020               	movlb	0	; select bank0
 10537  04B1  00B0               	movwf	___flmul@b+2
 10538  04B2  0021               	movlb	1	; select bank1
 10539  04B3  0856               	movf	(efgtoa@u+1)^(0+128),w
 10540  04B4  0020               	movlb	0	; select bank0
 10541  04B5  00AF               	movwf	___flmul@b+1
 10542  04B6  0021               	movlb	1	; select bank1
 10543  04B7  0855               	movf	efgtoa@u^(0+128),w
 10544  04B8  0020               	movlb	0	; select bank0
 10545  04B9  00AE               	movwf	___flmul@b
 10546  04BA  318B  239D  3181   	fcall	___flmul
 10547  04BD  0020               	movlb	0	; select bank0
 10548  04BE  0831               	movf	?___flmul+3,w
 10549  04BF  00CB               	movwf	___flsub@a+3
 10550  04C0  0830               	movf	?___flmul+2,w
 10551  04C1  00CA               	movwf	___flsub@a+2
 10552  04C2  082F               	movf	?___flmul+1,w
 10553  04C3  00C9               	movwf	___flsub@a+1
 10554  04C4  082E               	movf	?___flmul,w
 10555  04C5  00C8               	movwf	___flsub@a
 10556  04C6  0021               	movlb	1	; select bank1
 10557  04C7  0846               	movf	(efgtoa@h+3)^(0+128),w
 10558  04C8  0020               	movlb	0	; select bank0
 10559  04C9  00CF               	movwf	___flsub@b+3
 10560  04CA  0021               	movlb	1	; select bank1
 10561  04CB  0845               	movf	(efgtoa@h+2)^(0+128),w
 10562  04CC  0020               	movlb	0	; select bank0
 10563  04CD  00CE               	movwf	___flsub@b+2
 10564  04CE  0021               	movlb	1	; select bank1
 10565  04CF  0844               	movf	(efgtoa@h+1)^(0+128),w
 10566  04D0  0020               	movlb	0	; select bank0
 10567  04D1  00CD               	movwf	___flsub@b+1
 10568  04D2  0021               	movlb	1	; select bank1
 10569  04D3  0843               	movf	efgtoa@h^(0+128),w
 10570  04D4  0020               	movlb	0	; select bank0
 10571  04D5  00CC               	movwf	___flsub@b
 10572  04D6  3190  201B  3181   	fcall	___flsub
 10573  04D9  0020               	movlb	0	; select bank0
 10574  04DA  084B               	movf	?___flsub+3,w
 10575  04DB  0021               	movlb	1	; select bank1
 10576  04DC  00C6               	movwf	(efgtoa@h+3)^(0+128)
 10577  04DD  0020               	movlb	0	; select bank0
 10578  04DE  084A               	movf	?___flsub+2,w
 10579  04DF  0021               	movlb	1	; select bank1
 10580  04E0  00C5               	movwf	(efgtoa@h+2)^(0+128)
 10581  04E1  0020               	movlb	0	; select bank0
 10582  04E2  0849               	movf	?___flsub+1,w
 10583  04E3  0021               	movlb	1	; select bank1
 10584  04E4  00C4               	movwf	(efgtoa@h+1)^(0+128)
 10585  04E5  0020               	movlb	0	; select bank0
 10586  04E6  0848               	movf	?___flsub,w
 10587  04E7  0021               	movlb	1	; select bank1
 10588  04E8  00C3               	movwf	efgtoa@h^(0+128)
 10589                           
 10590                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10591  04E9  3041               	movlw	65
 10592  04EA  00F3               	movwf	___fldiv@a+3
 10593  04EB  3020               	movlw	32
 10594  04EC  00F2               	movwf	___fldiv@a+2
 10595  04ED  3000               	movlw	0
 10596  04EE  00F1               	movwf	___fldiv@a+1
 10597  04EF  3000               	movlw	0
 10598  04F0  00F0               	movwf	___fldiv@a
 10599  04F1  0858               	movf	(efgtoa@u+3)^(0+128),w
 10600  04F2  00F7               	movwf	___fldiv@b+3
 10601  04F3  0857               	movf	(efgtoa@u+2)^(0+128),w
 10602  04F4  00F6               	movwf	___fldiv@b+2
 10603  04F5  0856               	movf	(efgtoa@u+1)^(0+128),w
 10604  04F6  00F5               	movwf	___fldiv@b+1
 10605  04F7  0855               	movf	efgtoa@u^(0+128),w
 10606  04F8  00F4               	movwf	___fldiv@b
 10607  04F9  3180  202B  3181   	fcall	___fldiv
 10608  04FC  0873               	movf	?___fldiv+3,w
 10609  04FD  0021               	movlb	1	; select bank1
 10610  04FE  00D8               	movwf	(efgtoa@u+3)^(0+128)
 10611  04FF  0872               	movf	?___fldiv+2,w
 10612  0500  00D7               	movwf	(efgtoa@u+2)^(0+128)
 10613  0501  0871               	movf	?___fldiv+1,w
 10614  0502  00D6               	movwf	(efgtoa@u+1)^(0+128)
 10615  0503  0870               	movf	?___fldiv,w
 10616  0504  00D5               	movwf	efgtoa@u^(0+128)
 10617                           
 10618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10619  0505  3001               	movlw	1
 10620  0506  07CB               	addwf	efgtoa@i^(0+128),f
 10621  0507  3000               	movlw	0
 10622  0508  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
 10623  0509  2C4B               	goto	l4220
 10624  050A                     l4222:	
 10625                           
 10626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10627  050A  3040               	movlw	64
 10628  050B  0020               	movlb	0	; select bank0
 10629  050C  00B1               	movwf	___flmul@b+3
 10630  050D  30A0               	movlw	160
 10631  050E  00B0               	movwf	___flmul@b+2
 10632  050F  3000               	movlw	0
 10633  0510  00AF               	movwf	___flmul@b+1
 10634  0511  3000               	movlw	0
 10635  0512  00AE               	movwf	___flmul@b
 10636  0513  0021               	movlb	1	; select bank1
 10637  0514  0858               	movf	(efgtoa@u+3)^(0+128),w
 10638  0515  0020               	movlb	0	; select bank0
 10639  0516  00B5               	movwf	___flmul@a+3
 10640  0517  0021               	movlb	1	; select bank1
 10641  0518  0857               	movf	(efgtoa@u+2)^(0+128),w
 10642  0519  0020               	movlb	0	; select bank0
 10643  051A  00B4               	movwf	___flmul@a+2
 10644  051B  0021               	movlb	1	; select bank1
 10645  051C  0856               	movf	(efgtoa@u+1)^(0+128),w
 10646  051D  0020               	movlb	0	; select bank0
 10647  051E  00B3               	movwf	___flmul@a+1
 10648  051F  0021               	movlb	1	; select bank1
 10649  0520  0855               	movf	efgtoa@u^(0+128),w
 10650  0521  0020               	movlb	0	; select bank0
 10651  0522  00B2               	movwf	___flmul@a
 10652  0523  318B  239D  3181   	fcall	___flmul
 10653  0526  0020               	movlb	0	; select bank0
 10654  0527  0831               	movf	?___flmul+3,w
 10655  0528  0021               	movlb	1	; select bank1
 10656  0529  00CA               	movwf	(efgtoa@l+3)^(0+128)
 10657  052A  0020               	movlb	0	; select bank0
 10658  052B  0830               	movf	?___flmul+2,w
 10659  052C  0021               	movlb	1	; select bank1
 10660  052D  00C9               	movwf	(efgtoa@l+2)^(0+128)
 10661  052E  0020               	movlb	0	; select bank0
 10662  052F  082F               	movf	?___flmul+1,w
 10663  0530  0021               	movlb	1	; select bank1
 10664  0531  00C8               	movwf	(efgtoa@l+1)^(0+128)
 10665  0532  0020               	movlb	0	; select bank0
 10666  0533  082E               	movf	?___flmul,w
 10667  0534  0021               	movlb	1	; select bank1
 10668  0535  00C7               	movwf	efgtoa@l^(0+128)
 10669                           
 10670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10671  0536  0846               	movf	(efgtoa@h+3)^(0+128),w
 10672  0537  0020               	movlb	0	; select bank0
 10673  0538  00CB               	movwf	___flge@ff1+3
 10674  0539  0021               	movlb	1	; select bank1
 10675  053A  0845               	movf	(efgtoa@h+2)^(0+128),w
 10676  053B  0020               	movlb	0	; select bank0
 10677  053C  00CA               	movwf	___flge@ff1+2
 10678  053D  0021               	movlb	1	; select bank1
 10679  053E  0844               	movf	(efgtoa@h+1)^(0+128),w
 10680  053F  0020               	movlb	0	; select bank0
 10681  0540  00C9               	movwf	___flge@ff1+1
 10682  0541  0021               	movlb	1	; select bank1
 10683  0542  0843               	movf	efgtoa@h^(0+128),w
 10684  0543  0020               	movlb	0	; select bank0
 10685  0544  00C8               	movwf	___flge@ff1
 10686  0545  0021               	movlb	1	; select bank1
 10687  0546  084A               	movf	(efgtoa@l+3)^(0+128),w
 10688  0547  0020               	movlb	0	; select bank0
 10689  0548  00CF               	movwf	___flge@ff2+3
 10690  0549  0021               	movlb	1	; select bank1
 10691  054A  0849               	movf	(efgtoa@l+2)^(0+128),w
 10692  054B  0020               	movlb	0	; select bank0
 10693  054C  00CE               	movwf	___flge@ff2+2
 10694  054D  0021               	movlb	1	; select bank1
 10695  054E  0848               	movf	(efgtoa@l+1)^(0+128),w
 10696  054F  0020               	movlb	0	; select bank0
 10697  0550  00CD               	movwf	___flge@ff2+1
 10698  0551  0021               	movlb	1	; select bank1
 10699  0552  0847               	movf	efgtoa@l^(0+128),w
 10700  0553  0020               	movlb	0	; select bank0
 10701  0554  00CC               	movwf	___flge@ff2
 10702  0555  3193  23A4  3181   	fcall	___flge
 10703  0558  1803               	btfsc	3,0
 10704  0559  2D5D               	goto	l4226
 10705                           
 10706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10707  055A  3000               	movlw	0
 10708  055B  0021               	movlb	1	; select bank1
 10709  055C  2D77               	goto	L6
 10710  055D                     l4226:	
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10712                           
 10713                           
 10714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10715  055D  0021               	movlb	1	; select bank1
 10716  055E  0846               	movf	(efgtoa@h+3)^(0+128),w
 10717  055F  00F3               	movwf	___fleq@ff1+3
 10718  0560  0845               	movf	(efgtoa@h+2)^(0+128),w
 10719  0561  00F2               	movwf	___fleq@ff1+2
 10720  0562  0844               	movf	(efgtoa@h+1)^(0+128),w
 10721  0563  00F1               	movwf	___fleq@ff1+1
 10722  0564  0843               	movf	efgtoa@h^(0+128),w
 10723  0565  00F0               	movwf	___fleq@ff1
 10724  0566  084A               	movf	(efgtoa@l+3)^(0+128),w
 10725  0567  00F7               	movwf	___fleq@ff2+3
 10726  0568  0849               	movf	(efgtoa@l+2)^(0+128),w
 10727  0569  00F6               	movwf	___fleq@ff2+2
 10728  056A  0848               	movf	(efgtoa@l+1)^(0+128),w
 10729  056B  00F5               	movwf	___fleq@ff2+1
 10730  056C  0847               	movf	efgtoa@l^(0+128),w
 10731  056D  00F4               	movwf	___fleq@ff2
 10732  056E  3191  2174  3181   	fcall	___fleq
 10733  0571  1C03               	btfss	3,0
 10734  0572  2D7E               	goto	l4232
 10735  0573  0021               	movlb	1	; select bank1
 10736  0574  1838               	btfsc	efgtoa@d^(0+128),0
 10737  0575  2D7E               	goto	l4232
 10738                           
 10739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10740  0576  3000               	movlw	0
 10741  0577                     L6:	
 10742  0577  00CA               	movwf	(efgtoa@l+3)^(0+128)
 10743  0578  3000               	movlw	0
 10744  0579  00C9               	movwf	(efgtoa@l+2)^(0+128)
 10745  057A  3000               	movlw	0
 10746  057B  00C8               	movwf	(efgtoa@l+1)^(0+128)
 10747  057C  3000               	movlw	0
 10748  057D  00C7               	movwf	efgtoa@l^(0+128)
 10749  057E                     l4232:	
 10750                           
 10751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10752  057E  0021               	movlb	1	; select bank1
 10753  057F  084A               	movf	(efgtoa@l+3)^(0+128),w
 10754  0580  00F3               	movwf	___fladd@b+3
 10755  0581  0849               	movf	(efgtoa@l+2)^(0+128),w
 10756  0582  00F2               	movwf	___fladd@b+2
 10757  0583  0848               	movf	(efgtoa@l+1)^(0+128),w
 10758  0584  00F1               	movwf	___fladd@b+1
 10759  0585  0847               	movf	efgtoa@l^(0+128),w
 10760  0586  00F0               	movwf	___fladd@b
 10761  0587  0850               	movf	(efgtoa@g+3)^(0+128),w
 10762  0588  00F7               	movwf	___fladd@a+3
 10763  0589  084F               	movf	(efgtoa@g+2)^(0+128),w
 10764  058A  00F6               	movwf	___fladd@a+2
 10765  058B  084E               	movf	(efgtoa@g+1)^(0+128),w
 10766  058C  00F5               	movwf	___fladd@a+1
 10767  058D  084D               	movf	efgtoa@g^(0+128),w
 10768  058E  00F4               	movwf	___fladd@a
 10769  058F  3189  21B4  3181   	fcall	___fladd
 10770  0592  0873               	movf	?___fladd+3,w
 10771  0593  0021               	movlb	1	; select bank1
 10772  0594  00C6               	movwf	(efgtoa@h+3)^(0+128)
 10773  0595  0872               	movf	?___fladd+2,w
 10774  0596  00C5               	movwf	(efgtoa@h+2)^(0+128)
 10775  0597  0871               	movf	?___fladd+1,w
 10776  0598  00C4               	movwf	(efgtoa@h+1)^(0+128)
 10777  0599  0870               	movf	?___fladd,w
 10778  059A  00C3               	movwf	efgtoa@h^(0+128)
 10779                           
 10780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 10781  059B  0823               	movf	(efgtoa@ou+3)^(0+128),w
 10782  059C  00D8               	movwf	(efgtoa@u+3)^(0+128)
 10783  059D  0822               	movf	(efgtoa@ou+2)^(0+128),w
 10784  059E  00D7               	movwf	(efgtoa@u+2)^(0+128)
 10785  059F  0821               	movf	(efgtoa@ou+1)^(0+128),w
 10786  05A0  00D6               	movwf	(efgtoa@u+1)^(0+128)
 10787  05A1  0820               	movf	efgtoa@ou^(0+128),w
 10788  05A2  00D5               	movwf	efgtoa@u^(0+128)
 10789                           
 10790                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 10791  05A3  3065               	movlw	101
 10792  05A4  063F               	xorwf	efgtoa@nmode^(0+128),w
 10793  05A5  1903               	btfsc	3,2
 10794  05A6  2DAC               	goto	l4240
 10795  05A7  0852               	movf	(efgtoa@e+1)^(0+128),w
 10796  05A8  00B7               	movwf	(efgtoa@ne+1)^(0+128)
 10797  05A9  0851               	movf	efgtoa@e^(0+128),w
 10798  05AA  00B6               	movwf	efgtoa@ne^(0+128)
 10799  05AB  2DAE               	goto	l825
 10800  05AC                     l4240:	
 10801  05AC  01B6               	clrf	efgtoa@ne^(0+128)
 10802  05AD  01B7               	clrf	(efgtoa@ne+1)^(0+128)
 10803  05AE                     l825:	
 10804                           
 10805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 10806  05AE  01B2               	clrf	efgtoa@pp^(0+128)
 10807  05AF  01B3               	clrf	(efgtoa@pp+1)^(0+128)
 10808                           
 10809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 10810  05B0  01B0               	clrf	efgtoa@t^(0+128)
 10811  05B1  01B1               	clrf	(efgtoa@t+1)^(0+128)
 10812                           
 10813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 10814  05B2  01CB               	clrf	efgtoa@i^(0+128)
 10815  05B3  01CC               	clrf	(efgtoa@i+1)^(0+128)
 10816                           
 10817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 10818  05B4  2ECC               	goto	l4290
 10819  05B5                     l4242:	
 10820                           
 10821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 10822  05B5  0021               	movlb	1	; select bank1
 10823  05B6  0858               	movf	(efgtoa@u+3)^(0+128),w
 10824  05B7  00F3               	movwf	___fldiv@a+3
 10825  05B8  0857               	movf	(efgtoa@u+2)^(0+128),w
 10826  05B9  00F2               	movwf	___fldiv@a+2
 10827  05BA  0856               	movf	(efgtoa@u+1)^(0+128),w
 10828  05BB  00F1               	movwf	___fldiv@a+1
 10829  05BC  0855               	movf	efgtoa@u^(0+128),w
 10830  05BD  00F0               	movwf	___fldiv@a
 10831  05BE  0846               	movf	(efgtoa@h+3)^(0+128),w
 10832  05BF  00F7               	movwf	___fldiv@b+3
 10833  05C0  0845               	movf	(efgtoa@h+2)^(0+128),w
 10834  05C1  00F6               	movwf	___fldiv@b+2
 10835  05C2  0844               	movf	(efgtoa@h+1)^(0+128),w
 10836  05C3  00F5               	movwf	___fldiv@b+1
 10837  05C4  0843               	movf	efgtoa@h^(0+128),w
 10838  05C5  00F4               	movwf	___fldiv@b
 10839  05C6  3180  202B  3181   	fcall	___fldiv
 10840  05C9  0873               	movf	?___fldiv+3,w
 10841  05CA  0020               	movlb	0	; select bank0
 10842  05CB  00B0               	movwf	floorf@x+3
 10843  05CC  0872               	movf	?___fldiv+2,w
 10844  05CD  00AF               	movwf	floorf@x+2
 10845  05CE  0871               	movf	?___fldiv+1,w
 10846  05CF  00AE               	movwf	floorf@x+1
 10847  05D0  0870               	movf	?___fldiv,w
 10848  05D1  00AD               	movwf	floorf@x
 10849  05D2  3195  2559  3181   	fcall	_floorf
 10850  05D5  0020               	movlb	0	; select bank0
 10851  05D6  0830               	movf	?_floorf+3,w
 10852  05D7  0021               	movlb	1	; select bank1
 10853  05D8  00CA               	movwf	(efgtoa@l+3)^(0+128)
 10854  05D9  0020               	movlb	0	; select bank0
 10855  05DA  082F               	movf	?_floorf+2,w
 10856  05DB  0021               	movlb	1	; select bank1
 10857  05DC  00C9               	movwf	(efgtoa@l+2)^(0+128)
 10858  05DD  0020               	movlb	0	; select bank0
 10859  05DE  082E               	movf	?_floorf+1,w
 10860  05DF  0021               	movlb	1	; select bank1
 10861  05E0  00C8               	movwf	(efgtoa@l+1)^(0+128)
 10862  05E1  0020               	movlb	0	; select bank0
 10863  05E2  082D               	movf	?_floorf,w
 10864  05E3  0021               	movlb	1	; select bank1
 10865  05E4  00C7               	movwf	efgtoa@l^(0+128)
 10866                           
 10867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 10868  05E5  084A               	movf	(efgtoa@l+3)^(0+128),w
 10869  05E6  00F3               	movwf	___fltol@f1+3
 10870  05E7  0849               	movf	(efgtoa@l+2)^(0+128),w
 10871  05E8  00F2               	movwf	___fltol@f1+2
 10872  05E9  0848               	movf	(efgtoa@l+1)^(0+128),w
 10873  05EA  00F1               	movwf	___fltol@f1+1
 10874  05EB  0847               	movf	efgtoa@l^(0+128),w
 10875  05EC  00F0               	movwf	___fltol@f1
 10876  05ED  3192  225A  3181   	fcall	___fltol
 10877  05F0  0871               	movf	?___fltol+1,w
 10878  05F1  0021               	movlb	1	; select bank1
 10879  05F2  00B9               	movwf	(efgtoa@d+1)^(0+128)
 10880  05F3  0870               	movf	?___fltol,w
 10881  05F4  00B8               	movwf	efgtoa@d^(0+128)
 10882                           
 10883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 10884  05F5  0022               	movlb	2	; select bank2
 10885  05F6  1A48               	btfsc	_flags^(0+256),4
 10886  05F7  2E07               	goto	l4254
 10887  05F8  0021               	movlb	1	; select bank1
 10888  05F9  0838               	movf	efgtoa@d^(0+128),w
 10889  05FA  0439               	iorwf	(efgtoa@d+1)^(0+128),w
 10890  05FB  1D03               	btfss	3,2
 10891  05FC  2E07               	goto	l4254
 10892  05FD  3067               	movlw	103
 10893  05FE  0642               	xorwf	efgtoa@mode^(0+128),w
 10894  05FF  1903               	btfsc	3,2
 10895  0600  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
 10896  0601  2E07               	goto	l4254
 10897                           
 10898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 10899  0602  3001               	movlw	1
 10900  0603  07B0               	addwf	efgtoa@t^(0+128),f
 10901  0604  3000               	movlw	0
 10902  0605  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
 10903                           
 10904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 10905  0606  2E5A               	goto	l4282
 10906  0607                     l4254:	
 10907                           
 10908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 10909  0607  0021               	movlb	1	; select bank1
 10910  0608  0832               	movf	efgtoa@pp^(0+128),w
 10911  0609  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
 10912  060A  1903               	btfsc	3,2
 10913  060B  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
 10914  060C  2E26               	goto	l4274
 10915                           
 10916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 10917  060D  302E               	movlw	46
 10918  060E  0020               	movlb	0	; select bank0
 10919  060F  00D9               	movwf	??_efgtoa
 10920  0610  0021               	movlb	1	; select bank1
 10921  0611  0853               	movf	efgtoa@n^(0+128),w
 10922  0612  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10923  0613  0086               	movwf	6
 10924  0614  3001               	movlw	1	; select bank3/4
 10925  0615  0087               	movwf	7
 10926  0616  0020               	movlb	0	; select bank0
 10927  0617  0859               	movf	??_efgtoa,w
 10928  0618  0081               	movwf	1
 10929  0619  3001               	movlw	1
 10930  061A  0021               	movlb	1	; select bank1
 10931  061B  07D3               	addwf	efgtoa@n^(0+128),f
 10932  061C  3000               	movlw	0
 10933  061D  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
 10934                           
 10935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 10936  061E  30FF               	movlw	255
 10937  061F  07C0               	addwf	efgtoa@w^(0+128),f
 10938  0620  30FF               	movlw	255
 10939  0621  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 10940                           
 10941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 10942  0622  3001               	movlw	1
 10943  0623  00B2               	movwf	efgtoa@pp^(0+128)
 10944  0624  3000               	movlw	0
 10945  0625  00B3               	movwf	(efgtoa@pp^(0+128)+1)
 10946  0626                     l4274:	
 10947                           
 10948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 10949  0626  0830               	movf	efgtoa@t^(0+128),w
 10950  0627  0431               	iorwf	(efgtoa@t+1)^(0+128),w
 10951  0628  1903               	btfsc	3,2
 10952  0629  2E44               	goto	l4276
 10953                           
 10954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 10955  062A  3030               	movlw	48
 10956  062B  0020               	movlb	0	; select bank0
 10957  062C  00D9               	movwf	??_efgtoa
 10958  062D  0021               	movlb	1	; select bank1
 10959  062E  0853               	movf	efgtoa@n^(0+128),w
 10960  062F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10961  0630  0086               	movwf	6
 10962  0631  3001               	movlw	1	; select bank3/4
 10963  0632  0087               	movwf	7
 10964  0633  0020               	movlb	0	; select bank0
 10965  0634  0859               	movf	??_efgtoa,w
 10966  0635  0081               	movwf	1
 10967  0636  3001               	movlw	1
 10968  0637  0021               	movlb	1	; select bank1
 10969  0638  07D3               	addwf	efgtoa@n^(0+128),f
 10970  0639  3000               	movlw	0
 10971  063A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
 10972                           
 10973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 10974  063B  30FF               	movlw	255
 10975  063C  07C0               	addwf	efgtoa@w^(0+128),f
 10976  063D  30FF               	movlw	255
 10977  063E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 10978                           
 10979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 10980  063F  30FF               	movlw	255
 10981  0640  07B0               	addwf	efgtoa@t^(0+128),f
 10982  0641  30FF               	movlw	255
 10983  0642  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
 10984  0643  2E26               	goto	l4274
 10985  0644                     l4276:	
 10986                           
 10987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 10988  0644  0838               	movf	efgtoa@d^(0+128),w
 10989  0645  3E30               	addlw	48
 10990  0646  0020               	movlb	0	; select bank0
 10991  0647  00D9               	movwf	??_efgtoa
 10992  0648  0021               	movlb	1	; select bank1
 10993  0649  0853               	movf	efgtoa@n^(0+128),w
 10994  064A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10995  064B  0086               	movwf	6
 10996  064C  3001               	movlw	1	; select bank3/4
 10997  064D  0087               	movwf	7
 10998  064E  0020               	movlb	0	; select bank0
 10999  064F  0859               	movf	??_efgtoa,w
 11000  0650  0081               	movwf	1
 11001  0651  3001               	movlw	1
 11002  0652  0021               	movlb	1	; select bank1
 11003  0653  07D3               	addwf	efgtoa@n^(0+128),f
 11004  0654  3000               	movlw	0
 11005  0655  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
 11006                           
 11007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 11008  0656  30FF               	movlw	255
 11009  0657  07C0               	addwf	efgtoa@w^(0+128),f
 11010  0658  30FF               	movlw	255
 11011  0659  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 11012  065A                     l4282:	
 11013                           
 11014                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 11015  065A  084A               	movf	(efgtoa@l+3)^(0+128),w
 11016  065B  0020               	movlb	0	; select bank0
 11017  065C  00B5               	movwf	___flmul@a+3
 11018  065D  0021               	movlb	1	; select bank1
 11019  065E  0849               	movf	(efgtoa@l+2)^(0+128),w
 11020  065F  0020               	movlb	0	; select bank0
 11021  0660  00B4               	movwf	___flmul@a+2
 11022  0661  0021               	movlb	1	; select bank1
 11023  0662  0848               	movf	(efgtoa@l+1)^(0+128),w
 11024  0663  0020               	movlb	0	; select bank0
 11025  0664  00B3               	movwf	___flmul@a+1
 11026  0665  0021               	movlb	1	; select bank1
 11027  0666  0847               	movf	efgtoa@l^(0+128),w
 11028  0667  0020               	movlb	0	; select bank0
 11029  0668  00B2               	movwf	___flmul@a
 11030  0669  0021               	movlb	1	; select bank1
 11031  066A  0858               	movf	(efgtoa@u+3)^(0+128),w
 11032  066B  0020               	movlb	0	; select bank0
 11033  066C  00B1               	movwf	___flmul@b+3
 11034  066D  0021               	movlb	1	; select bank1
 11035  066E  0857               	movf	(efgtoa@u+2)^(0+128),w
 11036  066F  0020               	movlb	0	; select bank0
 11037  0670  00B0               	movwf	___flmul@b+2
 11038  0671  0021               	movlb	1	; select bank1
 11039  0672  0856               	movf	(efgtoa@u+1)^(0+128),w
 11040  0673  0020               	movlb	0	; select bank0
 11041  0674  00AF               	movwf	___flmul@b+1
 11042  0675  0021               	movlb	1	; select bank1
 11043  0676  0855               	movf	efgtoa@u^(0+128),w
 11044  0677  0020               	movlb	0	; select bank0
 11045  0678  00AE               	movwf	___flmul@b
 11046  0679  318B  239D  3181   	fcall	___flmul
 11047  067C  0020               	movlb	0	; select bank0
 11048  067D  0831               	movf	?___flmul+3,w
 11049  067E  00CB               	movwf	___flsub@a+3
 11050  067F  0830               	movf	?___flmul+2,w
 11051  0680  00CA               	movwf	___flsub@a+2
 11052  0681  082F               	movf	?___flmul+1,w
 11053  0682  00C9               	movwf	___flsub@a+1
 11054  0683  082E               	movf	?___flmul,w
 11055  0684  00C8               	movwf	___flsub@a
 11056  0685  0021               	movlb	1	; select bank1
 11057  0686  0846               	movf	(efgtoa@h+3)^(0+128),w
 11058  0687  0020               	movlb	0	; select bank0
 11059  0688  00CF               	movwf	___flsub@b+3
 11060  0689  0021               	movlb	1	; select bank1
 11061  068A  0845               	movf	(efgtoa@h+2)^(0+128),w
 11062  068B  0020               	movlb	0	; select bank0
 11063  068C  00CE               	movwf	___flsub@b+2
 11064  068D  0021               	movlb	1	; select bank1
 11065  068E  0844               	movf	(efgtoa@h+1)^(0+128),w
 11066  068F  0020               	movlb	0	; select bank0
 11067  0690  00CD               	movwf	___flsub@b+1
 11068  0691  0021               	movlb	1	; select bank1
 11069  0692  0843               	movf	efgtoa@h^(0+128),w
 11070  0693  0020               	movlb	0	; select bank0
 11071  0694  00CC               	movwf	___flsub@b
 11072  0695  3190  201B  3181   	fcall	___flsub
 11073  0698  0020               	movlb	0	; select bank0
 11074  0699  084B               	movf	?___flsub+3,w
 11075  069A  0021               	movlb	1	; select bank1
 11076  069B  00C6               	movwf	(efgtoa@h+3)^(0+128)
 11077  069C  0020               	movlb	0	; select bank0
 11078  069D  084A               	movf	?___flsub+2,w
 11079  069E  0021               	movlb	1	; select bank1
 11080  069F  00C5               	movwf	(efgtoa@h+2)^(0+128)
 11081  06A0  0020               	movlb	0	; select bank0
 11082  06A1  0849               	movf	?___flsub+1,w
 11083  06A2  0021               	movlb	1	; select bank1
 11084  06A3  00C4               	movwf	(efgtoa@h+1)^(0+128)
 11085  06A4  0020               	movlb	0	; select bank0
 11086  06A5  0848               	movf	?___flsub,w
 11087  06A6  0021               	movlb	1	; select bank1
 11088  06A7  00C3               	movwf	efgtoa@h^(0+128)
 11089                           
 11090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 11091  06A8  3041               	movlw	65
 11092  06A9  00F3               	movwf	___fldiv@a+3
 11093  06AA  3020               	movlw	32
 11094  06AB  00F2               	movwf	___fldiv@a+2
 11095  06AC  3000               	movlw	0
 11096  06AD  00F1               	movwf	___fldiv@a+1
 11097  06AE  3000               	movlw	0
 11098  06AF  00F0               	movwf	___fldiv@a
 11099  06B0  0858               	movf	(efgtoa@u+3)^(0+128),w
 11100  06B1  00F7               	movwf	___fldiv@b+3
 11101  06B2  0857               	movf	(efgtoa@u+2)^(0+128),w
 11102  06B3  00F6               	movwf	___fldiv@b+2
 11103  06B4  0856               	movf	(efgtoa@u+1)^(0+128),w
 11104  06B5  00F5               	movwf	___fldiv@b+1
 11105  06B6  0855               	movf	efgtoa@u^(0+128),w
 11106  06B7  00F4               	movwf	___fldiv@b
 11107  06B8  3180  202B  3181   	fcall	___fldiv
 11108  06BB  0873               	movf	?___fldiv+3,w
 11109  06BC  0021               	movlb	1	; select bank1
 11110  06BD  00D8               	movwf	(efgtoa@u+3)^(0+128)
 11111  06BE  0872               	movf	?___fldiv+2,w
 11112  06BF  00D7               	movwf	(efgtoa@u+2)^(0+128)
 11113  06C0  0871               	movf	?___fldiv+1,w
 11114  06C1  00D6               	movwf	(efgtoa@u+1)^(0+128)
 11115  06C2  0870               	movf	?___fldiv,w
 11116  06C3  00D5               	movwf	efgtoa@u^(0+128)
 11117                           
 11118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 11119  06C4  30FF               	movlw	255
 11120  06C5  07B6               	addwf	efgtoa@ne^(0+128),f
 11121  06C6  30FF               	movlw	255
 11122  06C7  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
 11123                           
 11124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 11125  06C8  3001               	movlw	1
 11126  06C9  07CB               	addwf	efgtoa@i^(0+128),f
 11127  06CA  3000               	movlw	0
 11128  06CB  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
 11129  06CC                     l4290:	
 11130                           
 11131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11132  06CC  084C               	movf	(efgtoa@i+1)^(0+128),w
 11133  06CD  3A80               	xorlw	128
 11134  06CE  0020               	movlb	0	; select bank0
 11135  06CF  00D9               	movwf	??_efgtoa
 11136  06D0  0021               	movlb	1	; select bank1
 11137  06D1  0835               	movf	(efgtoa@m+1)^(0+128),w
 11138  06D2  3A80               	xorlw	128
 11139  06D3  0020               	movlb	0	; select bank0
 11140  06D4  0259               	subwf	??_efgtoa,w
 11141  06D5  1D03               	skipz
 11142  06D6  2EDA               	goto	u5635
 11143  06D7  0021               	movlb	1	; select bank1
 11144  06D8  0834               	movf	efgtoa@m^(0+128),w
 11145  06D9  024B               	subwf	efgtoa@i^(0+128),w
 11146  06DA                     u5635:	
 11147  06DA  1803               	skipnc
 11148  06DB  2EEA               	goto	l4294
 11149  06DC  0021               	movlb	1	; select bank1
 11150  06DD  0854               	movf	(efgtoa@n+1)^(0+128),w
 11151  06DE  3A80               	xorlw	128
 11152  06DF  0020               	movlb	0	; select bank0
 11153  06E0  00D9               	movwf	??_efgtoa
 11154  06E1  3080               	movlw	128
 11155  06E2  0259               	subwf	??_efgtoa,w
 11156  06E3  1D03               	skipz
 11157  06E4  2EE8               	goto	u5645
 11158  06E5  304B               	movlw	75
 11159  06E6  0021               	movlb	1	; select bank1
 11160  06E7  0253               	subwf	efgtoa@n^(0+128),w
 11161  06E8                     u5645:	
 11162  06E8  1C03               	skipc
 11163  06E9  2DB5               	goto	l4242
 11164  06EA                     l4294:	
 11165                           
 11166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 11167  06EA  0021               	movlb	1	; select bank1
 11168  06EB  0832               	movf	efgtoa@pp^(0+128),w
 11169  06EC  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
 11170  06ED  1D03               	btfss	3,2
 11171  06EE  2F03               	goto	l4302
 11172  06EF  0022               	movlb	2	; select bank2
 11173  06F0  1E48               	btfss	_flags^(0+256),4
 11174  06F1  2F03               	goto	l4302
 11175                           
 11176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 11177  06F2  302E               	movlw	46
 11178  06F3  0020               	movlb	0	; select bank0
 11179  06F4  00D9               	movwf	??_efgtoa
 11180  06F5  0021               	movlb	1	; select bank1
 11181  06F6  0853               	movf	efgtoa@n^(0+128),w
 11182  06F7  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11183  06F8  0086               	movwf	6
 11184  06F9  3001               	movlw	1	; select bank3/4
 11185  06FA  0087               	movwf	7
 11186  06FB  0020               	movlb	0	; select bank0
 11187  06FC  0859               	movf	??_efgtoa,w
 11188  06FD  0081               	movwf	1
 11189  06FE  3001               	movlw	1
 11190  06FF  0021               	movlb	1	; select bank1
 11191  0700  07D3               	addwf	efgtoa@n^(0+128),f
 11192  0701  3000               	movlw	0
 11193  0702  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
 11194  0703                     l4302:	
 11195                           
 11196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 11197  0703  0021               	movlb	1	; select bank1
 11198  0704  0853               	movf	efgtoa@n^(0+128),w
 11199  0705  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11200  0706  0086               	movwf	6
 11201  0707  3001               	movlw	1	; select bank3/4
 11202  0708  0087               	movwf	7
 11203  0709  0181               	clrf	1
 11204                           
 11205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 11206  070A  3065               	movlw	101
 11207  070B  063F               	xorwf	efgtoa@nmode^(0+128),w
 11208  070C  1D03               	btfss	3,2
 11209  070D  2FD5               	goto	l4364
 11210                           
 11211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 11212  070E  304F               	movlw	79
 11213  070F  00CB               	movwf	efgtoa@i^(0+128)
 11214  0710  3000               	movlw	0
 11215  0711  00CC               	movwf	(efgtoa@i^(0+128)+1)
 11216                           
 11217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 11218  0712  084B               	movf	efgtoa@i^(0+128),w
 11219  0713  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11220  0714  0086               	movwf	6
 11221  0715  3001               	movlw	1	; select bank3/4
 11222  0716  0087               	movwf	7
 11223  0717  0181               	clrf	1
 11224                           
 11225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 11226  0718  01BA               	clrf	efgtoa@sign^(0+128)
 11227  0719  01BB               	clrf	(efgtoa@sign+1)^(0+128)
 11228                           
 11229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 11230  071A  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
 11231  071B  2F25               	goto	l4318
 11232                           
 11233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 11234  071C  3001               	movlw	1
 11235  071D  00BA               	movwf	efgtoa@sign^(0+128)
 11236  071E  3000               	movlw	0
 11237  071F  00BB               	movwf	(efgtoa@sign^(0+128)+1)
 11238                           
 11239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 11240  0720  09D1               	comf	efgtoa@e^(0+128),f
 11241  0721  09D2               	comf	(efgtoa@e+1)^(0+128),f
 11242  0722  0AD1               	incf	efgtoa@e^(0+128),f
 11243  0723  1903               	skipnz
 11244  0724  0AD2               	incf	(efgtoa@e+1)^(0+128),f
 11245  0725                     l4318:	
 11246                           
 11247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 11248  0725  3002               	movlw	2
 11249  0726  00BC               	movwf	efgtoa@p^(0+128)
 11250  0727  3000               	movlw	0
 11251  0728  00BD               	movwf	(efgtoa@p^(0+128)+1)
 11252  0729                     l4330:	
 11253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11254                           
 11255                           
 11256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11257  0729  0851               	movf	efgtoa@e^(0+128),w
 11258  072A  0452               	iorwf	(efgtoa@e+1)^(0+128),w
 11259  072B  1903               	btfsc	3,2
 11260  072C  2F64               	goto	l4332
 11261  072D                     l4320:	
 11262                           
 11263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 11264  072D  30FF               	movlw	255
 11265  072E  0021               	movlb	1	; select bank1
 11266  072F  07CB               	addwf	efgtoa@i^(0+128),f
 11267  0730  30FF               	movlw	255
 11268  0731  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
 11269                           
 11270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 11271  0732  300A               	movlw	10
 11272  0733  00F0               	movwf	___awmod@divisor
 11273  0734  3000               	movlw	0
 11274  0735  00F1               	movwf	___awmod@divisor+1
 11275  0736  0852               	movf	(efgtoa@e+1)^(0+128),w
 11276  0737  00F3               	movwf	___awmod@dividend+1
 11277  0738  0851               	movf	efgtoa@e^(0+128),w
 11278  0739  00F2               	movwf	___awmod@dividend
 11279  073A  3191  212F  3181   	fcall	___awmod
 11280  073D  0870               	movf	?___awmod,w
 11281  073E  3E30               	addlw	48
 11282  073F  0020               	movlb	0	; select bank0
 11283  0740  00D9               	movwf	??_efgtoa
 11284  0741  0021               	movlb	1	; select bank1
 11285  0742  084B               	movf	efgtoa@i^(0+128),w
 11286  0743  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11287  0744  0086               	movwf	6
 11288  0745  3001               	movlw	1	; select bank3/4
 11289  0746  0087               	movwf	7
 11290  0747  0020               	movlb	0	; select bank0
 11291  0748  0859               	movf	??_efgtoa,w
 11292  0749  0081               	movwf	1
 11293                           
 11294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 11295  074A  300A               	movlw	10
 11296  074B  00F0               	movwf	___awdiv@divisor
 11297  074C  3000               	movlw	0
 11298  074D  00F1               	movwf	___awdiv@divisor+1
 11299  074E  0021               	movlb	1	; select bank1
 11300  074F  0852               	movf	(efgtoa@e+1)^(0+128),w
 11301  0750  00F3               	movwf	___awdiv@dividend+1
 11302  0751  0851               	movf	efgtoa@e^(0+128),w
 11303  0752  00F2               	movwf	___awdiv@dividend
 11304  0753  3188  2012  3181   	fcall	___awdiv
 11305  0756  0871               	movf	?___awdiv+1,w
 11306  0757  0021               	movlb	1	; select bank1
 11307  0758  00D2               	movwf	(efgtoa@e+1)^(0+128)
 11308  0759  0870               	movf	?___awdiv,w
 11309  075A  00D1               	movwf	efgtoa@e^(0+128)
 11310                           
 11311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 11312  075B  30FF               	movlw	255
 11313  075C  07BC               	addwf	efgtoa@p^(0+128),f
 11314  075D  30FF               	movlw	255
 11315  075E  3DBD               	addwfc	(efgtoa@p+1)^(0+128),f
 11316                           
 11317                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 11318  075F  30FF               	movlw	255
 11319  0760  07C0               	addwf	efgtoa@w^(0+128),f
 11320  0761  30FF               	movlw	255
 11321  0762  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 11322  0763  2F29               	goto	l4330
 11323  0764                     l4332:	
 11324  0764  083D               	movf	(efgtoa@p+1)^(0+128),w
 11325  0765  3A80               	xorlw	128
 11326  0766  0020               	movlb	0	; select bank0
 11327  0767  00D9               	movwf	??_efgtoa
 11328  0768  3080               	movlw	128
 11329  0769  0259               	subwf	??_efgtoa,w
 11330  076A  1D03               	skipz
 11331  076B  2F6F               	goto	u5705
 11332  076C  3001               	movlw	1
 11333  076D  0021               	movlb	1	; select bank1
 11334  076E  023C               	subwf	efgtoa@p^(0+128),w
 11335  076F                     u5705:	
 11336  076F  1803               	skipnc
 11337  0770  2F2D               	goto	l4320
 11338                           
 11339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 11340  0771  30FF               	movlw	255
 11341  0772  0021               	movlb	1	; select bank1
 11342  0773  07CB               	addwf	efgtoa@i^(0+128),f
 11343  0774  30FF               	movlw	255
 11344  0775  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
 11345                           
 11346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 11347  0776  083A               	movf	efgtoa@sign^(0+128),w
 11348  0777  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
 11349  0778  1D03               	btfss	3,2
 11350  0779  2F7C               	goto	l4340
 11351  077A  302B               	movlw	43
 11352  077B  2F7D               	goto	L7
 11353  077C                     l4340:	
 11354  077C  302D               	movlw	45
 11355  077D                     L7:	
 11356  077D  00AA               	movwf	_efgtoa$1420^(0+128)
 11357  077E  3000               	movlw	0
 11358  077F  00AB               	movwf	(_efgtoa$1420^(0+128)+1)
 11359  0780  082A               	movf	_efgtoa$1420^(0+128),w
 11360  0781  0020               	movlb	0	; select bank0
 11361  0782  00D9               	movwf	??_efgtoa
 11362  0783  0021               	movlb	1	; select bank1
 11363  0784  084B               	movf	efgtoa@i^(0+128),w
 11364  0785  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11365  0786  0086               	movwf	6
 11366  0787  3001               	movlw	1	; select bank3/4
 11367  0788  0087               	movwf	7
 11368  0789  0020               	movlb	0	; select bank0
 11369  078A  0859               	movf	??_efgtoa,w
 11370  078B  0081               	movwf	1
 11371                           
 11372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 11373  078C  30FF               	movlw	255
 11374  078D  0021               	movlb	1	; select bank1
 11375  078E  07C0               	addwf	efgtoa@w^(0+128),f
 11376  078F  30FF               	movlw	255
 11377  0790  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 11378                           
 11379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11380  0791  30FF               	movlw	255
 11381  0792  07CB               	addwf	efgtoa@i^(0+128),f
 11382  0793  30FF               	movlw	255
 11383  0794  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
 11384  0795  0020               	movlb	0	; select bank0
 11385  0796  0858               	movf	efgtoa@c,w
 11386  0797  3EBF               	addlw	191
 11387  0798  00D9               	movwf	??_efgtoa
 11388  0799  30FF               	movlw	255
 11389  079A  1803               	skipnc
 11390  079B  3000               	movlw	0
 11391  079C  00DA               	movwf	??_efgtoa+1
 11392  079D  3000               	movlw	0
 11393  079E  025A               	subwf	??_efgtoa+1,w
 11394  079F  301A               	movlw	26
 11395  07A0  1903               	skipnz
 11396  07A1  0259               	subwf	??_efgtoa,w
 11397  07A2  1803               	btfsc	3,0
 11398  07A3  2FA6               	goto	u5720
 11399  07A4  3001               	movlw	1
 11400  07A5  2FA7               	goto	u5730
 11401  07A6                     u5720:	
 11402  07A6  3000               	movlw	0
 11403  07A7                     u5730:	
 11404  07A7  00DB               	movwf	??_efgtoa+2
 11405  07A8  01DC               	clrf	??_efgtoa+3
 11406  07A9  085B               	movf	??_efgtoa+2,w
 11407  07AA  0021               	movlb	1	; select bank1
 11408  07AB  00AE               	movwf	_efgtoa$1422^(0+128)
 11409  07AC  0020               	movlb	0	; select bank0
 11410  07AD  085C               	movf	??_efgtoa+3,w
 11411  07AE  0021               	movlb	1	; select bank1
 11412  07AF  00AF               	movwf	(_efgtoa$1422+1)^(0+128)
 11413  07B0  082E               	movf	_efgtoa$1422^(0+128),w
 11414  07B1  042F               	iorwf	(_efgtoa$1422+1)^(0+128),w
 11415  07B2  1D03               	btfss	3,2
 11416  07B3  2FB6               	goto	l4356
 11417  07B4  3065               	movlw	101
 11418  07B5  2FB7               	goto	L8
 11419  07B6                     l4356:	
 11420  07B6  3045               	movlw	69
 11421  07B7                     L8:	
 11422  07B7  00AC               	movwf	_efgtoa$1421^(0+128)
 11423  07B8  3000               	movlw	0
 11424  07B9  00AD               	movwf	(_efgtoa$1421^(0+128)+1)
 11425  07BA  082C               	movf	_efgtoa$1421^(0+128),w
 11426  07BB  0020               	movlb	0	; select bank0
 11427  07BC  00D9               	movwf	??_efgtoa
 11428  07BD  0021               	movlb	1	; select bank1
 11429  07BE  084B               	movf	efgtoa@i^(0+128),w
 11430  07BF  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11431  07C0  0086               	movwf	6
 11432  07C1  3001               	movlw	1	; select bank3/4
 11433  07C2  0087               	movwf	7
 11434  07C3  0020               	movlb	0	; select bank0
 11435  07C4  0859               	movf	??_efgtoa,w
 11436  07C5  0081               	movwf	1
 11437                           
 11438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11439  07C6  30FF               	movlw	255
 11440  07C7  0021               	movlb	1	; select bank1
 11441  07C8  07C0               	addwf	efgtoa@w^(0+128),f
 11442  07C9  30FF               	movlw	255
 11443  07CA  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
 11444                           
 11445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11446  07CB  084B               	movf	efgtoa@i^(0+128),w
 11447  07CC  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11448  07CD  00F0               	movwf	strcpy@src
 11449  07CE  3001               	movlw	1
 11450  07CF  00F1               	movwf	strcpy@src+1
 11451  07D0  0853               	movf	efgtoa@n^(0+128),w
 11452  07D1  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11453  07D2  3190  203A  3181   	fcall	_strcpy
 11454  07D5                     l4364:	
 11455                           
 11456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 11457  07D5  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11458  07D6  0020               	movlb	0	; select bank0
 11459  07D7  00D9               	movwf	??_efgtoa
 11460  07D8  0859               	movf	??_efgtoa,w
 11461  07D9  00A4               	movwf	pad@buf
 11462  07DA  0021               	movlb	1	; select bank1
 11463  07DB  0841               	movf	(efgtoa@w+1)^(0+128),w
 11464  07DC  0020               	movlb	0	; select bank0
 11465  07DD  00A6               	movwf	pad@p+1
 11466  07DE  0021               	movlb	1	; select bank1
 11467  07DF  0840               	movf	efgtoa@w^(0+128),w
 11468  07E0  0020               	movlb	0	; select bank0
 11469  07E1  00A5               	movwf	pad@p
 11470  07E2  0021               	movlb	1	; select bank1
 11471  07E3  083E               	movf	efgtoa@fp^(0+128),w
 11472  07E4  3192  220A         	fcall	_pad
 11473  07E6  0020               	movlb	0	; select bank0
 11474  07E7  0825               	movf	?_pad+1,w
 11475  07E8  00D5               	movwf	?_efgtoa+1
 11476  07E9  0824               	movf	?_pad,w
 11477  07EA  00D4               	movwf	?_efgtoa
 11478  07EB  0008               	return
 11479  07EC                     __end_of_efgtoa:	
 11480                           
 11481                           	psect	text29
 11482  1059                     __ptext29:	
 11483 ;; *************** function _tolower *****************
 11484 ;; Defined at:
 11485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11486 ;; Parameters:    Size  Location     Type
 11487 ;;  c               2    6[COMMON] int 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;		None
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  2    6[COMMON] int 
 11492 ;; Registers used:
 11493 ;;		wreg, status,2, status,0
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;Total ram usage:        8 bytes
 11504 ;; Hardware stack levels used:    1
 11505 ;; Hardware stack levels required when called:    1
 11506 ;; This function calls:
 11507 ;;		_isupper
 11508 ;; This function is called by:
 11509 ;;		_efgtoa
 11510 ;;		_vfpfcnvrt
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _tolower
 11516  1059                     _tolower:	
 11517                           
 11518                           ;incstack = 0
 11519                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11520  1059  0876               	movf	tolower@c,w
 11521  105A  3EBF               	addlw	191
 11522  105B  00F8               	movwf	??_tolower
 11523  105C  30FF               	movlw	255
 11524  105D  3D77               	addwfc	tolower@c+1,w
 11525  105E  00F9               	movwf	??_tolower+1
 11526  105F  3000               	movlw	0
 11527  1060  0279               	subwf	??_tolower+1,w
 11528  1061  301A               	movlw	26
 11529  1062  1903               	skipnz
 11530  1063  0278               	subwf	??_tolower,w
 11531  1064  1803               	btfsc	3,0
 11532  1065  2868               	goto	u3790
 11533  1066  3001               	movlw	1
 11534  1067  2869               	goto	u3800
 11535  1068                     u3790:	
 11536  1068  3000               	movlw	0
 11537  1069                     u3800:	
 11538  1069  00FA               	movwf	??_tolower+2
 11539  106A  01FB               	clrf	??_tolower+3
 11540  106B  087A               	movf	??_tolower+2,w
 11541  106C  00FC               	movwf	_tolower$1824
 11542  106D  087B               	movf	??_tolower+3,w
 11543  106E  00FD               	movwf	_tolower$1824+1
 11544  106F  087C               	movf	_tolower$1824,w
 11545  1070  047D               	iorwf	_tolower$1824+1,w
 11546  1071  1903               	btfsc	3,2
 11547  1072  0008               	return
 11548  1073  3020               	movlw	32
 11549  1074  0476               	iorwf	tolower@c,w
 11550  1075  00F6               	movwf	?_tolower
 11551  1076  3000               	movlw	0
 11552  1077  0477               	iorwf	tolower@c+1,w
 11553  1078  00F7               	movwf	?_tolower+1
 11554  1079  0008               	return
 11555  107A                     __end_of_tolower:	
 11556                           
 11557                           	psect	text30
 11558  1F94                     __ptext30:	
 11559 ;; *************** function _isupper *****************
 11560 ;; Defined at:
 11561 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11562 ;; Parameters:    Size  Location     Type
 11563 ;;  c               2    0[COMMON] int 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;		None
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  2    0[COMMON] int 
 11568 ;; Registers used:
 11569 ;;		wreg, status,2, status,0
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;Total ram usage:        6 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; This function calls:
 11582 ;;		Nothing
 11583 ;; This function is called by:
 11584 ;;		_efgtoa
 11585 ;;		_vfpfcnvrt
 11586 ;;		_tolower
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _isupper
 11592  1F94                     _isupper:	
 11593                           
 11594                           ;incstack = 0
 11595                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11596  1F94  0870               	movf	isupper@c,w
 11597  1F95  3EBF               	addlw	191
 11598  1F96  00F2               	movwf	??_isupper
 11599  1F97  30FF               	movlw	255
 11600  1F98  3D71               	addwfc	isupper@c+1,w
 11601  1F99  00F3               	movwf	??_isupper+1
 11602  1F9A  3000               	movlw	0
 11603  1F9B  0273               	subwf	??_isupper+1,w
 11604  1F9C  301A               	movlw	26
 11605  1F9D  1903               	skipnz
 11606  1F9E  0272               	subwf	??_isupper,w
 11607  1F9F  1803               	btfsc	3,0
 11608  1FA0  2FA3               	goto	u3170
 11609  1FA1  3001               	movlw	1
 11610  1FA2  2FA4               	goto	u3180
 11611  1FA3                     u3170:	
 11612  1FA3  3000               	movlw	0
 11613  1FA4                     u3180:	
 11614  1FA4  00F4               	movwf	??_isupper+2
 11615  1FA5  01F5               	clrf	??_isupper+3
 11616  1FA6  0874               	movf	??_isupper+2,w
 11617  1FA7  00F0               	movwf	?_isupper
 11618  1FA8  0875               	movf	??_isupper+3,w
 11619  1FA9  00F1               	movwf	?_isupper+1
 11620  1FAA  0008               	return
 11621  1FAB                     __end_of_isupper:	
 11622                           
 11623                           	psect	text31
 11624  103A                     __ptext31:	
 11625 ;; *************** function _strcpy *****************
 11626 ;; Defined at:
 11627 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  dest            1    wreg     PTR unsigned char 
 11630 ;;		 -> dbuf(80), 
 11631 ;;  src             2    0[COMMON] PTR const unsigned char 
 11632 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
 11633 ;;		 -> dbuf(80), 
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  dest            1    7[COMMON] PTR unsigned char 
 11636 ;;		 -> dbuf(80), 
 11637 ;;  s               2    4[COMMON] PTR const unsigned char 
 11638 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
 11639 ;;		 -> dbuf(80), 
 11640 ;;  d               1    6[COMMON] PTR unsigned char 
 11641 ;;		 -> dbuf(80), 
 11642 ;; Return value:  Size  Location     Type
 11643 ;;                  1    wreg      PTR unsigned char 
 11644 ;; Registers used:
 11645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11646 ;; Tracked objects:
 11647 ;;		On entry : 0/0
 11648 ;;		On exit  : 0/0
 11649 ;;		Unchanged: 0/0
 11650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11652 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11654 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11655 ;;Total ram usage:        8 bytes
 11656 ;; Hardware stack levels used:    1
 11657 ;; This function calls:
 11658 ;;		Nothing
 11659 ;; This function is called by:
 11660 ;;		_efgtoa
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           
 11665                           ;psect for function _strcpy
 11666  103A                     _strcpy:	
 11667                           
 11668                           ;incstack = 0
 11669                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11670                           ;strcpy@dest stored from wreg
 11671  103A  00F7               	movwf	strcpy@dest
 11672  103B  0871               	movf	strcpy@src+1,w
 11673  103C  00F5               	movwf	strcpy@s+1
 11674  103D  0870               	movf	strcpy@src,w
 11675  103E  00F4               	movwf	strcpy@s
 11676  103F  0877               	movf	strcpy@dest,w
 11677  1040  00F2               	movwf	??_strcpy
 11678  1041  0872               	movf	??_strcpy,w
 11679  1042  00F6               	movwf	strcpy@d
 11680  1043                     l3464:	
 11681  1043  0876               	movf	strcpy@d,w
 11682  1044  0086               	movwf	6
 11683  1045  3001               	movlw	1	; select bank2/3
 11684  1046  0087               	movwf	7
 11685  1047  0AF6               	incf	strcpy@d,f
 11686  1048  0875               	movf	strcpy@s+1,w
 11687  1049  00F3               	movwf	??_strcpy+1
 11688  104A  0874               	movf	strcpy@s,w
 11689  104B  00F2               	movwf	??_strcpy
 11690  104C  0AF4               	incf	strcpy@s,f
 11691  104D  1903               	skipnz
 11692  104E  0AF5               	incf	strcpy@s+1,f
 11693  104F  0872               	movf	??_strcpy,w
 11694  1050  0084               	movwf	4
 11695  1051  0873               	movf	??_strcpy+1,w
 11696  1052  0085               	movwf	5
 11697  1053  0800               	movf	0,w	;code access
 11698  1054  3FC0               	movwi [0]fsr1
 11699  1055  0889               	movf	9,f
 11700  1056  1903               	btfsc	3,2
 11701  1057  0008               	return
 11702  1058  2843               	goto	l3464
 11703  1059                     __end_of_strcpy:	
 11704                           
 11705                           	psect	text32
 11706  1559                     __ptext32:	
 11707 ;; *************** function _floorf *****************
 11708 ;; Defined at:
 11709 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;  x               4   13[BANK0 ] float 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  u               4   29[BANK0 ] struct .
 11714 ;;  m               4   23[BANK0 ] unsigned long 
 11715 ;;  e               2   27[BANK0 ] int 
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  4   13[BANK0 ] float 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11728 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11729 ;;Total ram usage:       20 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; This function calls:
 11732 ;;		Nothing
 11733 ;; This function is called by:
 11734 ;;		_efgtoa
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _floorf
 11740  1559                     _floorf:	
 11741                           
 11742                           ;incstack = 0
 11743                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11744  1559  0022               	movlb	2	; select bank2
 11745  155A  083D               	movf	(floorf@F524+3)^(0+256),w
 11746  155B  0020               	movlb	0	; select bank0
 11747  155C  00C0               	movwf	floorf@u+3
 11748  155D  0022               	movlb	2	; select bank2
 11749  155E  083C               	movf	(floorf@F524+2)^(0+256),w
 11750  155F  0020               	movlb	0	; select bank0
 11751  1560  00BF               	movwf	floorf@u+2
 11752  1561  0022               	movlb	2	; select bank2
 11753  1562  083B               	movf	(floorf@F524+1)^(0+256),w
 11754  1563  0020               	movlb	0	; select bank0
 11755  1564  00BE               	movwf	floorf@u+1
 11756  1565  0022               	movlb	2	; select bank2
 11757  1566  083A               	movf	floorf@F524^(0+256),w
 11758  1567  0020               	movlb	0	; select bank0
 11759  1568  00BD               	movwf	floorf@u
 11760  1569  0830               	movf	floorf@x+3,w
 11761  156A  00C0               	movwf	floorf@u+3
 11762  156B  082F               	movf	floorf@x+2,w
 11763  156C  00BF               	movwf	floorf@u+2
 11764  156D  082E               	movf	floorf@x+1,w
 11765  156E  00BE               	movwf	floorf@u+1
 11766  156F  082D               	movf	floorf@x,w
 11767  1570  00BD               	movwf	floorf@u
 11768  1571  083D               	movf	floorf@u,w
 11769  1572  00B1               	movwf	??_floorf
 11770  1573  083E               	movf	floorf@u+1,w
 11771  1574  00B2               	movwf	??_floorf+1
 11772  1575  083F               	movf	floorf@u+2,w
 11773  1576  00B3               	movwf	??_floorf+2
 11774  1577  0840               	movf	floorf@u+3,w
 11775  1578  00B4               	movwf	??_floorf+3
 11776  1579  3017               	movlw	23
 11777  157A                     u3825:	
 11778  157A  36B4               	lsrf	??_floorf+3,f
 11779  157B  0CB3               	rrf	??_floorf+2,f
 11780  157C  0CB2               	rrf	??_floorf+1,f
 11781  157D  0CB1               	rrf	??_floorf,f
 11782  157E  0B89               	decfsz	9,f
 11783  157F  2D7A               	goto	u3825
 11784  1580  30FF               	movlw	255
 11785  1581  0531               	andwf	??_floorf,w
 11786  1582  00B5               	movwf	??_floorf+4
 11787  1583  3000               	movlw	0
 11788  1584  0532               	andwf	??_floorf+1,w
 11789  1585  00B6               	movwf	??_floorf+5
 11790  1586  0835               	movf	??_floorf+4,w
 11791  1587  3E81               	addlw	129
 11792  1588  00BB               	movwf	floorf@e
 11793  1589  30FF               	movlw	255
 11794  158A  3D36               	addwfc	??_floorf+5,w
 11795  158B  00BC               	movwf	floorf@e+1
 11796  158C  083C               	movf	floorf@e+1,w
 11797  158D  3A80               	xorlw	128
 11798  158E  00B1               	movwf	??_floorf
 11799  158F  3080               	movlw	128
 11800  1590  0231               	subwf	??_floorf,w
 11801  1591  1D03               	skipz
 11802  1592  2D95               	goto	u3835
 11803  1593  3017               	movlw	23
 11804  1594  023B               	subwf	floorf@e,w
 11805  1595                     u3835:	
 11806  1595  1803               	btfsc	3,0
 11807  1596  0008               	return
 11808  1597  0020               	movlb	0	; select bank0
 11809  1598  1BBC               	btfsc	floorf@e+1,7
 11810  1599  2DF2               	goto	l3496
 11811  159A  30FF               	movlw	255
 11812  159B  00B1               	movwf	??_floorf
 11813  159C  30FF               	movlw	255
 11814  159D  00B2               	movwf	??_floorf+1
 11815  159E  307F               	movlw	127
 11816  159F  00B3               	movwf	??_floorf+2
 11817  15A0  3000               	movlw	0
 11818  15A1  00B4               	movwf	??_floorf+3
 11819  15A2  0A3B               	incf	floorf@e,w
 11820  15A3  2DA8               	goto	u3850
 11821  15A4                     u3855:	
 11822  15A4  37B4               	asrf	??_floorf+3,f
 11823  15A5  0CB3               	rrf	??_floorf+2,f
 11824  15A6  0CB2               	rrf	??_floorf+1,f
 11825  15A7  0CB1               	rrf	??_floorf,f
 11826  15A8                     u3850:	
 11827  15A8  0B89               	decfsz	9,f
 11828  15A9  2DA4               	goto	u3855
 11829  15AA  0834               	movf	??_floorf+3,w
 11830  15AB  00BA               	movwf	floorf@m+3
 11831  15AC  0833               	movf	??_floorf+2,w
 11832  15AD  00B9               	movwf	floorf@m+2
 11833  15AE  0832               	movf	??_floorf+1,w
 11834  15AF  00B8               	movwf	floorf@m+1
 11835  15B0  0831               	movf	??_floorf,w
 11836  15B1  00B7               	movwf	floorf@m
 11837  15B2  083D               	movf	floorf@u,w
 11838  15B3  0537               	andwf	floorf@m,w
 11839  15B4  00B1               	movwf	??_floorf
 11840  15B5  083E               	movf	floorf@u+1,w
 11841  15B6  0538               	andwf	floorf@m+1,w
 11842  15B7  00B2               	movwf	??_floorf+1
 11843  15B8  083F               	movf	floorf@u+2,w
 11844  15B9  0539               	andwf	floorf@m+2,w
 11845  15BA  00B3               	movwf	??_floorf+2
 11846  15BB  0840               	movf	floorf@u+3,w
 11847  15BC  053A               	andwf	floorf@m+3,w
 11848  15BD  00B4               	movwf	??_floorf+3
 11849  15BE  0834               	movf	??_floorf+3,w
 11850  15BF  0433               	iorwf	??_floorf+2,w
 11851  15C0  0432               	iorwf	??_floorf+1,w
 11852  15C1  0431               	iorwf	??_floorf,w
 11853  15C2  1903               	btfsc	3,2
 11854  15C3  0008               	return
 11855  15C4  083D               	movf	floorf@u,w
 11856  15C5  00B1               	movwf	??_floorf
 11857  15C6  083E               	movf	floorf@u+1,w
 11858  15C7  00B2               	movwf	??_floorf+1
 11859  15C8  083F               	movf	floorf@u+2,w
 11860  15C9  00B3               	movwf	??_floorf+2
 11861  15CA  0840               	movf	floorf@u+3,w
 11862  15CB  00B4               	movwf	??_floorf+3
 11863  15CC  301F               	movlw	31
 11864  15CD                     u3875:	
 11865  15CD  36B4               	lsrf	??_floorf+3,f
 11866  15CE  0CB3               	rrf	??_floorf+2,f
 11867  15CF  0CB2               	rrf	??_floorf+1,f
 11868  15D0  0CB1               	rrf	??_floorf,f
 11869  15D1  0B89               	decfsz	9,f
 11870  15D2  2DCD               	goto	u3875
 11871  15D3  0834               	movf	??_floorf+3,w
 11872  15D4  0433               	iorwf	??_floorf+2,w
 11873  15D5  0432               	iorwf	??_floorf+1,w
 11874  15D6  0431               	iorwf	??_floorf,w
 11875  15D7  1903               	skipnz
 11876  15D8  2DE1               	goto	l3494
 11877  15D9  0837               	movf	floorf@m,w
 11878  15DA  07BD               	addwf	floorf@u,f
 11879  15DB  0838               	movf	floorf@m+1,w
 11880  15DC  3DBE               	addwfc	floorf@u+1,f
 11881  15DD  0839               	movf	floorf@m+2,w
 11882  15DE  3DBF               	addwfc	floorf@u+2,f
 11883  15DF  083A               	movf	floorf@m+3,w
 11884  15E0  3DC0               	addwfc	floorf@u+3,f
 11885  15E1                     l3494:	
 11886  15E1  0937               	comf	floorf@m,w
 11887  15E2  00B1               	movwf	??_floorf
 11888  15E3  0938               	comf	floorf@m+1,w
 11889  15E4  00B2               	movwf	??_floorf+1
 11890  15E5  0939               	comf	floorf@m+2,w
 11891  15E6  00B3               	movwf	??_floorf+2
 11892  15E7  093A               	comf	floorf@m+3,w
 11893  15E8  00B4               	movwf	??_floorf+3
 11894  15E9  0831               	movf	??_floorf,w
 11895  15EA  05BD               	andwf	floorf@u,f
 11896  15EB  0832               	movf	??_floorf+1,w
 11897  15EC  05BE               	andwf	floorf@u+1,f
 11898  15ED  0833               	movf	??_floorf+2,w
 11899  15EE  05BF               	andwf	floorf@u+2,f
 11900  15EF  0834               	movf	??_floorf+3,w
 11901  15F0  05C0               	andwf	floorf@u+3,f
 11902  15F1  2E28               	goto	l1360
 11903  15F2                     l3496:	
 11904  15F2  083D               	movf	floorf@u,w
 11905  15F3  00B1               	movwf	??_floorf
 11906  15F4  083E               	movf	floorf@u+1,w
 11907  15F5  00B2               	movwf	??_floorf+1
 11908  15F6  083F               	movf	floorf@u+2,w
 11909  15F7  00B3               	movwf	??_floorf+2
 11910  15F8  0840               	movf	floorf@u+3,w
 11911  15F9  00B4               	movwf	??_floorf+3
 11912  15FA  301F               	movlw	31
 11913  15FB                     u3895:	
 11914  15FB  36B4               	lsrf	??_floorf+3,f
 11915  15FC  0CB3               	rrf	??_floorf+2,f
 11916  15FD  0CB2               	rrf	??_floorf+1,f
 11917  15FE  0CB1               	rrf	??_floorf,f
 11918  15FF  0B89               	decfsz	9,f
 11919  1600  2DFB               	goto	u3895
 11920  1601  0834               	movf	??_floorf+3,w
 11921  1602  0433               	iorwf	??_floorf+2,w
 11922  1603  0432               	iorwf	??_floorf+1,w
 11923  1604  0431               	iorwf	??_floorf,w
 11924  1605  1D03               	skipz
 11925  1606  2E0B               	goto	l3500
 11926  1607  3000               	movlw	0
 11927  1608  00C0               	movwf	floorf@u+3
 11928  1609  3000               	movlw	0
 11929  160A  2E23               	goto	L9
 11930  160B                     l3500:	
 11931  160B  083D               	movf	floorf@u,w
 11932  160C  00B1               	movwf	??_floorf
 11933  160D  083E               	movf	floorf@u+1,w
 11934  160E  00B2               	movwf	??_floorf+1
 11935  160F  083F               	movf	floorf@u+2,w
 11936  1610  00B3               	movwf	??_floorf+2
 11937  1611  0840               	movf	floorf@u+3,w
 11938  1612  00B4               	movwf	??_floorf+3
 11939  1613  3001               	movlw	1
 11940  1614                     u3915:	
 11941  1614  35B1               	lslf	??_floorf,f
 11942  1615  0DB2               	rlf	??_floorf+1,f
 11943  1616  0DB3               	rlf	??_floorf+2,f
 11944  1617  0DB4               	rlf	??_floorf+3,f
 11945  1618  0B89               	decfsz	9,f
 11946  1619  2E14               	goto	u3915
 11947  161A  0834               	movf	??_floorf+3,w
 11948  161B  0433               	iorwf	??_floorf+2,w
 11949  161C  0432               	iorwf	??_floorf+1,w
 11950  161D  0431               	iorwf	??_floorf,w
 11951  161E  1903               	skipnz
 11952  161F  2E28               	goto	l1360
 11953  1620  30BF               	movlw	191
 11954  1621  00C0               	movwf	floorf@u+3
 11955  1622  3080               	movlw	128
 11956  1623                     L9:	
 11957  1623  00BF               	movwf	floorf@u+2
 11958  1624  3000               	movlw	0
 11959  1625  00BE               	movwf	floorf@u+1
 11960  1626  3000               	movlw	0
 11961  1627  00BD               	movwf	floorf@u
 11962  1628                     l1360:	
 11963  1628  0840               	movf	floorf@u+3,w
 11964  1629  00B0               	movwf	?_floorf+3
 11965  162A  083F               	movf	floorf@u+2,w
 11966  162B  00AF               	movwf	?_floorf+2
 11967  162C  083E               	movf	floorf@u+1,w
 11968  162D  00AE               	movwf	?_floorf+1
 11969  162E  083D               	movf	floorf@u,w
 11970  162F  00AD               	movwf	?_floorf
 11971  1630  0008               	return
 11972  1631                     __end_of_floorf:	
 11973                           
 11974                           	psect	text33
 11975  132C                     __ptext33:	
 11976 ;; *************** function ___fpclassifyf *****************
 11977 ;; Defined at:
 11978 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  x               4    0[COMMON] float 
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  u               4    2[BANK0 ] struct .
 11983 ;;  e               2    0[BANK0 ] int 
 11984 ;; Return value:  Size  Location     Type
 11985 ;;                  2    0[COMMON] int 
 11986 ;; Registers used:
 11987 ;;		wreg, status,2, status,0
 11988 ;; Tracked objects:
 11989 ;;		On entry : 0/0
 11990 ;;		On exit  : 0/0
 11991 ;;		Unchanged: 0/0
 11992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11993 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;Total ram usage:       16 bytes
 11998 ;; Hardware stack levels used:    1
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_efgtoa
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function ___fpclassifyf
 12008  132C                     ___fpclassifyf:	
 12009                           
 12010                           ;incstack = 0
 12011                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12012  132C  0022               	movlb	2	; select bank2
 12013  132D  0841               	movf	(___fpclassifyf@F463+3)^(0+256),w
 12014  132E  0020               	movlb	0	; select bank0
 12015  132F  00A5               	movwf	___fpclassifyf@u+3
 12016  1330  0022               	movlb	2	; select bank2
 12017  1331  0840               	movf	(___fpclassifyf@F463+2)^(0+256),w
 12018  1332  0020               	movlb	0	; select bank0
 12019  1333  00A4               	movwf	___fpclassifyf@u+2
 12020  1334  0022               	movlb	2	; select bank2
 12021  1335  083F               	movf	(___fpclassifyf@F463+1)^(0+256),w
 12022  1336  0020               	movlb	0	; select bank0
 12023  1337  00A3               	movwf	___fpclassifyf@u+1
 12024  1338  0022               	movlb	2	; select bank2
 12025  1339  083E               	movf	___fpclassifyf@F463^(0+256),w
 12026  133A  0020               	movlb	0	; select bank0
 12027  133B  00A2               	movwf	___fpclassifyf@u
 12028  133C  0873               	movf	___fpclassifyf@x+3,w
 12029  133D  00A5               	movwf	___fpclassifyf@u+3
 12030  133E  0872               	movf	___fpclassifyf@x+2,w
 12031  133F  00A4               	movwf	___fpclassifyf@u+2
 12032  1340  0871               	movf	___fpclassifyf@x+1,w
 12033  1341  00A3               	movwf	___fpclassifyf@u+1
 12034  1342  0870               	movf	___fpclassifyf@x,w
 12035  1343  00A2               	movwf	___fpclassifyf@u
 12036  1344  0822               	movf	___fpclassifyf@u,w
 12037  1345  00F4               	movwf	??___fpclassifyf
 12038  1346  0823               	movf	___fpclassifyf@u+1,w
 12039  1347  00F5               	movwf	??___fpclassifyf+1
 12040  1348  0824               	movf	___fpclassifyf@u+2,w
 12041  1349  00F6               	movwf	??___fpclassifyf+2
 12042  134A  0825               	movf	___fpclassifyf@u+3,w
 12043  134B  00F7               	movwf	??___fpclassifyf+3
 12044  134C  3017               	movlw	23
 12045  134D                     u3705:	
 12046  134D  36F7               	lsrf	??___fpclassifyf+3,f
 12047  134E  0CF6               	rrf	??___fpclassifyf+2,f
 12048  134F  0CF5               	rrf	??___fpclassifyf+1,f
 12049  1350  0CF4               	rrf	??___fpclassifyf,f
 12050  1351  0B89               	decfsz	9,f
 12051  1352  2B4D               	goto	u3705
 12052  1353  30FF               	movlw	255
 12053  1354  0574               	andwf	??___fpclassifyf,w
 12054  1355  00A0               	movwf	___fpclassifyf@e
 12055  1356  3000               	movlw	0
 12056  1357  0575               	andwf	??___fpclassifyf+1,w
 12057  1358  00A1               	movwf	___fpclassifyf@e+1
 12058  1359  0820               	movf	___fpclassifyf@e,w
 12059  135A  0421               	iorwf	___fpclassifyf@e+1,w
 12060  135B  1D03               	btfss	3,2
 12061  135C  2B7C               	goto	l3452
 12062  135D  0822               	movf	___fpclassifyf@u,w
 12063  135E  00F4               	movwf	??___fpclassifyf
 12064  135F  0823               	movf	___fpclassifyf@u+1,w
 12065  1360  00F5               	movwf	??___fpclassifyf+1
 12066  1361  0824               	movf	___fpclassifyf@u+2,w
 12067  1362  00F6               	movwf	??___fpclassifyf+2
 12068  1363  0825               	movf	___fpclassifyf@u+3,w
 12069  1364  00F7               	movwf	??___fpclassifyf+3
 12070  1365  3001               	movlw	1
 12071  1366                     u3725:	
 12072  1366  35F4               	lslf	??___fpclassifyf,f
 12073  1367  0DF5               	rlf	??___fpclassifyf+1,f
 12074  1368  0DF6               	rlf	??___fpclassifyf+2,f
 12075  1369  0DF7               	rlf	??___fpclassifyf+3,f
 12076  136A  0B89               	decfsz	9,f
 12077  136B  2B66               	goto	u3725
 12078  136C  0877               	movf	??___fpclassifyf+3,w
 12079  136D  0476               	iorwf	??___fpclassifyf+2,w
 12080  136E  0475               	iorwf	??___fpclassifyf+1,w
 12081  136F  0474               	iorwf	??___fpclassifyf,w
 12082  1370  1D03               	skipz
 12083  1371  2B77               	goto	l3448
 12084  1372  3002               	movlw	2
 12085  1373  00F0               	movwf	?___fpclassifyf
 12086  1374  3000               	movlw	0
 12087  1375  00F1               	movwf	?___fpclassifyf+1
 12088  1376  0008               	return
 12089  1377                     l3448:	
 12090  1377  3003               	movlw	3
 12091  1378  00F0               	movwf	?___fpclassifyf
 12092  1379  3000               	movlw	0
 12093  137A  00F1               	movwf	?___fpclassifyf+1
 12094  137B  0008               	return
 12095  137C                     l3452:	
 12096  137C  0A20               	incf	___fpclassifyf@e,w
 12097  137D  0421               	iorwf	___fpclassifyf@e+1,w
 12098  137E  1D03               	btfss	3,2
 12099  137F  2B9F               	goto	l3458
 12100  1380  0822               	movf	___fpclassifyf@u,w
 12101  1381  00F4               	movwf	??___fpclassifyf
 12102  1382  0823               	movf	___fpclassifyf@u+1,w
 12103  1383  00F5               	movwf	??___fpclassifyf+1
 12104  1384  0824               	movf	___fpclassifyf@u+2,w
 12105  1385  00F6               	movwf	??___fpclassifyf+2
 12106  1386  0825               	movf	___fpclassifyf@u+3,w
 12107  1387  00F7               	movwf	??___fpclassifyf+3
 12108  1388  3009               	movlw	9
 12109  1389                     u3755:	
 12110  1389  35F4               	lslf	??___fpclassifyf,f
 12111  138A  0DF5               	rlf	??___fpclassifyf+1,f
 12112  138B  0DF6               	rlf	??___fpclassifyf+2,f
 12113  138C  0DF7               	rlf	??___fpclassifyf+3,f
 12114  138D  0B89               	decfsz	9,f
 12115  138E  2B89               	goto	u3755
 12116  138F  0877               	movf	??___fpclassifyf+3,w
 12117  1390  0476               	iorwf	??___fpclassifyf+2,w
 12118  1391  0475               	iorwf	??___fpclassifyf+1,w
 12119  1392  0474               	iorwf	??___fpclassifyf,w
 12120  1393  1D03               	btfss	3,2
 12121  1394  2B97               	goto	u3760
 12122  1395  3001               	movlw	1
 12123  1396  2B98               	goto	u3770
 12124  1397                     u3760:	
 12125  1397  3000               	movlw	0
 12126  1398                     u3770:	
 12127  1398  00F8               	movwf	??___fpclassifyf+4
 12128  1399  01F9               	clrf	??___fpclassifyf+5
 12129  139A  0878               	movf	??___fpclassifyf+4,w
 12130  139B  00F0               	movwf	?___fpclassifyf
 12131  139C  0879               	movf	??___fpclassifyf+5,w
 12132  139D  00F1               	movwf	?___fpclassifyf+1
 12133  139E  0008               	return
 12134  139F                     l3458:	
 12135  139F  3004               	movlw	4
 12136  13A0  00F0               	movwf	?___fpclassifyf
 12137  13A1  3000               	movlw	0
 12138  13A2  00F1               	movwf	?___fpclassifyf+1
 12139  13A3  0008               	return
 12140  13A4                     __end_of___fpclassifyf:	
 12141                           
 12142                           	psect	text34
 12143  125A                     __ptext34:	
 12144 ;; *************** function ___fltol *****************
 12145 ;; Defined at:
 12146 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 12147 ;; Parameters:    Size  Location     Type
 12148 ;;  f1              4    0[COMMON] int 
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;  exp1            1   10[COMMON] unsigned char 
 12151 ;;  sign1           1    9[COMMON] unsigned char 
 12152 ;; Return value:  Size  Location     Type
 12153 ;;                  4    0[COMMON] long 
 12154 ;; Registers used:
 12155 ;;		wreg, status,2, status,0
 12156 ;; Tracked objects:
 12157 ;;		On entry : 0/0
 12158 ;;		On exit  : 0/0
 12159 ;;		Unchanged: 0/0
 12160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12163 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12164 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12165 ;;Total ram usage:       11 bytes
 12166 ;; Hardware stack levels used:    1
 12167 ;; This function calls:
 12168 ;;		Nothing
 12169 ;; This function is called by:
 12170 ;;		_efgtoa
 12171 ;; This function uses a non-reentrant model
 12172 ;;
 12173                           
 12174                           
 12175                           ;psect for function ___fltol
 12176  125A                     ___fltol:	
 12177                           
 12178                           ;incstack = 0
 12179                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 12180  125A  1003               	clrc
 12181  125B  0D72               	rlf	___fltol@f1+2,w
 12182  125C  0D73               	rlf	___fltol@f1+3,w
 12183  125D  00F4               	movwf	??___fltol
 12184  125E  0874               	movf	??___fltol,w
 12185  125F  00FA               	movwf	___fltol@exp1
 12186  1260  087A               	movf	___fltol@exp1,w
 12187  1261  1D03               	btfss	3,2
 12188  1262  2A6C               	goto	l3702
 12189  1263                     l3698:	
 12190  1263  3000               	movlw	0
 12191  1264  00F3               	movwf	?___fltol+3
 12192  1265  3000               	movlw	0
 12193  1266  00F2               	movwf	?___fltol+2
 12194  1267  3000               	movlw	0
 12195  1268  00F1               	movwf	?___fltol+1
 12196  1269  3000               	movlw	0
 12197  126A  00F0               	movwf	?___fltol
 12198  126B  0008               	return
 12199  126C                     l3702:	
 12200  126C  0870               	movf	___fltol@f1,w
 12201  126D  00F4               	movwf	??___fltol
 12202  126E  0871               	movf	___fltol@f1+1,w
 12203  126F  00F5               	movwf	??___fltol+1
 12204  1270  0872               	movf	___fltol@f1+2,w
 12205  1271  00F6               	movwf	??___fltol+2
 12206  1272  0873               	movf	___fltol@f1+3,w
 12207  1273  00F7               	movwf	??___fltol+3
 12208  1274  301F               	movlw	31
 12209  1275                     u4435:	
 12210  1275  36F7               	lsrf	??___fltol+3,f
 12211  1276  0CF6               	rrf	??___fltol+2,f
 12212  1277  0CF5               	rrf	??___fltol+1,f
 12213  1278  0CF4               	rrf	??___fltol,f
 12214  1279  0B89               	decfsz	9,f
 12215  127A  2A75               	goto	u4435
 12216  127B  0874               	movf	??___fltol,w
 12217  127C  00F8               	movwf	??___fltol+4
 12218  127D  0878               	movf	??___fltol+4,w
 12219  127E  00F9               	movwf	___fltol@sign1
 12220  127F  17F2               	bsf	___fltol@f1+2,7
 12221  1280  30FF               	movlw	255
 12222  1281  05F0               	andwf	___fltol@f1,f
 12223  1282  30FF               	movlw	255
 12224  1283  05F1               	andwf	___fltol@f1+1,f
 12225  1284  30FF               	movlw	255
 12226  1285  05F2               	andwf	___fltol@f1+2,f
 12227  1286  3000               	movlw	0
 12228  1287  05F3               	andwf	___fltol@f1+3,f
 12229  1288  3096               	movlw	150
 12230  1289  02FA               	subwf	___fltol@exp1,f
 12231  128A  1FFA               	btfss	___fltol@exp1,7
 12232  128B  2A9F               	goto	l3720
 12233  128C  087A               	movf	___fltol@exp1,w
 12234  128D  3A80               	xorlw	128
 12235  128E  3E97               	addlw	151
 12236  128F  1C03               	btfss	3,0
 12237  1290  2A63               	goto	l3698
 12238  1291                     l3718:	
 12239  1291  3001               	movlw	1
 12240  1292                     u4465:	
 12241  1292  36F3               	lsrf	___fltol@f1+3,f
 12242  1293  0CF2               	rrf	___fltol@f1+2,f
 12243  1294  0CF1               	rrf	___fltol@f1+1,f
 12244  1295  0CF0               	rrf	___fltol@f1,f
 12245  1296  0B89               	decfsz	9,f
 12246  1297  2A92               	goto	u4465
 12247  1298  3001               	movlw	1
 12248  1299  00F4               	movwf	??___fltol
 12249  129A  0874               	movf	??___fltol,w
 12250  129B  07FA               	addwf	___fltol@exp1,f
 12251  129C  1903               	btfsc	3,2
 12252  129D  2AB0               	goto	l3728
 12253  129E  2A91               	goto	l3718
 12254  129F                     l3720:	
 12255  129F  3020               	movlw	32
 12256  12A0  027A               	subwf	___fltol@exp1,w
 12257  12A1  1803               	btfsc	3,0
 12258  12A2  2A63               	goto	l3698
 12259  12A3                     l1083:	
 12260  12A3  087A               	movf	___fltol@exp1,w
 12261  12A4  1903               	btfsc	3,2
 12262  12A5  2AB0               	goto	l3728
 12263  12A6  3001               	movlw	1
 12264  12A7                     u4495:	
 12265  12A7  35F0               	lslf	___fltol@f1,f
 12266  12A8  0DF1               	rlf	___fltol@f1+1,f
 12267  12A9  0DF2               	rlf	___fltol@f1+2,f
 12268  12AA  0DF3               	rlf	___fltol@f1+3,f
 12269  12AB  0B89               	decfsz	9,f
 12270  12AC  2AA7               	goto	u4495
 12271  12AD  3001               	movlw	1
 12272  12AE  02FA               	subwf	___fltol@exp1,f
 12273  12AF  2AA3               	goto	l1083
 12274  12B0                     l3728:	
 12275  12B0  0879               	movf	___fltol@sign1,w
 12276  12B1  1903               	btfsc	3,2
 12277  12B2  0008               	return
 12278  12B3  09F0               	comf	___fltol@f1,f
 12279  12B4  09F1               	comf	___fltol@f1+1,f
 12280  12B5  09F2               	comf	___fltol@f1+2,f
 12281  12B6  09F3               	comf	___fltol@f1+3,f
 12282  12B7  0AF0               	incf	___fltol@f1,f
 12283  12B8  1903               	skipnz
 12284  12B9  0AF1               	incf	___fltol@f1+1,f
 12285  12BA  1903               	skipnz
 12286  12BB  0AF2               	incf	___fltol@f1+2,f
 12287  12BC  1903               	skipnz
 12288  12BD  0AF3               	incf	___fltol@f1+3,f
 12289  12BE  0008               	return
 12290  12BF                     __end_of___fltol:	
 12291                           
 12292                           	psect	text35
 12293  101B                     __ptext35:	
 12294 ;; *************** function ___flsub *****************
 12295 ;; Defined at:
 12296 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12297 ;; Parameters:    Size  Location     Type
 12298 ;;  a               4   40[BANK0 ] long 
 12299 ;;  b               4   44[BANK0 ] long 
 12300 ;; Auto vars:     Size  Location     Type
 12301 ;;		None
 12302 ;; Return value:  Size  Location     Type
 12303 ;;                  4   40[BANK0 ] long 
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0, pclath, cstack
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12311 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;Total ram usage:        8 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    1
 12318 ;; This function calls:
 12319 ;;		___fladd
 12320 ;; This function is called by:
 12321 ;;		_efgtoa
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           
 12326                           ;psect for function ___flsub
 12327  101B                     ___flsub:	
 12328                           
 12329                           ;incstack = 0
 12330                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12331  101B  3080               	movlw	128
 12332  101C  0020               	movlb	0	; select bank0
 12333  101D  06CB               	xorwf	___flsub@a+3,f
 12334  101E  084F               	movf	___flsub@b+3,w
 12335  101F  00F3               	movwf	___fladd@b+3
 12336  1020  084E               	movf	___flsub@b+2,w
 12337  1021  00F2               	movwf	___fladd@b+2
 12338  1022  084D               	movf	___flsub@b+1,w
 12339  1023  00F1               	movwf	___fladd@b+1
 12340  1024  084C               	movf	___flsub@b,w
 12341  1025  00F0               	movwf	___fladd@b
 12342  1026  084B               	movf	___flsub@a+3,w
 12343  1027  00F7               	movwf	___fladd@a+3
 12344  1028  084A               	movf	___flsub@a+2,w
 12345  1029  00F6               	movwf	___fladd@a+2
 12346  102A  0849               	movf	___flsub@a+1,w
 12347  102B  00F5               	movwf	___fladd@a+1
 12348  102C  0848               	movf	___flsub@a,w
 12349  102D  00F4               	movwf	___fladd@a
 12350  102E  3189  21B4         	fcall	___fladd
 12351  1030  0873               	movf	?___fladd+3,w
 12352  1031  0020               	movlb	0	; select bank0
 12353  1032  00CB               	movwf	?___flsub+3
 12354  1033  0872               	movf	?___fladd+2,w
 12355  1034  00CA               	movwf	?___flsub+2
 12356  1035  0871               	movf	?___fladd+1,w
 12357  1036  00C9               	movwf	?___flsub+1
 12358  1037  0870               	movf	?___fladd,w
 12359  1038  00C8               	movwf	?___flsub
 12360  1039  0008               	return
 12361  103A                     __end_of___flsub:	
 12362                           
 12363                           	psect	text36
 12364  09B4                     __ptext36:	
 12365 ;; *************** function ___fladd *****************
 12366 ;; Defined at:
 12367 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12368 ;; Parameters:    Size  Location     Type
 12369 ;;  b               4    0[COMMON] long 
 12370 ;;  a               4    4[COMMON] long 
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;  grs             1   11[COMMON] unsigned char 
 12373 ;;  bexp            1   10[COMMON] unsigned char 
 12374 ;;  aexp            1    9[COMMON] unsigned char 
 12375 ;;  signs           1    8[COMMON] unsigned char 
 12376 ;; Return value:  Size  Location     Type
 12377 ;;                  4    0[COMMON] unsigned char 
 12378 ;; Registers used:
 12379 ;;		wreg, status,2, status,0
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12385 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;Total ram usage:       20 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; This function calls:
 12392 ;;		Nothing
 12393 ;; This function is called by:
 12394 ;;		_efgtoa
 12395 ;;		___flsub
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           
 12400                           ;psect for function ___fladd
 12401  09B4                     ___fladd:	
 12402                           
 12403                           ;incstack = 0
 12404                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 12405  09B4  0873               	movf	___fladd@b+3,w
 12406  09B5  3980               	andlw	128
 12407  09B6  0020               	movlb	0	; select bank0
 12408  09B7  00A0               	movwf	??___fladd
 12409  09B8  0820               	movf	??___fladd,w
 12410  09B9  00F8               	movwf	___fladd@signs
 12411  09BA  3573               	lslf	___fladd@b+3,w
 12412  09BB  00A0               	movwf	??___fladd
 12413  09BC  0820               	movf	??___fladd,w
 12414  09BD  00FA               	movwf	___fladd@bexp
 12415  09BE  1BF2               	btfsc	___fladd@b+2,7
 12416  09BF  147A               	bsf	___fladd@bexp,0
 12417  09C0  087A               	movf	___fladd@bexp,w
 12418  09C1  1903               	btfsc	3,2
 12419  09C2  29D1               	goto	l3224
 12420  09C3  0A7A               	incf	___fladd@bexp,w
 12421  09C4  1D03               	btfss	3,2
 12422  09C5  29CE               	goto	l3220
 12423  09C6  3000               	movlw	0
 12424  09C7  00F3               	movwf	___fladd@b+3
 12425  09C8  3000               	movlw	0
 12426  09C9  00F2               	movwf	___fladd@b+2
 12427  09CA  3000               	movlw	0
 12428  09CB  00F1               	movwf	___fladd@b+1
 12429  09CC  3000               	movlw	0
 12430  09CD  00F0               	movwf	___fladd@b
 12431  09CE                     l3220:	
 12432  09CE  17F2               	bsf	___fladd@b+2,7
 12433  09CF  01F3               	clrf	___fladd@b+3
 12434  09D0  29D9               	goto	l3226
 12435  09D1                     l3224:	
 12436  09D1  3000               	movlw	0
 12437  09D2  00F3               	movwf	___fladd@b+3
 12438  09D3  3000               	movlw	0
 12439  09D4  00F2               	movwf	___fladd@b+2
 12440  09D5  3000               	movlw	0
 12441  09D6  00F1               	movwf	___fladd@b+1
 12442  09D7  3000               	movlw	0
 12443  09D8  00F0               	movwf	___fladd@b
 12444  09D9                     l3226:	
 12445  09D9  0877               	movf	___fladd@a+3,w
 12446  09DA  3980               	andlw	128
 12447  09DB  00A0               	movwf	??___fladd
 12448  09DC  0820               	movf	??___fladd,w
 12449  09DD  00F9               	movwf	___fladd@aexp
 12450  09DE  0879               	movf	___fladd@aexp,w
 12451  09DF  0678               	xorwf	___fladd@signs,w
 12452  09E0  1D03               	btfss	3,2
 12453  09E1  1778               	bsf	___fladd@signs,6
 12454  09E2  3577               	lslf	___fladd@a+3,w
 12455  09E3  00A0               	movwf	??___fladd
 12456  09E4  0820               	movf	??___fladd,w
 12457  09E5  00F9               	movwf	___fladd@aexp
 12458  09E6  1BF6               	btfsc	___fladd@a+2,7
 12459  09E7  1479               	bsf	___fladd@aexp,0
 12460  09E8  0879               	movf	___fladd@aexp,w
 12461  09E9  1903               	btfsc	3,2
 12462  09EA  29F9               	goto	l3248
 12463  09EB  0A79               	incf	___fladd@aexp,w
 12464  09EC  1D03               	btfss	3,2
 12465  09ED  29F6               	goto	l3244
 12466  09EE  3000               	movlw	0
 12467  09EF  00F7               	movwf	___fladd@a+3
 12468  09F0  3000               	movlw	0
 12469  09F1  00F6               	movwf	___fladd@a+2
 12470  09F2  3000               	movlw	0
 12471  09F3  00F5               	movwf	___fladd@a+1
 12472  09F4  3000               	movlw	0
 12473  09F5  00F4               	movwf	___fladd@a
 12474  09F6                     l3244:	
 12475  09F6  17F6               	bsf	___fladd@a+2,7
 12476  09F7  01F7               	clrf	___fladd@a+3
 12477  09F8  2A01               	goto	l1183
 12478  09F9                     l3248:	
 12479  09F9  3000               	movlw	0
 12480  09FA  00F7               	movwf	___fladd@a+3
 12481  09FB  3000               	movlw	0
 12482  09FC  00F6               	movwf	___fladd@a+2
 12483  09FD  3000               	movlw	0
 12484  09FE  00F5               	movwf	___fladd@a+1
 12485  09FF  3000               	movlw	0
 12486  0A00  00F4               	movwf	___fladd@a
 12487  0A01                     l1183:	
 12488  0A01  087A               	movf	___fladd@bexp,w
 12489  0A02  0279               	subwf	___fladd@aexp,w
 12490  0A03  1803               	skipnc
 12491  0A04  2A47               	goto	l3284
 12492  0A05  1F78               	btfss	___fladd@signs,6
 12493  0A06  2A0B               	goto	l3254
 12494  0A07  3080               	movlw	128
 12495  0A08  00A0               	movwf	??___fladd
 12496  0A09  0820               	movf	??___fladd,w
 12497  0A0A  06F8               	xorwf	___fladd@signs,f
 12498  0A0B                     l3254:	
 12499  0A0B  087A               	movf	___fladd@bexp,w
 12500  0A0C  00A0               	movwf	??___fladd
 12501  0A0D  0820               	movf	??___fladd,w
 12502  0A0E  00FB               	movwf	___fladd@grs
 12503  0A0F  0879               	movf	___fladd@aexp,w
 12504  0A10  00A0               	movwf	??___fladd
 12505  0A11  0820               	movf	??___fladd,w
 12506  0A12  00FA               	movwf	___fladd@bexp
 12507  0A13  087B               	movf	___fladd@grs,w
 12508  0A14  00A0               	movwf	??___fladd
 12509  0A15  0820               	movf	??___fladd,w
 12510  0A16  00F9               	movwf	___fladd@aexp
 12511  0A17  0870               	movf	___fladd@b,w
 12512  0A18  00A0               	movwf	??___fladd
 12513  0A19  0820               	movf	??___fladd,w
 12514  0A1A  00FB               	movwf	___fladd@grs
 12515  0A1B  0874               	movf	___fladd@a,w
 12516  0A1C  00A0               	movwf	??___fladd
 12517  0A1D  0820               	movf	??___fladd,w
 12518  0A1E  00F0               	movwf	___fladd@b
 12519  0A1F  087B               	movf	___fladd@grs,w
 12520  0A20  00A0               	movwf	??___fladd
 12521  0A21  0820               	movf	??___fladd,w
 12522  0A22  00F4               	movwf	___fladd@a
 12523  0A23  0871               	movf	___fladd@b+1,w
 12524  0A24  00A0               	movwf	??___fladd
 12525  0A25  0820               	movf	??___fladd,w
 12526  0A26  00FB               	movwf	___fladd@grs
 12527  0A27  0875               	movf	___fladd@a+1,w
 12528  0A28  00A0               	movwf	??___fladd
 12529  0A29  0820               	movf	??___fladd,w
 12530  0A2A  00F1               	movwf	___fladd@b+1
 12531  0A2B  087B               	movf	___fladd@grs,w
 12532  0A2C  00A0               	movwf	??___fladd
 12533  0A2D  0820               	movf	??___fladd,w
 12534  0A2E  00F5               	movwf	___fladd@a+1
 12535  0A2F  0872               	movf	___fladd@b+2,w
 12536  0A30  00A0               	movwf	??___fladd
 12537  0A31  0820               	movf	??___fladd,w
 12538  0A32  00FB               	movwf	___fladd@grs
 12539  0A33  0876               	movf	___fladd@a+2,w
 12540  0A34  00A0               	movwf	??___fladd
 12541  0A35  0820               	movf	??___fladd,w
 12542  0A36  00F2               	movwf	___fladd@b+2
 12543  0A37  087B               	movf	___fladd@grs,w
 12544  0A38  00A0               	movwf	??___fladd
 12545  0A39  0820               	movf	??___fladd,w
 12546  0A3A  00F6               	movwf	___fladd@a+2
 12547  0A3B  0873               	movf	___fladd@b+3,w
 12548  0A3C  00A0               	movwf	??___fladd
 12549  0A3D  0820               	movf	??___fladd,w
 12550  0A3E  00FB               	movwf	___fladd@grs
 12551  0A3F  0877               	movf	___fladd@a+3,w
 12552  0A40  00A0               	movwf	??___fladd
 12553  0A41  0820               	movf	??___fladd,w
 12554  0A42  00F3               	movwf	___fladd@b+3
 12555  0A43  087B               	movf	___fladd@grs,w
 12556  0A44  00A0               	movwf	??___fladd
 12557  0A45  0820               	movf	??___fladd,w
 12558  0A46  00F7               	movwf	___fladd@a+3
 12559  0A47                     l3284:	
 12560  0A47  01FB               	clrf	___fladd@grs
 12561  0A48  0879               	movf	___fladd@aexp,w
 12562  0A49  00A0               	movwf	??___fladd
 12563  0A4A  01A1               	clrf	??___fladd+1
 12564  0A4B  0821               	movf	??___fladd+1,w
 12565  0A4C  00A3               	movwf	??___fladd+3
 12566  0A4D  087A               	movf	___fladd@bexp,w
 12567  0A4E  0220               	subwf	??___fladd,w
 12568  0A4F  00A2               	movwf	??___fladd+2
 12569  0A50  1C03               	skipc
 12570  0A51  03A3               	decf	??___fladd+3,f
 12571  0A52  0823               	movf	??___fladd+3,w
 12572  0A53  3A80               	xorlw	128
 12573  0A54  00A4               	movwf	??___fladd+4
 12574  0A55  3080               	movlw	128
 12575  0A56  0224               	subwf	??___fladd+4,w
 12576  0A57  1D03               	skipz
 12577  0A58  2A5B               	goto	u3285
 12578  0A59  301A               	movlw	26
 12579  0A5A  0222               	subwf	??___fladd+2,w
 12580  0A5B                     u3285:	
 12581  0A5B  1C03               	skipc
 12582  0A5C  2A91               	goto	l3302
 12583  0A5D  0873               	movf	___fladd@b+3,w
 12584  0A5E  0472               	iorwf	___fladd@b+2,w
 12585  0A5F  0471               	iorwf	___fladd@b+1,w
 12586  0A60  0470               	iorwf	___fladd@b,w
 12587  0A61  1903               	btfsc	3,2
 12588  0A62  2A65               	goto	u3290
 12589  0A63  3001               	movlw	1
 12590  0A64  2A66               	goto	u3300
 12591  0A65                     u3290:	
 12592  0A65  3000               	movlw	0
 12593  0A66                     u3300:	
 12594  0A66  0020               	movlb	0	; select bank0
 12595  0A67  00A0               	movwf	??___fladd
 12596  0A68  0820               	movf	??___fladd,w
 12597  0A69  00FB               	movwf	___fladd@grs
 12598  0A6A  3000               	movlw	0
 12599  0A6B  00F3               	movwf	___fladd@b+3
 12600  0A6C  3000               	movlw	0
 12601  0A6D  00F2               	movwf	___fladd@b+2
 12602  0A6E  3000               	movlw	0
 12603  0A6F  00F1               	movwf	___fladd@b+1
 12604  0A70  3000               	movlw	0
 12605  0A71  00F0               	movwf	___fladd@b
 12606  0A72  0879               	movf	___fladd@aexp,w
 12607  0A73  00A0               	movwf	??___fladd
 12608  0A74  0820               	movf	??___fladd,w
 12609  0A75  00FA               	movwf	___fladd@bexp
 12610  0A76  2A95               	goto	l1187
 12611  0A77                     l1189:	
 12612  0A77  1C7B               	btfss	___fladd@grs,0
 12613  0A78  2A80               	goto	l3292
 12614  0A79  367B               	lsrf	___fladd@grs,w
 12615  0A7A  3801               	iorlw	1
 12616  0A7B  0020               	movlb	0	; select bank0
 12617  0A7C  00A0               	movwf	??___fladd
 12618  0A7D  0820               	movf	??___fladd,w
 12619  0A7E  00FB               	movwf	___fladd@grs
 12620  0A7F  2A82               	goto	l3294
 12621  0A80                     l3292:	
 12622  0A80  1003               	clrc
 12623  0A81  0CFB               	rrf	___fladd@grs,f
 12624  0A82                     l3294:	
 12625  0A82  1870               	btfsc	___fladd@b,0
 12626  0A83  17FB               	bsf	___fladd@grs,7
 12627  0A84  3001               	movlw	1
 12628  0A85  0020               	movlb	0	; select bank0
 12629  0A86  00A0               	movwf	??___fladd
 12630  0A87                     u3335:	
 12631  0A87  37F3               	asrf	___fladd@b+3,f
 12632  0A88  0CF2               	rrf	___fladd@b+2,f
 12633  0A89  0CF1               	rrf	___fladd@b+1,f
 12634  0A8A  0CF0               	rrf	___fladd@b,f
 12635  0A8B  0BA0               	decfsz	??___fladd& (0+127),f
 12636  0A8C  2A87               	goto	u3335
 12637  0A8D  3001               	movlw	1
 12638  0A8E  00A0               	movwf	??___fladd
 12639  0A8F  0820               	movf	??___fladd,w
 12640  0A90  07FA               	addwf	___fladd@bexp,f
 12641  0A91                     l3302:	
 12642  0A91  0879               	movf	___fladd@aexp,w
 12643  0A92  027A               	subwf	___fladd@bexp,w
 12644  0A93  1C03               	skipc
 12645  0A94  2A77               	goto	l1189
 12646  0A95                     l1187:	
 12647  0A95  1B78               	btfsc	___fladd@signs,6
 12648  0A96  2AC8               	goto	l3328
 12649  0A97  087A               	movf	___fladd@bexp,w
 12650  0A98  1D03               	btfss	3,2
 12651  0A99  2AA3               	goto	l3310
 12652  0A9A  3000               	movlw	0
 12653  0A9B  00F3               	movwf	?___fladd+3
 12654  0A9C  3000               	movlw	0
 12655  0A9D  00F2               	movwf	?___fladd+2
 12656  0A9E  3000               	movlw	0
 12657  0A9F  00F1               	movwf	?___fladd+1
 12658  0AA0  3000               	movlw	0
 12659  0AA1  00F0               	movwf	?___fladd
 12660  0AA2  0008               	return
 12661  0AA3                     l3310:	
 12662  0AA3  0874               	movf	___fladd@a,w
 12663  0AA4  07F0               	addwf	___fladd@b,f
 12664  0AA5  0875               	movf	___fladd@a+1,w
 12665  0AA6  3DF1               	addwfc	___fladd@b+1,f
 12666  0AA7  0876               	movf	___fladd@a+2,w
 12667  0AA8  3DF2               	addwfc	___fladd@b+2,f
 12668  0AA9  0877               	movf	___fladd@a+3,w
 12669  0AAA  3DF3               	addwfc	___fladd@b+3,f
 12670  0AAB  1C73               	btfss	___fladd@b+3,0
 12671  0AAC  2B43               	goto	l3362
 12672  0AAD  1C7B               	btfss	___fladd@grs,0
 12673  0AAE  2AB6               	goto	l3318
 12674  0AAF  367B               	lsrf	___fladd@grs,w
 12675  0AB0  3801               	iorlw	1
 12676  0AB1  0020               	movlb	0	; select bank0
 12677  0AB2  00A0               	movwf	??___fladd
 12678  0AB3  0820               	movf	??___fladd,w
 12679  0AB4  00FB               	movwf	___fladd@grs
 12680  0AB5  2AB8               	goto	l3320
 12681  0AB6                     l3318:	
 12682  0AB6  1003               	clrc
 12683  0AB7  0CFB               	rrf	___fladd@grs,f
 12684  0AB8                     l3320:	
 12685  0AB8  1870               	btfsc	___fladd@b,0
 12686  0AB9  17FB               	bsf	___fladd@grs,7
 12687  0ABA  3001               	movlw	1
 12688  0ABB  0020               	movlb	0	; select bank0
 12689  0ABC  00A0               	movwf	??___fladd
 12690  0ABD                     u3405:	
 12691  0ABD  37F3               	asrf	___fladd@b+3,f
 12692  0ABE  0CF2               	rrf	___fladd@b+2,f
 12693  0ABF  0CF1               	rrf	___fladd@b+1,f
 12694  0AC0  0CF0               	rrf	___fladd@b,f
 12695  0AC1  0BA0               	decfsz	??___fladd& (0+127),f
 12696  0AC2  2ABD               	goto	u3405
 12697  0AC3  3001               	movlw	1
 12698  0AC4  00A0               	movwf	??___fladd
 12699  0AC5  0820               	movf	??___fladd,w
 12700  0AC6  07FA               	addwf	___fladd@bexp,f
 12701  0AC7  2B43               	goto	l3362
 12702  0AC8                     l3328:	
 12703  0AC8  0873               	movf	___fladd@b+3,w
 12704  0AC9  3A80               	xorlw	128
 12705  0ACA  0020               	movlb	0	; select bank0
 12706  0ACB  00A0               	movwf	??___fladd
 12707  0ACC  0877               	movf	___fladd@a+3,w
 12708  0ACD  3A80               	xorlw	128
 12709  0ACE  0220               	subwf	??___fladd,w
 12710  0ACF  1D03               	skipz
 12711  0AD0  2ADB               	goto	u3413
 12712  0AD1  0876               	movf	___fladd@a+2,w
 12713  0AD2  0272               	subwf	___fladd@b+2,w
 12714  0AD3  1D03               	skipz
 12715  0AD4  2ADB               	goto	u3413
 12716  0AD5  0875               	movf	___fladd@a+1,w
 12717  0AD6  0271               	subwf	___fladd@b+1,w
 12718  0AD7  1D03               	skipz
 12719  0AD8  2ADB               	goto	u3413
 12720  0AD9  0874               	movf	___fladd@a,w
 12721  0ADA  0270               	subwf	___fladd@b,w
 12722  0ADB                     u3413:	
 12723  0ADB  1803               	skipnc
 12724  0ADC  2B13               	goto	l3338
 12725  0ADD  30FF               	movlw	255
 12726  0ADE  00A0               	movwf	??___fladd
 12727  0ADF  30FF               	movlw	255
 12728  0AE0  00A1               	movwf	??___fladd+1
 12729  0AE1  30FF               	movlw	255
 12730  0AE2  00A2               	movwf	??___fladd+2
 12731  0AE3  30FF               	movlw	255
 12732  0AE4  00A3               	movwf	??___fladd+3
 12733  0AE5  0870               	movf	___fladd@b,w
 12734  0AE6  0274               	subwf	___fladd@a,w
 12735  0AE7  00A4               	movwf	??___fladd+4
 12736  0AE8  0871               	movf	___fladd@b+1,w
 12737  0AE9  3B75               	subwfb	___fladd@a+1,w
 12738  0AEA  00A5               	movwf	??___fladd+5
 12739  0AEB  0872               	movf	___fladd@b+2,w
 12740  0AEC  3B76               	subwfb	___fladd@a+2,w
 12741  0AED  00A6               	movwf	??___fladd+6
 12742  0AEE  0873               	movf	___fladd@b+3,w
 12743  0AEF  3B77               	subwfb	___fladd@a+3,w
 12744  0AF0  00A7               	movwf	??___fladd+7
 12745  0AF1  0824               	movf	??___fladd+4,w
 12746  0AF2  07A0               	addwf	??___fladd,f
 12747  0AF3  0825               	movf	??___fladd+5,w
 12748  0AF4  3DA1               	addwfc	??___fladd+1,f
 12749  0AF5  0826               	movf	??___fladd+6,w
 12750  0AF6  3DA2               	addwfc	??___fladd+2,f
 12751  0AF7  0827               	movf	??___fladd+7,w
 12752  0AF8  3DA3               	addwfc	??___fladd+3,f
 12753  0AF9  0823               	movf	??___fladd+3,w
 12754  0AFA  00F3               	movwf	___fladd@b+3
 12755  0AFB  0822               	movf	??___fladd+2,w
 12756  0AFC  00F2               	movwf	___fladd@b+2
 12757  0AFD  0821               	movf	??___fladd+1,w
 12758  0AFE  00F1               	movwf	___fladd@b+1
 12759  0AFF  0820               	movf	??___fladd,w
 12760  0B00  00F0               	movwf	___fladd@b
 12761  0B01  3080               	movlw	128
 12762  0B02  00A0               	movwf	??___fladd
 12763  0B03  0820               	movf	??___fladd,w
 12764  0B04  06F8               	xorwf	___fladd@signs,f
 12765  0B05  09FB               	comf	___fladd@grs,f
 12766  0B06  0AFB               	incf	___fladd@grs,f
 12767  0B07  087B               	movf	___fladd@grs,w
 12768  0B08  1D03               	btfss	3,2
 12769  0B09  2B1B               	goto	l1204
 12770  0B0A  3001               	movlw	1
 12771  0B0B  07F0               	addwf	___fladd@b,f
 12772  0B0C  3000               	movlw	0
 12773  0B0D  3DF1               	addwfc	___fladd@b+1,f
 12774  0B0E  3000               	movlw	0
 12775  0B0F  3DF2               	addwfc	___fladd@b+2,f
 12776  0B10  3000               	movlw	0
 12777  0B11  3DF3               	addwfc	___fladd@b+3,f
 12778  0B12  2B1B               	goto	l1204
 12779  0B13                     l3338:	
 12780  0B13  0874               	movf	___fladd@a,w
 12781  0B14  02F0               	subwf	___fladd@b,f
 12782  0B15  0875               	movf	___fladd@a+1,w
 12783  0B16  3BF1               	subwfb	___fladd@b+1,f
 12784  0B17  0876               	movf	___fladd@a+2,w
 12785  0B18  3BF2               	subwfb	___fladd@b+2,f
 12786  0B19  0877               	movf	___fladd@a+3,w
 12787  0B1A  3BF3               	subwfb	___fladd@b+3,f
 12788  0B1B                     l1204:	
 12789  0B1B  0873               	movf	___fladd@b+3,w
 12790  0B1C  0472               	iorwf	___fladd@b+2,w
 12791  0B1D  0471               	iorwf	___fladd@b+1,w
 12792  0B1E  0470               	iorwf	___fladd@b,w
 12793  0B1F  1D03               	skipz
 12794  0B20  2B41               	goto	l3360
 12795  0B21  087B               	movf	___fladd@grs,w
 12796  0B22  1D03               	btfss	3,2
 12797  0B23  2B41               	goto	l3360
 12798  0B24  3000               	movlw	0
 12799  0B25  00F3               	movwf	?___fladd+3
 12800  0B26  3000               	movlw	0
 12801  0B27  00F2               	movwf	?___fladd+2
 12802  0B28  3000               	movlw	0
 12803  0B29  00F1               	movwf	?___fladd+1
 12804  0B2A  3000               	movlw	0
 12805  0B2B  00F0               	movwf	?___fladd
 12806  0B2C  0008               	return
 12807  0B2D                     l3346:	
 12808  0B2D  3001               	movlw	1
 12809  0B2E                     u3455:	
 12810  0B2E  35F0               	lslf	___fladd@b,f
 12811  0B2F  0DF1               	rlf	___fladd@b+1,f
 12812  0B30  0DF2               	rlf	___fladd@b+2,f
 12813  0B31  0DF3               	rlf	___fladd@b+3,f
 12814  0B32  0B89               	decfsz	9,f
 12815  0B33  2B2E               	goto	u3455
 12816  0B34  1BFB               	btfsc	___fladd@grs,7
 12817  0B35  1470               	bsf	___fladd@b,0
 12818  0B36  1C7B               	btfss	___fladd@grs,0
 12819  0B37  2B3A               	goto	l3354
 12820  0B38  1403               	setc
 12821  0B39  2B3B               	goto	L10
 12822  0B3A                     l3354:	
 12823  0B3A  1003               	clrc
 12824  0B3B                     L10:	
 12825  0B3B  0DFB               	rlf	___fladd@grs,f
 12826  0B3C  087A               	movf	___fladd@bexp,w
 12827  0B3D  1903               	btfsc	3,2
 12828  0B3E  2B41               	goto	l3360
 12829  0B3F  3001               	movlw	1
 12830  0B40  02FA               	subwf	___fladd@bexp,f
 12831  0B41                     l3360:	
 12832  0B41  1FF2               	btfss	___fladd@b+2,7
 12833  0B42  2B2D               	goto	l3346
 12834  0B43                     l3362:	
 12835  0B43  01F9               	clrf	___fladd@aexp
 12836  0B44  1FFB               	btfss	___fladd@grs,7
 12837  0B45  2B4E               	goto	l3372
 12838  0B46  087B               	movf	___fladd@grs,w
 12839  0B47  397F               	andlw	127
 12840  0B48  1903               	btfsc	3,2
 12841  0B49  1870               	btfsc	___fladd@b,0
 12842  0B4A  2B4C               	goto	l3368
 12843  0B4B  2B4E               	goto	l3372
 12844  0B4C                     l3368:	
 12845  0B4C  01F9               	clrf	___fladd@aexp
 12846  0B4D  0AF9               	incf	___fladd@aexp,f
 12847  0B4E                     l3372:	
 12848  0B4E  0879               	movf	___fladd@aexp,w
 12849  0B4F  1903               	btfsc	3,2
 12850  0B50  2B7B               	goto	l1217
 12851  0B51  3001               	movlw	1
 12852  0B52  07F0               	addwf	___fladd@b,f
 12853  0B53  3000               	movlw	0
 12854  0B54  3DF1               	addwfc	___fladd@b+1,f
 12855  0B55  3000               	movlw	0
 12856  0B56  3DF2               	addwfc	___fladd@b+2,f
 12857  0B57  3000               	movlw	0
 12858  0B58  3DF3               	addwfc	___fladd@b+3,f
 12859  0B59  1C73               	btfss	___fladd@b+3,0
 12860  0B5A  2B7B               	goto	l1217
 12861  0B5B  0870               	movf	___fladd@b,w
 12862  0B5C  0020               	movlb	0	; select bank0
 12863  0B5D  00A0               	movwf	??___fladd
 12864  0B5E  0871               	movf	___fladd@b+1,w
 12865  0B5F  00A1               	movwf	??___fladd+1
 12866  0B60  0872               	movf	___fladd@b+2,w
 12867  0B61  00A2               	movwf	??___fladd+2
 12868  0B62  0873               	movf	___fladd@b+3,w
 12869  0B63  00A3               	movwf	??___fladd+3
 12870  0B64  3001               	movlw	1
 12871  0B65  00A4               	movwf	??___fladd+4
 12872  0B66                     u3555:	
 12873  0B66  37A3               	asrf	??___fladd+3,f
 12874  0B67  0CA2               	rrf	??___fladd+2,f
 12875  0B68  0CA1               	rrf	??___fladd+1,f
 12876  0B69  0CA0               	rrf	??___fladd,f
 12877  0B6A  0BA4               	decfsz	??___fladd+4,f
 12878  0B6B  2B66               	goto	u3555
 12879  0B6C  0823               	movf	??___fladd+3,w
 12880  0B6D  00F3               	movwf	___fladd@b+3
 12881  0B6E  0822               	movf	??___fladd+2,w
 12882  0B6F  00F2               	movwf	___fladd@b+2
 12883  0B70  0821               	movf	??___fladd+1,w
 12884  0B71  00F1               	movwf	___fladd@b+1
 12885  0B72  0820               	movf	??___fladd,w
 12886  0B73  00F0               	movwf	___fladd@b
 12887  0B74  0A7A               	incf	___fladd@bexp,w
 12888  0B75  1903               	btfsc	3,2
 12889  0B76  2B7B               	goto	l1217
 12890  0B77  3001               	movlw	1
 12891  0B78  00A0               	movwf	??___fladd
 12892  0B79  0820               	movf	??___fladd,w
 12893  0B7A  07FA               	addwf	___fladd@bexp,f
 12894  0B7B                     l1217:	
 12895  0B7B  0A7A               	incf	___fladd@bexp,w
 12896  0B7C  1D03               	btfss	3,2
 12897  0B7D  087A               	movf	___fladd@bexp,w
 12898  0B7E  1D03               	btfss	3,2
 12899  0B7F  2B8B               	goto	l3390
 12900  0B80  3000               	movlw	0
 12901  0B81  00F3               	movwf	___fladd@b+3
 12902  0B82  3000               	movlw	0
 12903  0B83  00F2               	movwf	___fladd@b+2
 12904  0B84  3000               	movlw	0
 12905  0B85  00F1               	movwf	___fladd@b+1
 12906  0B86  3000               	movlw	0
 12907  0B87  00F0               	movwf	___fladd@b
 12908  0B88  087A               	movf	___fladd@bexp,w
 12909  0B89  1903               	btfsc	3,2
 12910  0B8A  01F8               	clrf	___fladd@signs
 12911  0B8B                     l3390:	
 12912  0B8B  1C7A               	btfss	___fladd@bexp,0
 12913  0B8C  2B8F               	goto	l3394
 12914  0B8D  17F2               	bsf	___fladd@b+2,7
 12915  0B8E  2B94               	goto	l1225
 12916  0B8F                     l3394:	
 12917  0B8F  307F               	movlw	127
 12918  0B90  0020               	movlb	0	; select bank0
 12919  0B91  00A0               	movwf	??___fladd
 12920  0B92  0820               	movf	??___fladd,w
 12921  0B93  05F2               	andwf	___fladd@b+2,f
 12922  0B94                     l1225:	
 12923  0B94  367A               	lsrf	___fladd@bexp,w
 12924  0B95  0020               	movlb	0	; select bank0
 12925  0B96  00A0               	movwf	??___fladd
 12926  0B97  0820               	movf	??___fladd,w
 12927  0B98  00F3               	movwf	___fladd@b+3
 12928  0B99  1FF8               	btfss	___fladd@signs,7
 12929  0B9A  0008               	return
 12930  0B9B  17F3               	bsf	___fladd@b+3,7
 12931  0B9C  0008               	return
 12932  0B9D                     __end_of___fladd:	
 12933                           
 12934                           	psect	text37
 12935  1EDA                     __ptext37:	
 12936 ;; *************** function ___flneg *****************
 12937 ;; Defined at:
 12938 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  f1              4    0[COMMON] unsigned char 
 12941 ;; Auto vars:     Size  Location     Type
 12942 ;;		None
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  4    0[COMMON] unsigned char 
 12945 ;; Registers used:
 12946 ;;		wreg
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12952 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12956 ;;Total ram usage:        4 bytes
 12957 ;; Hardware stack levels used:    1
 12958 ;; This function calls:
 12959 ;;		Nothing
 12960 ;; This function is called by:
 12961 ;;		_efgtoa
 12962 ;; This function uses a non-reentrant model
 12963 ;;
 12964                           
 12965                           
 12966                           ;psect for function ___flneg
 12967  1EDA                     ___flneg:	
 12968                           
 12969                           ;incstack = 0
 12970                           ; Regs used in ___flneg: [wreg]
 12971  1EDA  0873               	movf	___flneg@f1+3,w
 12972  1EDB  0472               	iorwf	___flneg@f1+2,w
 12973  1EDC  0471               	iorwf	___flneg@f1+1,w
 12974  1EDD  0470               	iorwf	___flneg@f1,w
 12975  1EDE  1903               	skipnz
 12976  1EDF  0008               	return
 12977  1EE0  3080               	movlw	128
 12978  1EE1  06F3               	xorwf	___flneg@f1+3,f
 12979  1EE2  0008               	return
 12980  1EE3                     __end_of___flneg:	
 12981                           
 12982                           	psect	text38
 12983  0B9D                     __ptext38:	
 12984 ;; *************** function ___flmul *****************
 12985 ;; Defined at:
 12986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 12987 ;; Parameters:    Size  Location     Type
 12988 ;;  b               4   14[BANK0 ] unsigned char 
 12989 ;;  a               4   18[BANK0 ] unsigned char 
 12990 ;; Auto vars:     Size  Location     Type
 12991 ;;  prod            4   34[BANK0 ] struct .
 12992 ;;  grs             4   28[BANK0 ] unsigned long 
 12993 ;;  temp            2   38[BANK0 ] struct .
 12994 ;;  bexp            1   33[BANK0 ] unsigned char 
 12995 ;;  aexp            1   32[BANK0 ] unsigned char 
 12996 ;;  sign            1   27[BANK0 ] unsigned char 
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  4   14[BANK0 ] unsigned char 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0, pclath, cstack
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13006 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13007 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13008 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13009 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13010 ;;Total ram usage:       26 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    1
 13013 ;; This function calls:
 13014 ;;		__Umul8_16
 13015 ;; This function is called by:
 13016 ;;		_echo
 13017 ;;		_efgtoa
 13018 ;; This function uses a non-reentrant model
 13019 ;;
 13020                           
 13021                           
 13022                           ;psect for function ___flmul
 13023  0B9D                     ___flmul:	
 13024                           
 13025                           ;incstack = 0
 13026                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 13027  0B9D  0020               	movlb	0	; select bank0
 13028  0B9E  0831               	movf	___flmul@b+3,w
 13029  0B9F  3980               	andlw	128
 13030  0BA0  00B6               	movwf	??___flmul
 13031  0BA1  0836               	movf	??___flmul,w
 13032  0BA2  00BB               	movwf	___flmul@sign
 13033  0BA3  3531               	lslf	___flmul@b+3,w
 13034  0BA4  00B6               	movwf	??___flmul
 13035  0BA5  0836               	movf	??___flmul,w
 13036  0BA6  00C1               	movwf	___flmul@bexp
 13037  0BA7  1BB0               	btfsc	___flmul@b+2,7
 13038  0BA8  1441               	bsf	___flmul@bexp,0
 13039  0BA9  0841               	movf	___flmul@bexp,w
 13040  0BAA  1903               	btfsc	3,2
 13041  0BAB  2BB9               	goto	l3894
 13042  0BAC  0A41               	incf	___flmul@bexp,w
 13043  0BAD  1D03               	btfss	3,2
 13044  0BAE  2BB7               	goto	l3892
 13045  0BAF  3000               	movlw	0
 13046  0BB0  00B1               	movwf	___flmul@b+3
 13047  0BB1  3000               	movlw	0
 13048  0BB2  00B0               	movwf	___flmul@b+2
 13049  0BB3  3000               	movlw	0
 13050  0BB4  00AF               	movwf	___flmul@b+1
 13051  0BB5  3000               	movlw	0
 13052  0BB6  00AE               	movwf	___flmul@b
 13053  0BB7                     l3892:	
 13054  0BB7  17B0               	bsf	___flmul@b+2,7
 13055  0BB8  2BC1               	goto	l3896
 13056  0BB9                     l3894:	
 13057  0BB9  3000               	movlw	0
 13058  0BBA  00B1               	movwf	___flmul@b+3
 13059  0BBB  3000               	movlw	0
 13060  0BBC  00B0               	movwf	___flmul@b+2
 13061  0BBD  3000               	movlw	0
 13062  0BBE  00AF               	movwf	___flmul@b+1
 13063  0BBF  3000               	movlw	0
 13064  0BC0  00AE               	movwf	___flmul@b
 13065  0BC1                     l3896:	
 13066  0BC1  0835               	movf	___flmul@a+3,w
 13067  0BC2  3980               	andlw	128
 13068  0BC3  00B6               	movwf	??___flmul
 13069  0BC4  0836               	movf	??___flmul,w
 13070  0BC5  06BB               	xorwf	___flmul@sign,f
 13071  0BC6  3535               	lslf	___flmul@a+3,w
 13072  0BC7  00B6               	movwf	??___flmul
 13073  0BC8  0836               	movf	??___flmul,w
 13074  0BC9  00C0               	movwf	___flmul@aexp
 13075  0BCA  1BB4               	btfsc	___flmul@a+2,7
 13076  0BCB  1440               	bsf	___flmul@aexp,0
 13077  0BCC  0840               	movf	___flmul@aexp,w
 13078  0BCD  1903               	btfsc	3,2
 13079  0BCE  2BDC               	goto	l3912
 13080  0BCF  0A40               	incf	___flmul@aexp,w
 13081  0BD0  1D03               	btfss	3,2
 13082  0BD1  2BDA               	goto	l3910
 13083  0BD2  3000               	movlw	0
 13084  0BD3  00B5               	movwf	___flmul@a+3
 13085  0BD4  3000               	movlw	0
 13086  0BD5  00B4               	movwf	___flmul@a+2
 13087  0BD6  3000               	movlw	0
 13088  0BD7  00B3               	movwf	___flmul@a+1
 13089  0BD8  3000               	movlw	0
 13090  0BD9  00B2               	movwf	___flmul@a
 13091  0BDA                     l3910:	
 13092  0BDA  17B4               	bsf	___flmul@a+2,7
 13093  0BDB  2BE4               	goto	l3914
 13094  0BDC                     l3912:	
 13095  0BDC  3000               	movlw	0
 13096  0BDD  00B5               	movwf	___flmul@a+3
 13097  0BDE  3000               	movlw	0
 13098  0BDF  00B4               	movwf	___flmul@a+2
 13099  0BE0  3000               	movlw	0
 13100  0BE1  00B3               	movwf	___flmul@a+1
 13101  0BE2  3000               	movlw	0
 13102  0BE3  00B2               	movwf	___flmul@a
 13103  0BE4                     l3914:	
 13104  0BE4  0840               	movf	___flmul@aexp,w
 13105  0BE5  1D03               	btfss	3,2
 13106  0BE6  0841               	movf	___flmul@bexp,w
 13107  0BE7  1D03               	btfss	3,2
 13108  0BE8  2BF2               	goto	l3922
 13109  0BE9  3000               	movlw	0
 13110  0BEA  00B1               	movwf	?___flmul+3
 13111  0BEB  3000               	movlw	0
 13112  0BEC  00B0               	movwf	?___flmul+2
 13113  0BED  3000               	movlw	0
 13114  0BEE  00AF               	movwf	?___flmul+1
 13115  0BEF  3000               	movlw	0
 13116  0BF0  00AE               	movwf	?___flmul
 13117  0BF1  0008               	return
 13118  0BF2                     l3922:	
 13119  0BF2  082E               	movf	___flmul@b,w
 13120  0BF3  00B6               	movwf	??___flmul
 13121  0BF4  0836               	movf	??___flmul,w
 13122  0BF5  00F0               	movwf	__Umul8_16@multiplicand
 13123  0BF6  0834               	movf	___flmul@a+2,w
 13124  0BF7  319F  27E1  318B   	fcall	__Umul8_16
 13125  0BFA  0871               	movf	?__Umul8_16+1,w
 13126  0BFB  0020               	movlb	0	; select bank0
 13127  0BFC  00C7               	movwf	___flmul@temp+1
 13128  0BFD  0870               	movf	?__Umul8_16,w
 13129  0BFE  00C6               	movwf	___flmul@temp
 13130  0BFF  0846               	movf	___flmul@temp,w
 13131  0C00  00B6               	movwf	??___flmul
 13132  0C01  01B7               	clrf	??___flmul+1
 13133  0C02  01B8               	clrf	??___flmul+2
 13134  0C03  01B9               	clrf	??___flmul+3
 13135  0C04  0839               	movf	??___flmul+3,w
 13136  0C05  00BF               	movwf	___flmul@grs+3
 13137  0C06  0838               	movf	??___flmul+2,w
 13138  0C07  00BE               	movwf	___flmul@grs+2
 13139  0C08  0837               	movf	??___flmul+1,w
 13140  0C09  00BD               	movwf	___flmul@grs+1
 13141  0C0A  0836               	movf	??___flmul,w
 13142  0C0B  00BC               	movwf	___flmul@grs
 13143  0C0C  0847               	movf	___flmul@temp+1,w
 13144  0C0D  00B6               	movwf	??___flmul
 13145  0C0E  01B7               	clrf	??___flmul+1
 13146  0C0F  01B8               	clrf	??___flmul+2
 13147  0C10  01B9               	clrf	??___flmul+3
 13148  0C11  0839               	movf	??___flmul+3,w
 13149  0C12  00C5               	movwf	___flmul@prod+3
 13150  0C13  0838               	movf	??___flmul+2,w
 13151  0C14  00C4               	movwf	___flmul@prod+2
 13152  0C15  0837               	movf	??___flmul+1,w
 13153  0C16  00C3               	movwf	___flmul@prod+1
 13154  0C17  0836               	movf	??___flmul,w
 13155  0C18  00C2               	movwf	___flmul@prod
 13156  0C19  082F               	movf	___flmul@b+1,w
 13157  0C1A  00B6               	movwf	??___flmul
 13158  0C1B  0836               	movf	??___flmul,w
 13159  0C1C  00F0               	movwf	__Umul8_16@multiplicand
 13160  0C1D  0833               	movf	___flmul@a+1,w
 13161  0C1E  319F  27E1  318B   	fcall	__Umul8_16
 13162  0C21  0871               	movf	?__Umul8_16+1,w
 13163  0C22  0020               	movlb	0	; select bank0
 13164  0C23  00C7               	movwf	___flmul@temp+1
 13165  0C24  0870               	movf	?__Umul8_16,w
 13166  0C25  00C6               	movwf	___flmul@temp
 13167  0C26  0846               	movf	___flmul@temp,w
 13168  0C27  00B6               	movwf	??___flmul
 13169  0C28  01B7               	clrf	??___flmul+1
 13170  0C29  01B8               	clrf	??___flmul+2
 13171  0C2A  01B9               	clrf	??___flmul+3
 13172  0C2B  0836               	movf	??___flmul,w
 13173  0C2C  07BC               	addwf	___flmul@grs,f
 13174  0C2D  0837               	movf	??___flmul+1,w
 13175  0C2E  3DBD               	addwfc	___flmul@grs+1,f
 13176  0C2F  0838               	movf	??___flmul+2,w
 13177  0C30  3DBE               	addwfc	___flmul@grs+2,f
 13178  0C31  0839               	movf	??___flmul+3,w
 13179  0C32  3DBF               	addwfc	___flmul@grs+3,f
 13180  0C33  0847               	movf	___flmul@temp+1,w
 13181  0C34  00B6               	movwf	??___flmul
 13182  0C35  01B7               	clrf	??___flmul+1
 13183  0C36  01B8               	clrf	??___flmul+2
 13184  0C37  01B9               	clrf	??___flmul+3
 13185  0C38  0836               	movf	??___flmul,w
 13186  0C39  07C2               	addwf	___flmul@prod,f
 13187  0C3A  0837               	movf	??___flmul+1,w
 13188  0C3B  3DC3               	addwfc	___flmul@prod+1,f
 13189  0C3C  0838               	movf	??___flmul+2,w
 13190  0C3D  3DC4               	addwfc	___flmul@prod+2,f
 13191  0C3E  0839               	movf	??___flmul+3,w
 13192  0C3F  3DC5               	addwfc	___flmul@prod+3,f
 13193  0C40  0830               	movf	___flmul@b+2,w
 13194  0C41  00B6               	movwf	??___flmul
 13195  0C42  0836               	movf	??___flmul,w
 13196  0C43  00F0               	movwf	__Umul8_16@multiplicand
 13197  0C44  0832               	movf	___flmul@a,w
 13198  0C45  319F  27E1  318B   	fcall	__Umul8_16
 13199  0C48  0871               	movf	?__Umul8_16+1,w
 13200  0C49  0020               	movlb	0	; select bank0
 13201  0C4A  00C7               	movwf	___flmul@temp+1
 13202  0C4B  0870               	movf	?__Umul8_16,w
 13203  0C4C  00C6               	movwf	___flmul@temp
 13204  0C4D  0846               	movf	___flmul@temp,w
 13205  0C4E  00B6               	movwf	??___flmul
 13206  0C4F  01B7               	clrf	??___flmul+1
 13207  0C50  01B8               	clrf	??___flmul+2
 13208  0C51  01B9               	clrf	??___flmul+3
 13209  0C52  0836               	movf	??___flmul,w
 13210  0C53  07BC               	addwf	___flmul@grs,f
 13211  0C54  0837               	movf	??___flmul+1,w
 13212  0C55  3DBD               	addwfc	___flmul@grs+1,f
 13213  0C56  0838               	movf	??___flmul+2,w
 13214  0C57  3DBE               	addwfc	___flmul@grs+2,f
 13215  0C58  0839               	movf	??___flmul+3,w
 13216  0C59  3DBF               	addwfc	___flmul@grs+3,f
 13217  0C5A  0847               	movf	___flmul@temp+1,w
 13218  0C5B  00B6               	movwf	??___flmul
 13219  0C5C  01B7               	clrf	??___flmul+1
 13220  0C5D  01B8               	clrf	??___flmul+2
 13221  0C5E  01B9               	clrf	??___flmul+3
 13222  0C5F  0836               	movf	??___flmul,w
 13223  0C60  07C2               	addwf	___flmul@prod,f
 13224  0C61  0837               	movf	??___flmul+1,w
 13225  0C62  3DC3               	addwfc	___flmul@prod+1,f
 13226  0C63  0838               	movf	??___flmul+2,w
 13227  0C64  3DC4               	addwfc	___flmul@prod+2,f
 13228  0C65  0839               	movf	??___flmul+3,w
 13229  0C66  3DC5               	addwfc	___flmul@prod+3,f
 13230  0C67  3008               	movlw	8
 13231  0C68                     u4895:	
 13232  0C68  35BC               	lslf	___flmul@grs,f
 13233  0C69  0DBD               	rlf	___flmul@grs+1,f
 13234  0C6A  0DBE               	rlf	___flmul@grs+2,f
 13235  0C6B  0DBF               	rlf	___flmul@grs+3,f
 13236  0C6C  0B89               	decfsz	9,f
 13237  0C6D  2C68               	goto	u4895
 13238  0C6E  082F               	movf	___flmul@b+1,w
 13239  0C6F  00B6               	movwf	??___flmul
 13240  0C70  0836               	movf	??___flmul,w
 13241  0C71  00F0               	movwf	__Umul8_16@multiplicand
 13242  0C72  0832               	movf	___flmul@a,w
 13243  0C73  319F  27E1  318B   	fcall	__Umul8_16
 13244  0C76  0871               	movf	?__Umul8_16+1,w
 13245  0C77  0020               	movlb	0	; select bank0
 13246  0C78  00C7               	movwf	___flmul@temp+1
 13247  0C79  0870               	movf	?__Umul8_16,w
 13248  0C7A  00C6               	movwf	___flmul@temp
 13249  0C7B  0846               	movf	___flmul@temp,w
 13250  0C7C  07BC               	addwf	___flmul@grs,f
 13251  0C7D  0847               	movf	___flmul@temp+1,w
 13252  0C7E  3DBD               	addwfc	___flmul@grs+1,f
 13253  0C7F  3000               	movlw	0
 13254  0C80  3DBE               	addwfc	___flmul@grs+2,f
 13255  0C81  3DBF               	addwfc	___flmul@grs+3,f
 13256  0C82  082E               	movf	___flmul@b,w
 13257  0C83  00B6               	movwf	??___flmul
 13258  0C84  0836               	movf	??___flmul,w
 13259  0C85  00F0               	movwf	__Umul8_16@multiplicand
 13260  0C86  0833               	movf	___flmul@a+1,w
 13261  0C87  319F  27E1  318B   	fcall	__Umul8_16
 13262  0C8A  0871               	movf	?__Umul8_16+1,w
 13263  0C8B  0020               	movlb	0	; select bank0
 13264  0C8C  00C7               	movwf	___flmul@temp+1
 13265  0C8D  0870               	movf	?__Umul8_16,w
 13266  0C8E  00C6               	movwf	___flmul@temp
 13267  0C8F  0846               	movf	___flmul@temp,w
 13268  0C90  07BC               	addwf	___flmul@grs,f
 13269  0C91  0847               	movf	___flmul@temp+1,w
 13270  0C92  3DBD               	addwfc	___flmul@grs+1,f
 13271  0C93  3000               	movlw	0
 13272  0C94  3DBE               	addwfc	___flmul@grs+2,f
 13273  0C95  3DBF               	addwfc	___flmul@grs+3,f
 13274  0C96  3008               	movlw	8
 13275  0C97                     u4905:	
 13276  0C97  35BC               	lslf	___flmul@grs,f
 13277  0C98  0DBD               	rlf	___flmul@grs+1,f
 13278  0C99  0DBE               	rlf	___flmul@grs+2,f
 13279  0C9A  0DBF               	rlf	___flmul@grs+3,f
 13280  0C9B  0B89               	decfsz	9,f
 13281  0C9C  2C97               	goto	u4905
 13282  0C9D  082E               	movf	___flmul@b,w
 13283  0C9E  00B6               	movwf	??___flmul
 13284  0C9F  0836               	movf	??___flmul,w
 13285  0CA0  00F0               	movwf	__Umul8_16@multiplicand
 13286  0CA1  0832               	movf	___flmul@a,w
 13287  0CA2  319F  27E1  318B   	fcall	__Umul8_16
 13288  0CA5  0871               	movf	?__Umul8_16+1,w
 13289  0CA6  0020               	movlb	0	; select bank0
 13290  0CA7  00C7               	movwf	___flmul@temp+1
 13291  0CA8  0870               	movf	?__Umul8_16,w
 13292  0CA9  00C6               	movwf	___flmul@temp
 13293  0CAA  0846               	movf	___flmul@temp,w
 13294  0CAB  07BC               	addwf	___flmul@grs,f
 13295  0CAC  0847               	movf	___flmul@temp+1,w
 13296  0CAD  3DBD               	addwfc	___flmul@grs+1,f
 13297  0CAE  3000               	movlw	0
 13298  0CAF  3DBE               	addwfc	___flmul@grs+2,f
 13299  0CB0  3DBF               	addwfc	___flmul@grs+3,f
 13300  0CB1  082F               	movf	___flmul@b+1,w
 13301  0CB2  00B6               	movwf	??___flmul
 13302  0CB3  0836               	movf	??___flmul,w
 13303  0CB4  00F0               	movwf	__Umul8_16@multiplicand
 13304  0CB5  0834               	movf	___flmul@a+2,w
 13305  0CB6  319F  27E1  318B   	fcall	__Umul8_16
 13306  0CB9  0871               	movf	?__Umul8_16+1,w
 13307  0CBA  0020               	movlb	0	; select bank0
 13308  0CBB  00C7               	movwf	___flmul@temp+1
 13309  0CBC  0870               	movf	?__Umul8_16,w
 13310  0CBD  00C6               	movwf	___flmul@temp
 13311  0CBE  0846               	movf	___flmul@temp,w
 13312  0CBF  07C2               	addwf	___flmul@prod,f
 13313  0CC0  0847               	movf	___flmul@temp+1,w
 13314  0CC1  3DC3               	addwfc	___flmul@prod+1,f
 13315  0CC2  3000               	movlw	0
 13316  0CC3  3DC4               	addwfc	___flmul@prod+2,f
 13317  0CC4  3DC5               	addwfc	___flmul@prod+3,f
 13318  0CC5  0830               	movf	___flmul@b+2,w
 13319  0CC6  00B6               	movwf	??___flmul
 13320  0CC7  0836               	movf	??___flmul,w
 13321  0CC8  00F0               	movwf	__Umul8_16@multiplicand
 13322  0CC9  0833               	movf	___flmul@a+1,w
 13323  0CCA  319F  27E1  318B   	fcall	__Umul8_16
 13324  0CCD  0871               	movf	?__Umul8_16+1,w
 13325  0CCE  0020               	movlb	0	; select bank0
 13326  0CCF  00C7               	movwf	___flmul@temp+1
 13327  0CD0  0870               	movf	?__Umul8_16,w
 13328  0CD1  00C6               	movwf	___flmul@temp
 13329  0CD2  0846               	movf	___flmul@temp,w
 13330  0CD3  07C2               	addwf	___flmul@prod,f
 13331  0CD4  0847               	movf	___flmul@temp+1,w
 13332  0CD5  3DC3               	addwfc	___flmul@prod+1,f
 13333  0CD6  3000               	movlw	0
 13334  0CD7  3DC4               	addwfc	___flmul@prod+2,f
 13335  0CD8  3DC5               	addwfc	___flmul@prod+3,f
 13336  0CD9  0830               	movf	___flmul@b+2,w
 13337  0CDA  00B6               	movwf	??___flmul
 13338  0CDB  0836               	movf	??___flmul,w
 13339  0CDC  00F0               	movwf	__Umul8_16@multiplicand
 13340  0CDD  0834               	movf	___flmul@a+2,w
 13341  0CDE  319F  27E1  318B   	fcall	__Umul8_16
 13342  0CE1  0871               	movf	?__Umul8_16+1,w
 13343  0CE2  0020               	movlb	0	; select bank0
 13344  0CE3  00C7               	movwf	___flmul@temp+1
 13345  0CE4  0870               	movf	?__Umul8_16,w
 13346  0CE5  00C6               	movwf	___flmul@temp
 13347  0CE6  0846               	movf	___flmul@temp,w
 13348  0CE7  00B6               	movwf	??___flmul
 13349  0CE8  0847               	movf	___flmul@temp+1,w
 13350  0CE9  00B7               	movwf	??___flmul+1
 13351  0CEA  01B8               	clrf	??___flmul+2
 13352  0CEB  01B9               	clrf	??___flmul+3
 13353  0CEC  3008               	movlw	8
 13354  0CED                     u4915:	
 13355  0CED  35B6               	lslf	??___flmul,f
 13356  0CEE  0DB7               	rlf	??___flmul+1,f
 13357  0CEF  0DB8               	rlf	??___flmul+2,f
 13358  0CF0  0DB9               	rlf	??___flmul+3,f
 13359  0CF1  0B89               	decfsz	9,f
 13360  0CF2  2CED               	goto	u4915
 13361  0CF3  0836               	movf	??___flmul,w
 13362  0CF4  07C2               	addwf	___flmul@prod,f
 13363  0CF5  0837               	movf	??___flmul+1,w
 13364  0CF6  3DC3               	addwfc	___flmul@prod+1,f
 13365  0CF7  0838               	movf	??___flmul+2,w
 13366  0CF8  3DC4               	addwfc	___flmul@prod+2,f
 13367  0CF9  0839               	movf	??___flmul+3,w
 13368  0CFA  3DC5               	addwfc	___flmul@prod+3,f
 13369  0CFB  083C               	movf	___flmul@grs,w
 13370  0CFC  00B6               	movwf	??___flmul
 13371  0CFD  083D               	movf	___flmul@grs+1,w
 13372  0CFE  00B7               	movwf	??___flmul+1
 13373  0CFF  083E               	movf	___flmul@grs+2,w
 13374  0D00  00B8               	movwf	??___flmul+2
 13375  0D01  083F               	movf	___flmul@grs+3,w
 13376  0D02  00B9               	movwf	??___flmul+3
 13377  0D03  3018               	movlw	24
 13378  0D04                     u4925:	
 13379  0D04  36B9               	lsrf	??___flmul+3,f
 13380  0D05  0CB8               	rrf	??___flmul+2,f
 13381  0D06  0CB7               	rrf	??___flmul+1,f
 13382  0D07  0CB6               	rrf	??___flmul,f
 13383  0D08  0B89               	decfsz	9,f
 13384  0D09  2D04               	goto	u4925
 13385  0D0A  0836               	movf	??___flmul,w
 13386  0D0B  07C2               	addwf	___flmul@prod,f
 13387  0D0C  0837               	movf	??___flmul+1,w
 13388  0D0D  3DC3               	addwfc	___flmul@prod+1,f
 13389  0D0E  0838               	movf	??___flmul+2,w
 13390  0D0F  3DC4               	addwfc	___flmul@prod+2,f
 13391  0D10  0839               	movf	??___flmul+3,w
 13392  0D11  3DC5               	addwfc	___flmul@prod+3,f
 13393  0D12  3008               	movlw	8
 13394  0D13                     u4935:	
 13395  0D13  35BC               	lslf	___flmul@grs,f
 13396  0D14  0DBD               	rlf	___flmul@grs+1,f
 13397  0D15  0DBE               	rlf	___flmul@grs+2,f
 13398  0D16  0DBF               	rlf	___flmul@grs+3,f
 13399  0D17  0B89               	decfsz	9,f
 13400  0D18  2D13               	goto	u4935
 13401  0D19  0841               	movf	___flmul@bexp,w
 13402  0D1A  0740               	addwf	___flmul@aexp,w
 13403  0D1B  00B6               	movwf	??___flmul
 13404  0D1C  01B7               	clrf	??___flmul+1
 13405  0D1D  0DB7               	rlf	??___flmul+1,f
 13406  0D1E  0836               	movf	??___flmul,w
 13407  0D1F  3E82               	addlw	130
 13408  0D20  00C6               	movwf	___flmul@temp
 13409  0D21  30FF               	movlw	255
 13410  0D22  3D37               	addwfc	??___flmul+1,w
 13411  0D23  00C7               	movwf	___flmul@temp+1
 13412  0D24                     l3974:	
 13413  0D24  1BC4               	btfsc	___flmul@prod+2,7
 13414  0D25  2D3B               	goto	l3976
 13415  0D26  3001               	movlw	1
 13416  0D27                     u4945:	
 13417  0D27  35C2               	lslf	___flmul@prod,f
 13418  0D28  0DC3               	rlf	___flmul@prod+1,f
 13419  0D29  0DC4               	rlf	___flmul@prod+2,f
 13420  0D2A  0DC5               	rlf	___flmul@prod+3,f
 13421  0D2B  0B89               	decfsz	9,f
 13422  0D2C  2D27               	goto	u4945
 13423  0D2D  1BBF               	btfsc	___flmul@grs+3,7
 13424  0D2E  1442               	bsf	___flmul@prod,0
 13425  0D2F  3001               	movlw	1
 13426  0D30                     u4965:	
 13427  0D30  35BC               	lslf	___flmul@grs,f
 13428  0D31  0DBD               	rlf	___flmul@grs+1,f
 13429  0D32  0DBE               	rlf	___flmul@grs+2,f
 13430  0D33  0DBF               	rlf	___flmul@grs+3,f
 13431  0D34  0B89               	decfsz	9,f
 13432  0D35  2D30               	goto	u4965
 13433  0D36  30FF               	movlw	255
 13434  0D37  07C6               	addwf	___flmul@temp,f
 13435  0D38  30FF               	movlw	255
 13436  0D39  3DC7               	addwfc	___flmul@temp+1,f
 13437  0D3A  2D24               	goto	l3974
 13438  0D3B                     l3976:	
 13439  0D3B  01C0               	clrf	___flmul@aexp
 13440  0D3C  1FBF               	btfss	___flmul@grs+3,7
 13441  0D3D  2D54               	goto	l3986
 13442  0D3E  30FF               	movlw	255
 13443  0D3F  053C               	andwf	___flmul@grs,w
 13444  0D40  00B6               	movwf	??___flmul
 13445  0D41  30FF               	movlw	255
 13446  0D42  053D               	andwf	___flmul@grs+1,w
 13447  0D43  00B7               	movwf	??___flmul+1
 13448  0D44  30FF               	movlw	255
 13449  0D45  053E               	andwf	___flmul@grs+2,w
 13450  0D46  00B8               	movwf	??___flmul+2
 13451  0D47  307F               	movlw	127
 13452  0D48  053F               	andwf	___flmul@grs+3,w
 13453  0D49  00B9               	movwf	??___flmul+3
 13454  0D4A  0839               	movf	??___flmul+3,w
 13455  0D4B  0438               	iorwf	??___flmul+2,w
 13456  0D4C  0437               	iorwf	??___flmul+1,w
 13457  0D4D  0436               	iorwf	??___flmul,w
 13458  0D4E  1903               	skipnz
 13459  0D4F  1842               	btfsc	___flmul@prod,0
 13460  0D50  2D52               	goto	l3982
 13461  0D51  2D54               	goto	l3986
 13462  0D52                     l3982:	
 13463  0D52  01C0               	clrf	___flmul@aexp
 13464  0D53  0AC0               	incf	___flmul@aexp,f
 13465  0D54                     l3986:	
 13466  0D54  0840               	movf	___flmul@aexp,w
 13467  0D55  1903               	btfsc	3,2
 13468  0D56  2D7D               	goto	l3996
 13469  0D57  3001               	movlw	1
 13470  0D58  07C2               	addwf	___flmul@prod,f
 13471  0D59  3000               	movlw	0
 13472  0D5A  3DC3               	addwfc	___flmul@prod+1,f
 13473  0D5B  3000               	movlw	0
 13474  0D5C  3DC4               	addwfc	___flmul@prod+2,f
 13475  0D5D  3000               	movlw	0
 13476  0D5E  3DC5               	addwfc	___flmul@prod+3,f
 13477  0D5F  1C45               	btfss	___flmul@prod+3,0
 13478  0D60  2D7D               	goto	l3996
 13479  0D61  0842               	movf	___flmul@prod,w
 13480  0D62  00B6               	movwf	??___flmul
 13481  0D63  0843               	movf	___flmul@prod+1,w
 13482  0D64  00B7               	movwf	??___flmul+1
 13483  0D65  0844               	movf	___flmul@prod+2,w
 13484  0D66  00B8               	movwf	??___flmul+2
 13485  0D67  0845               	movf	___flmul@prod+3,w
 13486  0D68  00B9               	movwf	??___flmul+3
 13487  0D69  3001               	movlw	1
 13488  0D6A  00BA               	movwf	??___flmul+4
 13489  0D6B                     u5035:	
 13490  0D6B  37B9               	asrf	??___flmul+3,f
 13491  0D6C  0CB8               	rrf	??___flmul+2,f
 13492  0D6D  0CB7               	rrf	??___flmul+1,f
 13493  0D6E  0CB6               	rrf	??___flmul,f
 13494  0D6F  0BBA               	decfsz	??___flmul+4,f
 13495  0D70  2D6B               	goto	u5035
 13496  0D71  0839               	movf	??___flmul+3,w
 13497  0D72  00C5               	movwf	___flmul@prod+3
 13498  0D73  0838               	movf	??___flmul+2,w
 13499  0D74  00C4               	movwf	___flmul@prod+2
 13500  0D75  0837               	movf	??___flmul+1,w
 13501  0D76  00C3               	movwf	___flmul@prod+1
 13502  0D77  0836               	movf	??___flmul,w
 13503  0D78  00C2               	movwf	___flmul@prod
 13504  0D79  3001               	movlw	1
 13505  0D7A  07C6               	addwf	___flmul@temp,f
 13506  0D7B  3000               	movlw	0
 13507  0D7C  3DC7               	addwfc	___flmul@temp+1,f
 13508  0D7D                     l3996:	
 13509  0D7D  0847               	movf	___flmul@temp+1,w
 13510  0D7E  3A80               	xorlw	128
 13511  0D7F  00B6               	movwf	??___flmul
 13512  0D80  3080               	movlw	128
 13513  0D81  0236               	subwf	??___flmul,w
 13514  0D82  1D03               	skipz
 13515  0D83  2D86               	goto	u5045
 13516  0D84  30FF               	movlw	255
 13517  0D85  0246               	subwf	___flmul@temp,w
 13518  0D86                     u5045:	
 13519  0D86  1C03               	skipc
 13520  0D87  2D92               	goto	l4000
 13521  0D88  307F               	movlw	127
 13522  0D89  0020               	movlb	0	; select bank0
 13523  0D8A  00C5               	movwf	___flmul@prod+3
 13524  0D8B  3080               	movlw	128
 13525  0D8C  00C4               	movwf	___flmul@prod+2
 13526  0D8D  3000               	movlw	0
 13527  0D8E  00C3               	movwf	___flmul@prod+1
 13528  0D8F  3000               	movlw	0
 13529  0D90  00C2               	movwf	___flmul@prod
 13530  0D91  2DBC               	goto	l1291
 13531  0D92                     l4000:	
 13532  0D92  0020               	movlb	0	; select bank0
 13533  0D93  0847               	movf	___flmul@temp+1,w
 13534  0D94  3A80               	xorlw	128
 13535  0D95  00B6               	movwf	??___flmul
 13536  0D96  3080               	movlw	128
 13537  0D97  0236               	subwf	??___flmul,w
 13538  0D98  1D03               	skipz
 13539  0D99  2D9C               	goto	u5055
 13540  0D9A  3001               	movlw	1
 13541  0D9B  0246               	subwf	___flmul@temp,w
 13542  0D9C                     u5055:	
 13543  0D9C  1803               	skipnc
 13544  0D9D  2DA9               	goto	l4006
 13545  0D9E  3000               	movlw	0
 13546  0D9F  0020               	movlb	0	; select bank0
 13547  0DA0  00C5               	movwf	___flmul@prod+3
 13548  0DA1  3000               	movlw	0
 13549  0DA2  00C4               	movwf	___flmul@prod+2
 13550  0DA3  3000               	movlw	0
 13551  0DA4  00C3               	movwf	___flmul@prod+1
 13552  0DA5  3000               	movlw	0
 13553  0DA6  00C2               	movwf	___flmul@prod
 13554  0DA7  01BB               	clrf	___flmul@sign
 13555  0DA8  2DBC               	goto	l1291
 13556  0DA9                     l4006:	
 13557  0DA9  0020               	movlb	0	; select bank0
 13558  0DAA  0846               	movf	___flmul@temp,w
 13559  0DAB  00B6               	movwf	??___flmul
 13560  0DAC  0836               	movf	??___flmul,w
 13561  0DAD  00C1               	movwf	___flmul@bexp
 13562  0DAE  30FF               	movlw	255
 13563  0DAF  05C2               	andwf	___flmul@prod,f
 13564  0DB0  30FF               	movlw	255
 13565  0DB1  05C3               	andwf	___flmul@prod+1,f
 13566  0DB2  307F               	movlw	127
 13567  0DB3  05C4               	andwf	___flmul@prod+2,f
 13568  0DB4  3000               	movlw	0
 13569  0DB5  05C5               	andwf	___flmul@prod+3,f
 13570  0DB6  1841               	btfsc	___flmul@bexp,0
 13571  0DB7  17C4               	bsf	___flmul@prod+2,7
 13572  0DB8  3641               	lsrf	___flmul@bexp,w
 13573  0DB9  00B6               	movwf	??___flmul
 13574  0DBA  0836               	movf	??___flmul,w
 13575  0DBB  00C5               	movwf	___flmul@prod+3
 13576  0DBC                     l1291:	
 13577  0DBC  083B               	movf	___flmul@sign,w
 13578  0DBD  00B6               	movwf	??___flmul
 13579  0DBE  0836               	movf	??___flmul,w
 13580  0DBF  04C5               	iorwf	___flmul@prod+3,f
 13581  0DC0  0845               	movf	___flmul@prod+3,w
 13582  0DC1  00B1               	movwf	?___flmul+3
 13583  0DC2  0844               	movf	___flmul@prod+2,w
 13584  0DC3  00B0               	movwf	?___flmul+2
 13585  0DC4  0843               	movf	___flmul@prod+1,w
 13586  0DC5  00AF               	movwf	?___flmul+1
 13587  0DC6  0842               	movf	___flmul@prod,w
 13588  0DC7  00AE               	movwf	?___flmul
 13589  0DC8  0008               	return
 13590  0DC9                     __end_of___flmul:	
 13591                           
 13592                           	psect	text39
 13593  1FE1                     __ptext39:	
 13594 ;; *************** function __Umul8_16 *****************
 13595 ;; Defined at:
 13596 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 13597 ;; Parameters:    Size  Location     Type
 13598 ;;  multiplier      1    wreg     unsigned char 
 13599 ;;  multiplicand    1    0[COMMON] unsigned char 
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;  multiplier      1    8[COMMON] unsigned char 
 13602 ;;  word_mpld       2    6[COMMON] unsigned int 
 13603 ;;  product         2    4[COMMON] unsigned int 
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  2    0[COMMON] unsigned int 
 13606 ;; Registers used:
 13607 ;;		wreg, status,2, status,0
 13608 ;; Tracked objects:
 13609 ;;		On entry : 0/0
 13610 ;;		On exit  : 0/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13614 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13616 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13617 ;;Total ram usage:        9 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; This function calls:
 13620 ;;		Nothing
 13621 ;; This function is called by:
 13622 ;;		___flmul
 13623 ;; This function uses a non-reentrant model
 13624 ;;
 13625                           
 13626                           
 13627                           ;psect for function __Umul8_16
 13628  1FE1                     __Umul8_16:	
 13629                           
 13630                           ;incstack = 0
 13631                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 13632                           ;__Umul8_16@multiplier stored from wreg
 13633  1FE1  00F8               	movwf	__Umul8_16@multiplier
 13634  1FE2  01F4               	clrf	__Umul8_16@product
 13635  1FE3  01F5               	clrf	__Umul8_16@product+1
 13636  1FE4  0870               	movf	__Umul8_16@multiplicand,w
 13637  1FE5  00F2               	movwf	??__Umul8_16
 13638  1FE6  01F3               	clrf	??__Umul8_16+1
 13639  1FE7  0872               	movf	??__Umul8_16,w
 13640  1FE8  00F6               	movwf	__Umul8_16@word_mpld
 13641  1FE9  0873               	movf	??__Umul8_16+1,w
 13642  1FEA  00F7               	movwf	__Umul8_16@word_mpld+1
 13643  1FEB                     l3404:	
 13644  1FEB  1C78               	btfss	__Umul8_16@multiplier,0
 13645  1FEC  2FF1               	goto	l1434
 13646  1FED  0876               	movf	__Umul8_16@word_mpld,w
 13647  1FEE  07F4               	addwf	__Umul8_16@product,f
 13648  1FEF  0877               	movf	__Umul8_16@word_mpld+1,w
 13649  1FF0  3DF5               	addwfc	__Umul8_16@product+1,f
 13650  1FF1                     l1434:	
 13651  1FF1  3001               	movlw	1
 13652  1FF2                     u3635:	
 13653  1FF2  35F6               	lslf	__Umul8_16@word_mpld,f
 13654  1FF3  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 13655  1FF4  0B89               	decfsz	9,f
 13656  1FF5  2FF2               	goto	u3635
 13657  1FF6  1003               	clrc
 13658  1FF7  0CF8               	rrf	__Umul8_16@multiplier,f
 13659  1FF8  0878               	movf	__Umul8_16@multiplier,w
 13660  1FF9  1D03               	btfss	3,2
 13661  1FFA  2FEB               	goto	l3404
 13662  1FFB  0875               	movf	__Umul8_16@product+1,w
 13663  1FFC  00F1               	movwf	?__Umul8_16+1
 13664  1FFD  0874               	movf	__Umul8_16@product,w
 13665  1FFE  00F0               	movwf	?__Umul8_16
 13666  1FFF  0008               	return
 13667  2000                     __end_of__Umul8_16:	
 13668                           
 13669                           	psect	text40
 13670  13A4                     __ptext40:	
 13671 ;; *************** function ___flge *****************
 13672 ;; Defined at:
 13673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;  ff1             4   40[BANK0 ] unsigned int 
 13676 ;;  ff2             4   44[BANK0 ] unsigned int 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;		None               void
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13691 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;Total ram usage:       12 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; This function calls:
 13695 ;;		Nothing
 13696 ;; This function is called by:
 13697 ;;		_main
 13698 ;;		_efgtoa
 13699 ;; This function uses a non-reentrant model
 13700 ;;
 13701                           
 13702                           
 13703                           ;psect for function ___flge
 13704  13A4                     ___flge:	
 13705                           
 13706                           ;incstack = 0
 13707                           ; Regs used in ___flge: [wreg+status,2+status,0]
 13708  13A4  3000               	movlw	0
 13709  13A5  0020               	movlb	0	; select bank0
 13710  13A6  0548               	andwf	___flge@ff1,w
 13711  13A7  00D0               	movwf	??___flge
 13712  13A8  3000               	movlw	0
 13713  13A9  0549               	andwf	___flge@ff1+1,w
 13714  13AA  00D1               	movwf	??___flge+1
 13715  13AB  3080               	movlw	128
 13716  13AC  054A               	andwf	___flge@ff1+2,w
 13717  13AD  00D2               	movwf	??___flge+2
 13718  13AE  307F               	movlw	127
 13719  13AF  054B               	andwf	___flge@ff1+3,w
 13720  13B0  00D3               	movwf	??___flge+3
 13721  13B1  0853               	movf	??___flge+3,w
 13722  13B2  0452               	iorwf	??___flge+2,w
 13723  13B3  0451               	iorwf	??___flge+1,w
 13724  13B4  0450               	iorwf	??___flge,w
 13725  13B5  1D03               	skipz
 13726  13B6  2BBF               	goto	l1060
 13727  13B7  3000               	movlw	0
 13728  13B8  00CB               	movwf	___flge@ff1+3
 13729  13B9  3000               	movlw	0
 13730  13BA  00CA               	movwf	___flge@ff1+2
 13731  13BB  3000               	movlw	0
 13732  13BC  00C9               	movwf	___flge@ff1+1
 13733  13BD  3000               	movlw	0
 13734  13BE  00C8               	movwf	___flge@ff1
 13735  13BF                     l1060:	
 13736  13BF  3000               	movlw	0
 13737  13C0  054C               	andwf	___flge@ff2,w
 13738  13C1  00D0               	movwf	??___flge
 13739  13C2  3000               	movlw	0
 13740  13C3  054D               	andwf	___flge@ff2+1,w
 13741  13C4  00D1               	movwf	??___flge+1
 13742  13C5  3080               	movlw	128
 13743  13C6  054E               	andwf	___flge@ff2+2,w
 13744  13C7  00D2               	movwf	??___flge+2
 13745  13C8  307F               	movlw	127
 13746  13C9  054F               	andwf	___flge@ff2+3,w
 13747  13CA  00D3               	movwf	??___flge+3
 13748  13CB  0853               	movf	??___flge+3,w
 13749  13CC  0452               	iorwf	??___flge+2,w
 13750  13CD  0451               	iorwf	??___flge+1,w
 13751  13CE  0450               	iorwf	??___flge,w
 13752  13CF  1D03               	skipz
 13753  13D0  2BD9               	goto	l3674
 13754  13D1  3000               	movlw	0
 13755  13D2  00CF               	movwf	___flge@ff2+3
 13756  13D3  3000               	movlw	0
 13757  13D4  00CE               	movwf	___flge@ff2+2
 13758  13D5  3000               	movlw	0
 13759  13D6  00CD               	movwf	___flge@ff2+1
 13760  13D7  3000               	movlw	0
 13761  13D8  00CC               	movwf	___flge@ff2
 13762  13D9                     l3674:	
 13763  13D9  1FCB               	btfss	___flge@ff1+3,7
 13764  13DA  2BF3               	goto	l3678
 13765  13DB  3000               	movlw	0
 13766  13DC  00D0               	movwf	??___flge
 13767  13DD  3000               	movlw	0
 13768  13DE  00D1               	movwf	??___flge+1
 13769  13DF  3000               	movlw	0
 13770  13E0  00D2               	movwf	??___flge+2
 13771  13E1  3080               	movlw	128
 13772  13E2  00D3               	movwf	??___flge+3
 13773  13E3  0848               	movf	___flge@ff1,w
 13774  13E4  02D0               	subwf	??___flge,f
 13775  13E5  0849               	movf	___flge@ff1+1,w
 13776  13E6  3BD1               	subwfb	??___flge+1,f
 13777  13E7  084A               	movf	___flge@ff1+2,w
 13778  13E8  3BD2               	subwfb	??___flge+2,f
 13779  13E9  084B               	movf	___flge@ff1+3,w
 13780  13EA  3BD3               	subwfb	??___flge+3,f
 13781  13EB  0853               	movf	??___flge+3,w
 13782  13EC  00CB               	movwf	___flge@ff1+3
 13783  13ED  0852               	movf	??___flge+2,w
 13784  13EE  00CA               	movwf	___flge@ff1+2
 13785  13EF  0851               	movf	??___flge+1,w
 13786  13F0  00C9               	movwf	___flge@ff1+1
 13787  13F1  0850               	movf	??___flge,w
 13788  13F2  00C8               	movwf	___flge@ff1
 13789  13F3                     l3678:	
 13790  13F3  1FCF               	btfss	___flge@ff2+3,7
 13791  13F4  2C0D               	goto	l1063
 13792  13F5  3000               	movlw	0
 13793  13F6  00D0               	movwf	??___flge
 13794  13F7  3000               	movlw	0
 13795  13F8  00D1               	movwf	??___flge+1
 13796  13F9  3000               	movlw	0
 13797  13FA  00D2               	movwf	??___flge+2
 13798  13FB  3080               	movlw	128
 13799  13FC  00D3               	movwf	??___flge+3
 13800  13FD  084C               	movf	___flge@ff2,w
 13801  13FE  02D0               	subwf	??___flge,f
 13802  13FF  084D               	movf	___flge@ff2+1,w
 13803  1400  3BD1               	subwfb	??___flge+1,f
 13804  1401  084E               	movf	___flge@ff2+2,w
 13805  1402  3BD2               	subwfb	??___flge+2,f
 13806  1403  084F               	movf	___flge@ff2+3,w
 13807  1404  3BD3               	subwfb	??___flge+3,f
 13808  1405  0853               	movf	??___flge+3,w
 13809  1406  00CF               	movwf	___flge@ff2+3
 13810  1407  0852               	movf	??___flge+2,w
 13811  1408  00CE               	movwf	___flge@ff2+2
 13812  1409  0851               	movf	??___flge+1,w
 13813  140A  00CD               	movwf	___flge@ff2+1
 13814  140B  0850               	movf	??___flge,w
 13815  140C  00CC               	movwf	___flge@ff2
 13816  140D                     l1063:	
 13817  140D  3080               	movlw	128
 13818  140E  06CB               	xorwf	___flge@ff1+3,f
 13819  140F  3080               	movlw	128
 13820  1410  06CF               	xorwf	___flge@ff2+3,f
 13821  1411  084F               	movf	___flge@ff2+3,w
 13822  1412  024B               	subwf	___flge@ff1+3,w
 13823  1413  1D03               	skipz
 13824  1414  0008               	return
 13825  1415  084E               	movf	___flge@ff2+2,w
 13826  1416  024A               	subwf	___flge@ff1+2,w
 13827  1417  1D03               	skipz
 13828  1418  0008               	return
 13829  1419  084D               	movf	___flge@ff2+1,w
 13830  141A  0249               	subwf	___flge@ff1+1,w
 13831  141B  1D03               	skipz
 13832  141C  0008               	return
 13833  141D  084C               	movf	___flge@ff2,w
 13834  141E  0248               	subwf	___flge@ff1,w
 13835  141F  0008               	return
 13836  1420                     __end_of___flge:	
 13837                           
 13838                           	psect	text41
 13839  1174                     __ptext41:	
 13840 ;; *************** function ___fleq *****************
 13841 ;; Defined at:
 13842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  ff1             4    0[COMMON] unsigned int 
 13845 ;;  ff2             4    4[COMMON] unsigned int 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;		None
 13848 ;; Return value:  Size  Location     Type
 13849 ;;		None               void
 13850 ;; Registers used:
 13851 ;;		wreg, status,2, status,0
 13852 ;; Tracked objects:
 13853 ;;		On entry : 0/0
 13854 ;;		On exit  : 0/0
 13855 ;;		Unchanged: 0/0
 13856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;Total ram usage:       12 bytes
 13862 ;; Hardware stack levels used:    1
 13863 ;; This function calls:
 13864 ;;		Nothing
 13865 ;; This function is called by:
 13866 ;;		_efgtoa
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           
 13871                           ;psect for function ___fleq
 13872  1174                     ___fleq:	
 13873                           
 13874                           ;incstack = 0
 13875                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 13876  1174  3000               	movlw	0
 13877  1175  0570               	andwf	___fleq@ff1,w
 13878  1176  00F8               	movwf	??___fleq
 13879  1177  3000               	movlw	0
 13880  1178  0571               	andwf	___fleq@ff1+1,w
 13881  1179  00F9               	movwf	??___fleq+1
 13882  117A  3080               	movlw	128
 13883  117B  0572               	andwf	___fleq@ff1+2,w
 13884  117C  00FA               	movwf	??___fleq+2
 13885  117D  307F               	movlw	127
 13886  117E  0573               	andwf	___fleq@ff1+3,w
 13887  117F  00FB               	movwf	??___fleq+3
 13888  1180  087B               	movf	??___fleq+3,w
 13889  1181  047A               	iorwf	??___fleq+2,w
 13890  1182  0479               	iorwf	??___fleq+1,w
 13891  1183  0478               	iorwf	??___fleq,w
 13892  1184  1D03               	skipz
 13893  1185  298E               	goto	l1051
 13894  1186  3000               	movlw	0
 13895  1187  00F3               	movwf	___fleq@ff1+3
 13896  1188  3000               	movlw	0
 13897  1189  00F2               	movwf	___fleq@ff1+2
 13898  118A  3000               	movlw	0
 13899  118B  00F1               	movwf	___fleq@ff1+1
 13900  118C  3000               	movlw	0
 13901  118D  00F0               	movwf	___fleq@ff1
 13902  118E                     l1051:	
 13903  118E  3000               	movlw	0
 13904  118F  0574               	andwf	___fleq@ff2,w
 13905  1190  00F8               	movwf	??___fleq
 13906  1191  3000               	movlw	0
 13907  1192  0575               	andwf	___fleq@ff2+1,w
 13908  1193  00F9               	movwf	??___fleq+1
 13909  1194  3080               	movlw	128
 13910  1195  0576               	andwf	___fleq@ff2+2,w
 13911  1196  00FA               	movwf	??___fleq+2
 13912  1197  307F               	movlw	127
 13913  1198  0577               	andwf	___fleq@ff2+3,w
 13914  1199  00FB               	movwf	??___fleq+3
 13915  119A  087B               	movf	??___fleq+3,w
 13916  119B  047A               	iorwf	??___fleq+2,w
 13917  119C  0479               	iorwf	??___fleq+1,w
 13918  119D  0478               	iorwf	??___fleq,w
 13919  119E  1D03               	skipz
 13920  119F  29A8               	goto	l1052
 13921  11A0  3000               	movlw	0
 13922  11A1  00F7               	movwf	___fleq@ff2+3
 13923  11A2  3000               	movlw	0
 13924  11A3  00F6               	movwf	___fleq@ff2+2
 13925  11A4  3000               	movlw	0
 13926  11A5  00F5               	movwf	___fleq@ff2+1
 13927  11A6  3000               	movlw	0
 13928  11A7  00F4               	movwf	___fleq@ff2
 13929  11A8                     l1052:	
 13930  11A8  0877               	movf	___fleq@ff2+3,w
 13931  11A9  0673               	xorwf	___fleq@ff1+3,w
 13932  11AA  1D03               	skipz
 13933  11AB  29B6               	goto	u4355
 13934  11AC  0876               	movf	___fleq@ff2+2,w
 13935  11AD  0672               	xorwf	___fleq@ff1+2,w
 13936  11AE  1D03               	skipz
 13937  11AF  29B6               	goto	u4355
 13938  11B0  0875               	movf	___fleq@ff2+1,w
 13939  11B1  0671               	xorwf	___fleq@ff1+1,w
 13940  11B2  1D03               	skipz
 13941  11B3  29B6               	goto	u4355
 13942  11B4  0874               	movf	___fleq@ff2,w
 13943  11B5  0670               	xorwf	___fleq@ff1,w
 13944  11B6                     u4355:	
 13945  11B6  1903               	skipnz
 13946  11B7  29BA               	goto	l3664
 13947  11B8  1003               	clrc
 13948  11B9  0008               	return
 13949  11BA                     l3664:	
 13950  11BA  1403               	setc
 13951  11BB  0008               	return
 13952  11BC                     __end_of___fleq:	
 13953                           
 13954                           	psect	text42
 13955  002B                     __ptext42:	
 13956 ;; *************** function ___fldiv *****************
 13957 ;; Defined at:
 13958 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;  a               4    0[COMMON] unsigned int 
 13961 ;;  b               4    4[COMMON] unsigned int 
 13962 ;; Auto vars:     Size  Location     Type
 13963 ;;  grs             4    7[BANK0 ] unsigned long 
 13964 ;;  rem             4    0[BANK0 ] unsigned long 
 13965 ;;  new_exp         2    5[BANK0 ] int 
 13966 ;;  aexp            1   12[BANK0 ] unsigned char 
 13967 ;;  bexp            1   11[BANK0 ] unsigned char 
 13968 ;;  sign            1    4[BANK0 ] unsigned char 
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  4    0[COMMON] unsigned char 
 13971 ;; Registers used:
 13972 ;;		wreg, status,2, status,0
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13978 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Totals:        13      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;Total ram usage:       26 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; This function calls:
 13985 ;;		Nothing
 13986 ;; This function is called by:
 13987 ;;		_efgtoa
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           
 13992                           ;psect for function ___fldiv
 13993  002B                     ___fldiv:	
 13994                           
 13995                           ;incstack = 0
 13996                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 13997  002B  0877               	movf	___fldiv@b+3,w
 13998  002C  3980               	andlw	128
 13999  002D  00F8               	movwf	??___fldiv
 14000  002E  0878               	movf	??___fldiv,w
 14001  002F  0020               	movlb	0	; select bank0
 14002  0030  00A4               	movwf	___fldiv@sign
 14003  0031  3577               	lslf	___fldiv@b+3,w
 14004  0032  00F8               	movwf	??___fldiv
 14005  0033  0878               	movf	??___fldiv,w
 14006  0034  00AB               	movwf	___fldiv@bexp
 14007  0035  1BF6               	btfsc	___fldiv@b+2,7
 14008  0036  142B               	bsf	___fldiv@bexp,0
 14009  0037  082B               	movf	___fldiv@bexp,w
 14010  0038  1903               	btfsc	3,2
 14011  0039  2848               	goto	l3756
 14012  003A  0A2B               	incf	___fldiv@bexp,w
 14013  003B  1D03               	btfss	3,2
 14014  003C  2845               	goto	l3752
 14015  003D  3000               	movlw	0
 14016  003E  00F7               	movwf	___fldiv@b+3
 14017  003F  3000               	movlw	0
 14018  0040  00F6               	movwf	___fldiv@b+2
 14019  0041  3000               	movlw	0
 14020  0042  00F5               	movwf	___fldiv@b+1
 14021  0043  3000               	movlw	0
 14022  0044  00F4               	movwf	___fldiv@b
 14023  0045                     l3752:	
 14024  0045  17F6               	bsf	___fldiv@b+2,7
 14025  0046  01F7               	clrf	___fldiv@b+3
 14026  0047  2850               	goto	l3758
 14027  0048                     l3756:	
 14028  0048  3000               	movlw	0
 14029  0049  00F7               	movwf	___fldiv@b+3
 14030  004A  3000               	movlw	0
 14031  004B  00F6               	movwf	___fldiv@b+2
 14032  004C  3000               	movlw	0
 14033  004D  00F5               	movwf	___fldiv@b+1
 14034  004E  3000               	movlw	0
 14035  004F  00F4               	movwf	___fldiv@b
 14036  0050                     l3758:	
 14037  0050  0873               	movf	___fldiv@a+3,w
 14038  0051  3980               	andlw	128
 14039  0052  00F8               	movwf	??___fldiv
 14040  0053  0878               	movf	??___fldiv,w
 14041  0054  06A4               	xorwf	___fldiv@sign,f
 14042  0055  3573               	lslf	___fldiv@a+3,w
 14043  0056  00F8               	movwf	??___fldiv
 14044  0057  0878               	movf	??___fldiv,w
 14045  0058  00AC               	movwf	___fldiv@aexp
 14046  0059  1BF2               	btfsc	___fldiv@a+2,7
 14047  005A  142C               	bsf	___fldiv@aexp,0
 14048  005B  082C               	movf	___fldiv@aexp,w
 14049  005C  1903               	btfsc	3,2
 14050  005D  286C               	goto	l3776
 14051  005E  0A2C               	incf	___fldiv@aexp,w
 14052  005F  1D03               	btfss	3,2
 14053  0060  2869               	goto	l3772
 14054  0061  3000               	movlw	0
 14055  0062  00F3               	movwf	___fldiv@a+3
 14056  0063  3000               	movlw	0
 14057  0064  00F2               	movwf	___fldiv@a+2
 14058  0065  3000               	movlw	0
 14059  0066  00F1               	movwf	___fldiv@a+1
 14060  0067  3000               	movlw	0
 14061  0068  00F0               	movwf	___fldiv@a
 14062  0069                     l3772:	
 14063  0069  17F2               	bsf	___fldiv@a+2,7
 14064  006A  01F3               	clrf	___fldiv@a+3
 14065  006B  2874               	goto	l1239
 14066  006C                     l3776:	
 14067  006C  3000               	movlw	0
 14068  006D  00F3               	movwf	___fldiv@a+3
 14069  006E  3000               	movlw	0
 14070  006F  00F2               	movwf	___fldiv@a+2
 14071  0070  3000               	movlw	0
 14072  0071  00F1               	movwf	___fldiv@a+1
 14073  0072  3000               	movlw	0
 14074  0073  00F0               	movwf	___fldiv@a
 14075  0074                     l1239:	
 14076  0074  0873               	movf	___fldiv@a+3,w
 14077  0075  0472               	iorwf	___fldiv@a+2,w
 14078  0076  0471               	iorwf	___fldiv@a+1,w
 14079  0077  0470               	iorwf	___fldiv@a,w
 14080  0078  1D03               	skipz
 14081  0079  2893               	goto	l3786
 14082  007A  3000               	movlw	0
 14083  007B  00F7               	movwf	___fldiv@b+3
 14084  007C  3000               	movlw	0
 14085  007D  00F6               	movwf	___fldiv@b+2
 14086  007E  3000               	movlw	0
 14087  007F  00F5               	movwf	___fldiv@b+1
 14088  0080  3000               	movlw	0
 14089  0081  00F4               	movwf	___fldiv@b
 14090  0082  3080               	movlw	128
 14091  0083  04F6               	iorwf	___fldiv@b+2,f
 14092  0084  307F               	movlw	127
 14093  0085  04F7               	iorwf	___fldiv@b+3,f
 14094  0086                     L12:	
 14095  0086  0824               	movf	___fldiv@sign,w
 14096  0087  00F8               	movwf	??___fldiv
 14097  0088  0878               	movf	??___fldiv,w
 14098  0089  04F7               	iorwf	___fldiv@b+3,f
 14099  008A  0877               	movf	___fldiv@b+3,w
 14100  008B  00F3               	movwf	?___fldiv+3
 14101  008C  0876               	movf	___fldiv@b+2,w
 14102  008D  00F2               	movwf	?___fldiv+2
 14103  008E  0875               	movf	___fldiv@b+1,w
 14104  008F  00F1               	movwf	?___fldiv+1
 14105  0090  0874               	movf	___fldiv@b,w
 14106  0091  00F0               	movwf	?___fldiv
 14107  0092  0008               	return
 14108  0093                     l3786:	
 14109  0093  082B               	movf	___fldiv@bexp,w
 14110  0094  1D03               	btfss	3,2
 14111  0095  289F               	goto	l3792
 14112  0096  3000               	movlw	0
 14113  0097  00F3               	movwf	?___fldiv+3
 14114  0098  3000               	movlw	0
 14115  0099  00F2               	movwf	?___fldiv+2
 14116  009A  3000               	movlw	0
 14117  009B  00F1               	movwf	?___fldiv+1
 14118  009C  3000               	movlw	0
 14119  009D  00F0               	movwf	?___fldiv
 14120  009E  0008               	return
 14121  009F                     l3792:	
 14122  009F  082B               	movf	___fldiv@bexp,w
 14123  00A0  00F8               	movwf	??___fldiv
 14124  00A1  01F9               	clrf	??___fldiv+1
 14125  00A2  0879               	movf	??___fldiv+1,w
 14126  00A3  00FB               	movwf	??___fldiv+3
 14127  00A4  082C               	movf	___fldiv@aexp,w
 14128  00A5  0278               	subwf	??___fldiv,w
 14129  00A6  00FA               	movwf	??___fldiv+2
 14130  00A7  1C03               	skipc
 14131  00A8  03FB               	decf	??___fldiv+3,f
 14132  00A9  087A               	movf	??___fldiv+2,w
 14133  00AA  3E7F               	addlw	127
 14134  00AB  00A5               	movwf	___fldiv@new_exp
 14135  00AC  3000               	movlw	0
 14136  00AD  3D7B               	addwfc	??___fldiv+3,w
 14137  00AE  00A6               	movwf	___fldiv@new_exp+1
 14138  00AF  0877               	movf	___fldiv@b+3,w
 14139  00B0  00A3               	movwf	___fldiv@rem+3
 14140  00B1  0876               	movf	___fldiv@b+2,w
 14141  00B2  00A2               	movwf	___fldiv@rem+2
 14142  00B3  0875               	movf	___fldiv@b+1,w
 14143  00B4  00A1               	movwf	___fldiv@rem+1
 14144  00B5  0874               	movf	___fldiv@b,w
 14145  00B6  00A0               	movwf	___fldiv@rem
 14146  00B7  3000               	movlw	0
 14147  00B8  00F7               	movwf	___fldiv@b+3
 14148  00B9  3000               	movlw	0
 14149  00BA  00F6               	movwf	___fldiv@b+2
 14150  00BB  3000               	movlw	0
 14151  00BC  00F5               	movwf	___fldiv@b+1
 14152  00BD  3000               	movlw	0
 14153  00BE  00F4               	movwf	___fldiv@b
 14154  00BF  3000               	movlw	0
 14155  00C0  00AA               	movwf	___fldiv@grs+3
 14156  00C1  3000               	movlw	0
 14157  00C2  00A9               	movwf	___fldiv@grs+2
 14158  00C3  3000               	movlw	0
 14159  00C4  00A8               	movwf	___fldiv@grs+1
 14160  00C5  3000               	movlw	0
 14161  00C6  00A7               	movwf	___fldiv@grs
 14162  00C7  01AC               	clrf	___fldiv@aexp
 14163  00C8                     l3820:	
 14164  00C8  301A               	movlw	26
 14165  00C9  022C               	subwf	___fldiv@aexp,w
 14166  00CA  1803               	btfsc	3,0
 14167  00CB  2904               	goto	l3822
 14168  00CC  082C               	movf	___fldiv@aexp,w
 14169  00CD  1903               	btfsc	3,2
 14170  00CE  28E6               	goto	l3812
 14171  00CF  3001               	movlw	1
 14172  00D0                     u4615:	
 14173  00D0  35A0               	lslf	___fldiv@rem,f
 14174  00D1  0DA1               	rlf	___fldiv@rem+1,f
 14175  00D2  0DA2               	rlf	___fldiv@rem+2,f
 14176  00D3  0DA3               	rlf	___fldiv@rem+3,f
 14177  00D4  0B89               	decfsz	9,f
 14178  00D5  28D0               	goto	u4615
 14179  00D6  3001               	movlw	1
 14180  00D7                     u4625:	
 14181  00D7  35F4               	lslf	___fldiv@b,f
 14182  00D8  0DF5               	rlf	___fldiv@b+1,f
 14183  00D9  0DF6               	rlf	___fldiv@b+2,f
 14184  00DA  0DF7               	rlf	___fldiv@b+3,f
 14185  00DB  0B89               	decfsz	9,f
 14186  00DC  28D7               	goto	u4625
 14187  00DD  1BAA               	btfsc	___fldiv@grs+3,7
 14188  00DE  1474               	bsf	___fldiv@b,0
 14189  00DF  3001               	movlw	1
 14190  00E0                     u4645:	
 14191  00E0  35A7               	lslf	___fldiv@grs,f
 14192  00E1  0DA8               	rlf	___fldiv@grs+1,f
 14193  00E2  0DA9               	rlf	___fldiv@grs+2,f
 14194  00E3  0DAA               	rlf	___fldiv@grs+3,f
 14195  00E4  0B89               	decfsz	9,f
 14196  00E5  28E0               	goto	u4645
 14197  00E6                     l3812:	
 14198  00E6  0873               	movf	___fldiv@a+3,w
 14199  00E7  0223               	subwf	___fldiv@rem+3,w
 14200  00E8  1D03               	skipz
 14201  00E9  28F4               	goto	u4655
 14202  00EA  0872               	movf	___fldiv@a+2,w
 14203  00EB  0222               	subwf	___fldiv@rem+2,w
 14204  00EC  1D03               	skipz
 14205  00ED  28F4               	goto	u4655
 14206  00EE  0871               	movf	___fldiv@a+1,w
 14207  00EF  0221               	subwf	___fldiv@rem+1,w
 14208  00F0  1D03               	skipz
 14209  00F1  28F4               	goto	u4655
 14210  00F2  0870               	movf	___fldiv@a,w
 14211  00F3  0220               	subwf	___fldiv@rem,w
 14212  00F4                     u4655:	
 14213  00F4  1C03               	skipc
 14214  00F5  28FF               	goto	l3818
 14215  00F6  172A               	bsf	___fldiv@grs+3,6
 14216  00F7  0870               	movf	___fldiv@a,w
 14217  00F8  02A0               	subwf	___fldiv@rem,f
 14218  00F9  0871               	movf	___fldiv@a+1,w
 14219  00FA  3BA1               	subwfb	___fldiv@rem+1,f
 14220  00FB  0872               	movf	___fldiv@a+2,w
 14221  00FC  3BA2               	subwfb	___fldiv@rem+2,f
 14222  00FD  0873               	movf	___fldiv@a+3,w
 14223  00FE  3BA3               	subwfb	___fldiv@rem+3,f
 14224  00FF                     l3818:	
 14225  00FF  3001               	movlw	1
 14226  0100  00F8               	movwf	??___fldiv
 14227  0101  0878               	movf	??___fldiv,w
 14228  0102  07AC               	addwf	___fldiv@aexp,f
 14229  0103  28C8               	goto	l3820
 14230  0104                     l3822:	
 14231  0104  0823               	movf	___fldiv@rem+3,w
 14232  0105  0422               	iorwf	___fldiv@rem+2,w
 14233  0106  0421               	iorwf	___fldiv@rem+1,w
 14234  0107  0420               	iorwf	___fldiv@rem,w
 14235  0108  1D03               	btfss	3,2
 14236  0109  1427               	bsf	___fldiv@grs,0
 14237  010A                     l3836:	
 14238  010A  1BF6               	btfsc	___fldiv@b+2,7
 14239  010B  2921               	goto	l3838
 14240  010C  3001               	movlw	1
 14241  010D                     u4685:	
 14242  010D  35F4               	lslf	___fldiv@b,f
 14243  010E  0DF5               	rlf	___fldiv@b+1,f
 14244  010F  0DF6               	rlf	___fldiv@b+2,f
 14245  0110  0DF7               	rlf	___fldiv@b+3,f
 14246  0111  0B89               	decfsz	9,f
 14247  0112  290D               	goto	u4685
 14248  0113  1BAA               	btfsc	___fldiv@grs+3,7
 14249  0114  1474               	bsf	___fldiv@b,0
 14250  0115  3001               	movlw	1
 14251  0116                     u4705:	
 14252  0116  35A7               	lslf	___fldiv@grs,f
 14253  0117  0DA8               	rlf	___fldiv@grs+1,f
 14254  0118  0DA9               	rlf	___fldiv@grs+2,f
 14255  0119  0DAA               	rlf	___fldiv@grs+3,f
 14256  011A  0B89               	decfsz	9,f
 14257  011B  2916               	goto	u4705
 14258  011C  30FF               	movlw	255
 14259  011D  07A5               	addwf	___fldiv@new_exp,f
 14260  011E  30FF               	movlw	255
 14261  011F  3DA6               	addwfc	___fldiv@new_exp+1,f
 14262  0120  290A               	goto	l3836
 14263  0121                     l3838:	
 14264  0121  01AC               	clrf	___fldiv@aexp
 14265  0122  1FAA               	btfss	___fldiv@grs+3,7
 14266  0123  293A               	goto	l3848
 14267  0124  30FF               	movlw	255
 14268  0125  0527               	andwf	___fldiv@grs,w
 14269  0126  00F8               	movwf	??___fldiv
 14270  0127  30FF               	movlw	255
 14271  0128  0528               	andwf	___fldiv@grs+1,w
 14272  0129  00F9               	movwf	??___fldiv+1
 14273  012A  30FF               	movlw	255
 14274  012B  0529               	andwf	___fldiv@grs+2,w
 14275  012C  00FA               	movwf	??___fldiv+2
 14276  012D  307F               	movlw	127
 14277  012E  052A               	andwf	___fldiv@grs+3,w
 14278  012F  00FB               	movwf	??___fldiv+3
 14279  0130  087B               	movf	??___fldiv+3,w
 14280  0131  047A               	iorwf	??___fldiv+2,w
 14281  0132  0479               	iorwf	??___fldiv+1,w
 14282  0133  0478               	iorwf	??___fldiv,w
 14283  0134  1903               	skipnz
 14284  0135  1874               	btfsc	___fldiv@b,0
 14285  0136  2938               	goto	l3844
 14286  0137  293A               	goto	l3848
 14287  0138                     l3844:	
 14288  0138  01AC               	clrf	___fldiv@aexp
 14289  0139  0AAC               	incf	___fldiv@aexp,f
 14290  013A                     l3848:	
 14291  013A  082C               	movf	___fldiv@aexp,w
 14292  013B  1903               	btfsc	3,2
 14293  013C  2963               	goto	l3858
 14294  013D  3001               	movlw	1
 14295  013E  07F4               	addwf	___fldiv@b,f
 14296  013F  3000               	movlw	0
 14297  0140  3DF5               	addwfc	___fldiv@b+1,f
 14298  0141  3000               	movlw	0
 14299  0142  3DF6               	addwfc	___fldiv@b+2,f
 14300  0143  3000               	movlw	0
 14301  0144  3DF7               	addwfc	___fldiv@b+3,f
 14302  0145  1C77               	btfss	___fldiv@b+3,0
 14303  0146  2963               	goto	l3858
 14304  0147  0874               	movf	___fldiv@b,w
 14305  0148  00F8               	movwf	??___fldiv
 14306  0149  0875               	movf	___fldiv@b+1,w
 14307  014A  00F9               	movwf	??___fldiv+1
 14308  014B  0876               	movf	___fldiv@b+2,w
 14309  014C  00FA               	movwf	??___fldiv+2
 14310  014D  0877               	movf	___fldiv@b+3,w
 14311  014E  00FB               	movwf	??___fldiv+3
 14312  014F  3001               	movlw	1
 14313  0150  00FC               	movwf	??___fldiv+4
 14314  0151                     u4775:	
 14315  0151  37FB               	asrf	??___fldiv+3,f
 14316  0152  0CFA               	rrf	??___fldiv+2,f
 14317  0153  0CF9               	rrf	??___fldiv+1,f
 14318  0154  0CF8               	rrf	??___fldiv,f
 14319  0155  0BFC               	decfsz	??___fldiv+4,f
 14320  0156  2951               	goto	u4775
 14321  0157  087B               	movf	??___fldiv+3,w
 14322  0158  00F7               	movwf	___fldiv@b+3
 14323  0159  087A               	movf	??___fldiv+2,w
 14324  015A  00F6               	movwf	___fldiv@b+2
 14325  015B  0879               	movf	??___fldiv+1,w
 14326  015C  00F5               	movwf	___fldiv@b+1
 14327  015D  0878               	movf	??___fldiv,w
 14328  015E  00F4               	movwf	___fldiv@b
 14329  015F  3001               	movlw	1
 14330  0160  07A5               	addwf	___fldiv@new_exp,f
 14331  0161  3000               	movlw	0
 14332  0162  3DA6               	addwfc	___fldiv@new_exp+1,f
 14333  0163                     l3858:	
 14334  0163  0826               	movf	___fldiv@new_exp+1,w
 14335  0164  3A80               	xorlw	128
 14336  0165  00F8               	movwf	??___fldiv
 14337  0166  3080               	movlw	128
 14338  0167  0278               	subwf	??___fldiv,w
 14339  0168  1D03               	skipz
 14340  0169  296C               	goto	u4785
 14341  016A  30FF               	movlw	255
 14342  016B  0225               	subwf	___fldiv@new_exp,w
 14343  016C                     u4785:	
 14344  016C  1C03               	skipc
 14345  016D  297B               	goto	l1260
 14346  016E  30FF               	movlw	255
 14347  016F  0020               	movlb	0	; select bank0
 14348  0170  00A5               	movwf	___fldiv@new_exp
 14349  0171  3000               	movlw	0
 14350  0172  00A6               	movwf	___fldiv@new_exp+1
 14351  0173  3000               	movlw	0
 14352  0174  00F7               	movwf	___fldiv@b+3
 14353  0175  3000               	movlw	0
 14354  0176  00F6               	movwf	___fldiv@b+2
 14355  0177  3000               	movlw	0
 14356  0178  00F5               	movwf	___fldiv@b+1
 14357  0179  3000               	movlw	0
 14358  017A  00F4               	movwf	___fldiv@b
 14359  017B                     l1260:	
 14360  017B  0020               	movlb	0	; select bank0
 14361  017C  0826               	movf	___fldiv@new_exp+1,w
 14362  017D  3A80               	xorlw	128
 14363  017E  00F8               	movwf	??___fldiv
 14364  017F  3080               	movlw	128
 14365  0180  0278               	subwf	??___fldiv,w
 14366  0181  1D03               	skipz
 14367  0182  2985               	goto	u4795
 14368  0183  3001               	movlw	1
 14369  0184  0225               	subwf	___fldiv@new_exp,w
 14370  0185                     u4795:	
 14371  0185  1803               	skipnc
 14372  0186  2993               	goto	l1261
 14373  0187  0020               	movlb	0	; select bank0
 14374  0188  01A5               	clrf	___fldiv@new_exp
 14375  0189  01A6               	clrf	___fldiv@new_exp+1
 14376  018A  3000               	movlw	0
 14377  018B  00F7               	movwf	___fldiv@b+3
 14378  018C  3000               	movlw	0
 14379  018D  00F6               	movwf	___fldiv@b+2
 14380  018E  3000               	movlw	0
 14381  018F  00F5               	movwf	___fldiv@b+1
 14382  0190  3000               	movlw	0
 14383  0191  00F4               	movwf	___fldiv@b
 14384  0192  01A4               	clrf	___fldiv@sign
 14385  0193                     l1261:	
 14386  0193  0020               	movlb	0	; select bank0
 14387  0194  0825               	movf	___fldiv@new_exp,w
 14388  0195  00F8               	movwf	??___fldiv
 14389  0196  0878               	movf	??___fldiv,w
 14390  0197  00AB               	movwf	___fldiv@bexp
 14391  0198  1C2B               	btfss	___fldiv@bexp,0
 14392  0199  299C               	goto	l3872
 14393  019A  17F6               	bsf	___fldiv@b+2,7
 14394  019B  29A0               	goto	l1263
 14395  019C                     l3872:	
 14396  019C  307F               	movlw	127
 14397  019D  00F8               	movwf	??___fldiv
 14398  019E  0878               	movf	??___fldiv,w
 14399  019F  05F6               	andwf	___fldiv@b+2,f
 14400  01A0                     l1263:	
 14401  01A0  362B               	lsrf	___fldiv@bexp,w
 14402  01A1  00F8               	movwf	??___fldiv
 14403  01A2  0878               	movf	??___fldiv,w
 14404  01A3  00F7               	movwf	___fldiv@b+3
 14405  01A4  2886               	goto	L12
 14406  01A5                     __end_of___fldiv:	
 14407                           
 14408                           	psect	text43
 14409  112F                     __ptext43:	
 14410 ;; *************** function ___awmod *****************
 14411 ;; Defined at:
 14412 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 14413 ;; Parameters:    Size  Location     Type
 14414 ;;  divisor         2    0[COMMON] int 
 14415 ;;  dividend        2    2[COMMON] int 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  sign            1    6[COMMON] unsigned char 
 14418 ;;  counter         1    5[COMMON] unsigned char 
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  2    0[COMMON] int 
 14421 ;; Registers used:
 14422 ;;		wreg, status,2, status,0
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14431 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14432 ;;Total ram usage:        7 bytes
 14433 ;; Hardware stack levels used:    1
 14434 ;; This function calls:
 14435 ;;		Nothing
 14436 ;; This function is called by:
 14437 ;;		_efgtoa
 14438 ;; This function uses a non-reentrant model
 14439 ;;
 14440                           
 14441                           
 14442                           ;psect for function ___awmod
 14443  112F                     ___awmod:	
 14444                           
 14445                           ;incstack = 0
 14446                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14447  112F  01F6               	clrf	___awmod@sign
 14448  1130  1FF3               	btfss	___awmod@dividend+1,7
 14449  1131  2939               	goto	l3626
 14450  1132  09F2               	comf	___awmod@dividend,f
 14451  1133  09F3               	comf	___awmod@dividend+1,f
 14452  1134  0AF2               	incf	___awmod@dividend,f
 14453  1135  1903               	skipnz
 14454  1136  0AF3               	incf	___awmod@dividend+1,f
 14455  1137  01F6               	clrf	___awmod@sign
 14456  1138  0AF6               	incf	___awmod@sign,f
 14457  1139                     l3626:	
 14458  1139  1FF1               	btfss	___awmod@divisor+1,7
 14459  113A  2940               	goto	l3630
 14460  113B  09F0               	comf	___awmod@divisor,f
 14461  113C  09F1               	comf	___awmod@divisor+1,f
 14462  113D  0AF0               	incf	___awmod@divisor,f
 14463  113E  1903               	skipnz
 14464  113F  0AF1               	incf	___awmod@divisor+1,f
 14465  1140                     l3630:	
 14466  1140  0870               	movf	___awmod@divisor,w
 14467  1141  0471               	iorwf	___awmod@divisor+1,w
 14468  1142  1903               	btfsc	3,2
 14469  1143  2967               	goto	l3648
 14470  1144  01F5               	clrf	___awmod@counter
 14471  1145  0AF5               	incf	___awmod@counter,f
 14472  1146                     l3638:	
 14473  1146  1BF1               	btfsc	___awmod@divisor+1,7
 14474  1147  2952               	goto	l3640
 14475  1148  3001               	movlw	1
 14476  1149                     u4275:	
 14477  1149  35F0               	lslf	___awmod@divisor,f
 14478  114A  0DF1               	rlf	___awmod@divisor+1,f
 14479  114B  0B89               	decfsz	9,f
 14480  114C  2949               	goto	u4275
 14481  114D  3001               	movlw	1
 14482  114E  00F4               	movwf	??___awmod
 14483  114F  0874               	movf	??___awmod,w
 14484  1150  07F5               	addwf	___awmod@counter,f
 14485  1151  2946               	goto	l3638
 14486  1152                     l3640:	
 14487  1152  0871               	movf	___awmod@divisor+1,w
 14488  1153  0273               	subwf	___awmod@dividend+1,w
 14489  1154  1D03               	skipz
 14490  1155  2958               	goto	u4295
 14491  1156  0870               	movf	___awmod@divisor,w
 14492  1157  0272               	subwf	___awmod@dividend,w
 14493  1158                     u4295:	
 14494  1158  1C03               	skipc
 14495  1159  295E               	goto	l3644
 14496  115A  0870               	movf	___awmod@divisor,w
 14497  115B  02F2               	subwf	___awmod@dividend,f
 14498  115C  0871               	movf	___awmod@divisor+1,w
 14499  115D  3BF3               	subwfb	___awmod@dividend+1,f
 14500  115E                     l3644:	
 14501  115E  3001               	movlw	1
 14502  115F                     u4305:	
 14503  115F  36F1               	lsrf	___awmod@divisor+1,f
 14504  1160  0CF0               	rrf	___awmod@divisor,f
 14505  1161  0B89               	decfsz	9,f
 14506  1162  295F               	goto	u4305
 14507  1163  3001               	movlw	1
 14508  1164  02F5               	subwf	___awmod@counter,f
 14509  1165  1D03               	btfss	3,2
 14510  1166  2952               	goto	l3640
 14511  1167                     l3648:	
 14512  1167  0876               	movf	___awmod@sign,w
 14513  1168  1903               	btfsc	3,2
 14514  1169  296F               	goto	l3652
 14515  116A  09F2               	comf	___awmod@dividend,f
 14516  116B  09F3               	comf	___awmod@dividend+1,f
 14517  116C  0AF2               	incf	___awmod@dividend,f
 14518  116D  1903               	skipnz
 14519  116E  0AF3               	incf	___awmod@dividend+1,f
 14520  116F                     l3652:	
 14521  116F  0873               	movf	___awmod@dividend+1,w
 14522  1170  00F1               	movwf	?___awmod+1
 14523  1171  0872               	movf	___awmod@dividend,w
 14524  1172  00F0               	movwf	?___awmod
 14525  1173  0008               	return
 14526  1174                     __end_of___awmod:	
 14527                           
 14528                           	psect	text44
 14529  0812                     __ptext44:	
 14530 ;; *************** function ___awdiv *****************
 14531 ;; Defined at:
 14532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 14533 ;; Parameters:    Size  Location     Type
 14534 ;;  divisor         2    0[COMMON] int 
 14535 ;;  dividend        2    2[COMMON] int 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;  quotient        2    7[COMMON] int 
 14538 ;;  sign            1    6[COMMON] unsigned char 
 14539 ;;  counter         1    5[COMMON] unsigned char 
 14540 ;; Return value:  Size  Location     Type
 14541 ;;                  2    0[COMMON] int 
 14542 ;; Registers used:
 14543 ;;		wreg, status,2, status,0
 14544 ;; Tracked objects:
 14545 ;;		On entry : 0/0
 14546 ;;		On exit  : 0/0
 14547 ;;		Unchanged: 0/0
 14548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14553 ;;Total ram usage:        9 bytes
 14554 ;; Hardware stack levels used:    1
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_efgtoa
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           
 14563                           ;psect for function ___awdiv
 14564  0812                     ___awdiv:	
 14565                           
 14566                           ;incstack = 0
 14567                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14568  0812  01F6               	clrf	___awdiv@sign
 14569  0813  1FF1               	btfss	___awdiv@divisor+1,7
 14570  0814  281C               	goto	l3582
 14571  0815  09F0               	comf	___awdiv@divisor,f
 14572  0816  09F1               	comf	___awdiv@divisor+1,f
 14573  0817  0AF0               	incf	___awdiv@divisor,f
 14574  0818  1903               	skipnz
 14575  0819  0AF1               	incf	___awdiv@divisor+1,f
 14576  081A  01F6               	clrf	___awdiv@sign
 14577  081B  0AF6               	incf	___awdiv@sign,f
 14578  081C                     l3582:	
 14579  081C  1FF3               	btfss	___awdiv@dividend+1,7
 14580  081D  2827               	goto	l3588
 14581  081E  09F2               	comf	___awdiv@dividend,f
 14582  081F  09F3               	comf	___awdiv@dividend+1,f
 14583  0820  0AF2               	incf	___awdiv@dividend,f
 14584  0821  1903               	skipnz
 14585  0822  0AF3               	incf	___awdiv@dividend+1,f
 14586  0823  3001               	movlw	1
 14587  0824  00F4               	movwf	??___awdiv
 14588  0825  0874               	movf	??___awdiv,w
 14589  0826  06F6               	xorwf	___awdiv@sign,f
 14590  0827                     l3588:	
 14591  0827  01F7               	clrf	___awdiv@quotient
 14592  0828  01F8               	clrf	___awdiv@quotient+1
 14593  0829  0870               	movf	___awdiv@divisor,w
 14594  082A  0471               	iorwf	___awdiv@divisor+1,w
 14595  082B  1903               	btfsc	3,2
 14596  082C  2856               	goto	l3610
 14597  082D  01F5               	clrf	___awdiv@counter
 14598  082E  0AF5               	incf	___awdiv@counter,f
 14599  082F                     l3598:	
 14600  082F  1BF1               	btfsc	___awdiv@divisor+1,7
 14601  0830  283B               	goto	l3600
 14602  0831  3001               	movlw	1
 14603  0832                     u4175:	
 14604  0832  35F0               	lslf	___awdiv@divisor,f
 14605  0833  0DF1               	rlf	___awdiv@divisor+1,f
 14606  0834  0B89               	decfsz	9,f
 14607  0835  2832               	goto	u4175
 14608  0836  3001               	movlw	1
 14609  0837  00F4               	movwf	??___awdiv
 14610  0838  0874               	movf	??___awdiv,w
 14611  0839  07F5               	addwf	___awdiv@counter,f
 14612  083A  282F               	goto	l3598
 14613  083B                     l3600:	
 14614  083B  3001               	movlw	1
 14615  083C                     u4195:	
 14616  083C  35F7               	lslf	___awdiv@quotient,f
 14617  083D  0DF8               	rlf	___awdiv@quotient+1,f
 14618  083E  0B89               	decfsz	9,f
 14619  083F  283C               	goto	u4195
 14620  0840  0871               	movf	___awdiv@divisor+1,w
 14621  0841  0273               	subwf	___awdiv@dividend+1,w
 14622  0842  1D03               	skipz
 14623  0843  2846               	goto	u4205
 14624  0844  0870               	movf	___awdiv@divisor,w
 14625  0845  0272               	subwf	___awdiv@dividend,w
 14626  0846                     u4205:	
 14627  0846  1C03               	skipc
 14628  0847  284D               	goto	l3606
 14629  0848  0870               	movf	___awdiv@divisor,w
 14630  0849  02F2               	subwf	___awdiv@dividend,f
 14631  084A  0871               	movf	___awdiv@divisor+1,w
 14632  084B  3BF3               	subwfb	___awdiv@dividend+1,f
 14633  084C  1477               	bsf	___awdiv@quotient,0
 14634  084D                     l3606:	
 14635  084D  3001               	movlw	1
 14636  084E                     u4215:	
 14637  084E  36F1               	lsrf	___awdiv@divisor+1,f
 14638  084F  0CF0               	rrf	___awdiv@divisor,f
 14639  0850  0B89               	decfsz	9,f
 14640  0851  284E               	goto	u4215
 14641  0852  3001               	movlw	1
 14642  0853  02F5               	subwf	___awdiv@counter,f
 14643  0854  1D03               	btfss	3,2
 14644  0855  283B               	goto	l3600
 14645  0856                     l3610:	
 14646  0856  0876               	movf	___awdiv@sign,w
 14647  0857  1903               	btfsc	3,2
 14648  0858  285E               	goto	l3614
 14649  0859  09F7               	comf	___awdiv@quotient,f
 14650  085A  09F8               	comf	___awdiv@quotient+1,f
 14651  085B  0AF7               	incf	___awdiv@quotient,f
 14652  085C  1903               	skipnz
 14653  085D  0AF8               	incf	___awdiv@quotient+1,f
 14654  085E                     l3614:	
 14655  085E  0878               	movf	___awdiv@quotient+1,w
 14656  085F  00F1               	movwf	?___awdiv+1
 14657  0860  0877               	movf	___awdiv@quotient,w
 14658  0861  00F0               	movwf	?___awdiv
 14659  0862  0008               	return
 14660  0863                     __end_of___awdiv:	
 14661                           
 14662                           	psect	text45
 14663  0863                     __ptext45:	
 14664 ;; *************** function _dtoa *****************
 14665 ;; Defined at:
 14666 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14667 ;; Parameters:    Size  Location     Type
 14668 ;;  fp              1    wreg     PTR struct _IO_FILE
 14669 ;;		 -> NULL(0), 
 14670 ;;  d               8   16[BANK0 ] long long 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  fp              1   31[BANK0 ] PTR struct _IO_FILE
 14673 ;;		 -> NULL(0), 
 14674 ;;  n               8   36[BANK0 ] long long 
 14675 ;;  i               2   44[BANK0 ] int 
 14676 ;;  s               2   34[BANK0 ] int 
 14677 ;;  w               2   32[BANK0 ] int 
 14678 ;;  p               2   29[BANK0 ] int 
 14679 ;; Return value:  Size  Location     Type
 14680 ;;                  2   16[BANK0 ] int 
 14681 ;; Registers used:
 14682 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14683 ;; Tracked objects:
 14684 ;;		On entry : 0/0
 14685 ;;		On exit  : 0/0
 14686 ;;		Unchanged: 0/0
 14687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14691 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14692 ;;Total ram usage:       30 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:    5
 14695 ;; This function calls:
 14696 ;;		___aodiv
 14697 ;;		___aomod
 14698 ;;		_abs
 14699 ;;		_pad
 14700 ;; This function is called by:
 14701 ;;		_vfpfcnvrt
 14702 ;; This function uses a non-reentrant model
 14703 ;;
 14704                           
 14705                           
 14706                           ;psect for function _dtoa
 14707  0863                     _dtoa:	
 14708                           
 14709                           ;incstack = 0
 14710                           ; Regs used in _dtoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14711                           ;dtoa@fp stored from wreg
 14712  0863  0020               	movlb	0	; select bank0
 14713  0864  00BF               	movwf	dtoa@fp
 14714                           
 14715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 14716  0865  0830               	movf	dtoa@d,w
 14717  0866  00C4               	movwf	dtoa@n
 14718  0867  0831               	movf	dtoa@d+1,w
 14719  0868  00C5               	movwf	dtoa@n+1
 14720  0869  0832               	movf	dtoa@d+2,w
 14721  086A  00C6               	movwf	dtoa@n+2
 14722  086B  0833               	movf	dtoa@d+3,w
 14723  086C  00C7               	movwf	dtoa@n+3
 14724  086D  0834               	movf	dtoa@d+4,w
 14725  086E  00C8               	movwf	dtoa@n+4
 14726  086F  0835               	movf	dtoa@d+5,w
 14727  0870  00C9               	movwf	dtoa@n+5
 14728  0871  0836               	movf	dtoa@d+6,w
 14729  0872  00CA               	movwf	dtoa@n+6
 14730  0873  0837               	movf	dtoa@d+7,w
 14731  0874  00CB               	movwf	dtoa@n+7
 14732                           
 14733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 14734  0875  3044               	movlw	low dtoa@n
 14735  0876  0086               	movwf	6
 14736  0877  3000               	movlw	high dtoa@n
 14737  0878  0087               	movwf	7
 14738  0879  3F47               	moviw [7]fsr1
 14739  087A  00B8               	movwf	??_dtoa
 14740  087B  1FB8               	btfss	??_dtoa,7
 14741  087C  287F               	goto	u5070
 14742  087D  3001               	movlw	1
 14743  087E  2880               	goto	u5080
 14744  087F                     u5070:	
 14745  087F  3000               	movlw	0
 14746  0880                     u5080:	
 14747  0880  0020               	movlb	0	; select bank0
 14748  0881  00B9               	movwf	??_dtoa+1
 14749  0882  01BA               	clrf	??_dtoa+2
 14750  0883  0839               	movf	??_dtoa+1,w
 14751  0884  00C2               	movwf	dtoa@s
 14752  0885  083A               	movf	??_dtoa+2,w
 14753  0886  00C3               	movwf	dtoa@s+1
 14754                           
 14755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 14756  0887  0842               	movf	dtoa@s,w
 14757  0888  0443               	iorwf	dtoa@s+1,w
 14758  0889  1903               	btfsc	3,2
 14759  088A  28A9               	goto	l740
 14760                           
 14761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 14762  088B  09C4               	comf	dtoa@n,f
 14763  088C  09C5               	comf	dtoa@n+1,f
 14764  088D  09C6               	comf	dtoa@n+2,f
 14765  088E  09C7               	comf	dtoa@n+3,f
 14766  088F  09C8               	comf	dtoa@n+4,f
 14767  0890  09C9               	comf	dtoa@n+5,f
 14768  0891  09CA               	comf	dtoa@n+6,f
 14769  0892  09CB               	comf	dtoa@n+7,f
 14770  0893  0AC4               	incf	dtoa@n,f
 14771  0894  1D03               	skipz
 14772  0895  28A9               	goto	l740
 14773  0896  0AC5               	incf	dtoa@n+1,f
 14774  0897  1D03               	skipz
 14775  0898  28A9               	goto	l740
 14776  0899  0AC6               	incf	dtoa@n+2,f
 14777  089A  1D03               	skipz
 14778  089B  28A9               	goto	l740
 14779  089C  0AC7               	incf	dtoa@n+3,f
 14780  089D  1D03               	skipz
 14781  089E  28A9               	goto	l740
 14782  089F  0AC8               	incf	dtoa@n+4,f
 14783  08A0  1D03               	skipz
 14784  08A1  28A9               	goto	l740
 14785  08A2  0AC9               	incf	dtoa@n+5,f
 14786  08A3  1D03               	skipz
 14787  08A4  28A9               	goto	l740
 14788  08A5  0ACA               	incf	dtoa@n+6,f
 14789  08A6  1D03               	skipz
 14790  08A7  28A9               	goto	l740
 14791  08A8  0ACB               	incf	dtoa@n+7,f
 14792  08A9                     l740:	
 14793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 14794                           
 14795                           
 14796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 14797  08A9  0022               	movlb	2	; select bank2
 14798  08AA  1BC7               	btfsc	(_prec+1)^(0+256),7
 14799  08AB  28B0               	goto	l741
 14800                           
 14801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 14802  08AC  30FD               	movlw	253
 14803  08AD  05C8               	andwf	_flags^(0+256),f
 14804  08AE  30FF               	movlw	255
 14805  08AF  05C9               	andwf	(_flags+1)^(0+256),f
 14806  08B0                     l741:	
 14807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 14808                           
 14809                           
 14810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 14811  08B0  0847               	movf	(_prec+1)^(0+256),w
 14812  08B1  3A80               	xorlw	128
 14813  08B2  0020               	movlb	0	; select bank0
 14814  08B3  00B8               	movwf	??_dtoa
 14815  08B4  3080               	movlw	128
 14816  08B5  0238               	subwf	??_dtoa,w
 14817  08B6  1D03               	skipz
 14818  08B7  28BB               	goto	u5125
 14819  08B8  3001               	movlw	1
 14820  08B9  0022               	movlb	2	; select bank2
 14821  08BA  0246               	subwf	_prec^(0+256),w
 14822  08BB                     u5125:	
 14823  08BB  1803               	skipnc
 14824  08BC  28C3               	goto	l4030
 14825  08BD  3001               	movlw	1
 14826  08BE  0020               	movlb	0	; select bank0
 14827  08BF  00BD               	movwf	dtoa@p
 14828  08C0  3000               	movlw	0
 14829  08C1  00BE               	movwf	dtoa@p+1
 14830  08C2  28CB               	goto	l745
 14831  08C3                     l4030:	
 14832  08C3  0022               	movlb	2	; select bank2
 14833  08C4  0847               	movf	(_prec+1)^(0+256),w
 14834  08C5  0020               	movlb	0	; select bank0
 14835  08C6  00BE               	movwf	dtoa@p+1
 14836  08C7  0022               	movlb	2	; select bank2
 14837  08C8  0846               	movf	_prec^(0+256),w
 14838  08C9  0020               	movlb	0	; select bank0
 14839  08CA  00BD               	movwf	dtoa@p
 14840  08CB                     l745:	
 14841                           
 14842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 14843  08CB  0022               	movlb	2	; select bank2
 14844  08CC  0845               	movf	(_width+1)^(0+256),w
 14845  08CD  0020               	movlb	0	; select bank0
 14846  08CE  00C1               	movwf	dtoa@w+1
 14847  08CF  0022               	movlb	2	; select bank2
 14848  08D0  0844               	movf	_width^(0+256),w
 14849  08D1  0020               	movlb	0	; select bank0
 14850  08D2  00C0               	movwf	dtoa@w
 14851                           
 14852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 14853  08D3  0842               	movf	dtoa@s,w
 14854  08D4  0443               	iorwf	dtoa@s+1,w
 14855  08D5  1D03               	btfss	3,2
 14856  08D6  28DA               	goto	l4036
 14857  08D7  0022               	movlb	2	; select bank2
 14858  08D8  1D48               	btfss	_flags^(0+256),2
 14859  08D9  28DF               	goto	l746
 14860  08DA                     l4036:	
 14861                           
 14862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 14863  08DA  30FF               	movlw	255
 14864  08DB  0020               	movlb	0	; select bank0
 14865  08DC  07C0               	addwf	dtoa@w,f
 14866  08DD  30FF               	movlw	255
 14867  08DE  3DC1               	addwfc	dtoa@w+1,f
 14868  08DF                     l746:	
 14869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 14870                           
 14871                           
 14872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 14873  08DF  304F               	movlw	79
 14874  08E0  0020               	movlb	0	; select bank0
 14875  08E1  00CC               	movwf	dtoa@i
 14876  08E2  3000               	movlw	0
 14877  08E3  00CD               	movwf	dtoa@i+1
 14878                           
 14879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 14880  08E4  0023               	movlb	3	; select bank3
 14881  08E5  01EF               	clrf	(_dbuf^(0+384)+79)
 14882                           
 14883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 14884  08E6  2975               	goto	l749
 14885  08E7                     l4050:	
 14886  08E7  0020               	movlb	0	; select bank0
 14887  08E8  0844               	movf	dtoa@n,w
 14888  08E9  0445               	iorwf	dtoa@n+1,w
 14889  08EA  0446               	iorwf	dtoa@n+2,w
 14890  08EB  0447               	iorwf	dtoa@n+3,w
 14891  08EC  0448               	iorwf	dtoa@n+4,w
 14892  08ED  0449               	iorwf	dtoa@n+5,w
 14893  08EE  044A               	iorwf	dtoa@n+6,w
 14894  08EF  044B               	iorwf	dtoa@n+7,w
 14895  08F0  1D03               	skipz
 14896  08F1  290C               	goto	l4040
 14897  08F2  083E               	movf	dtoa@p+1,w
 14898  08F3  3A80               	xorlw	128
 14899  08F4  00B8               	movwf	??_dtoa
 14900  08F5  3080               	movlw	128
 14901  08F6  0238               	subwf	??_dtoa,w
 14902  08F7  1D03               	skipz
 14903  08F8  28FB               	goto	u5175
 14904  08F9  3001               	movlw	1
 14905  08FA  023D               	subwf	dtoa@p,w
 14906  08FB                     u5175:	
 14907  08FB  1803               	skipnc
 14908  08FC  290C               	goto	l4040
 14909  08FD  0020               	movlb	0	; select bank0
 14910  08FE  0841               	movf	dtoa@w+1,w
 14911  08FF  3A80               	xorlw	128
 14912  0900  00B8               	movwf	??_dtoa
 14913  0901  3080               	movlw	128
 14914  0902  0238               	subwf	??_dtoa,w
 14915  0903  1D03               	skipz
 14916  0904  2907               	goto	u5185
 14917  0905  3001               	movlw	1
 14918  0906  0240               	subwf	dtoa@w,w
 14919  0907                     u5185:	
 14920  0907  1C03               	skipc
 14921  0908  2981               	goto	l4058
 14922  0909  0022               	movlb	2	; select bank2
 14923  090A  1CC8               	btfss	_flags^(0+256),1
 14924  090B  2981               	goto	l4058
 14925  090C                     l4040:	
 14926                           
 14927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 14928  090C  30FF               	movlw	255
 14929  090D  0020               	movlb	0	; select bank0
 14930  090E  07CC               	addwf	dtoa@i,f
 14931  090F  30FF               	movlw	255
 14932  0910  3DCD               	addwfc	dtoa@i+1,f
 14933                           
 14934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 14935  0911  300A               	movlw	10
 14936  0912  00A0               	movwf	___aomod@divisor
 14937  0913  01A1               	clrf	___aomod@divisor+1
 14938  0914  01A2               	clrf	___aomod@divisor+2
 14939  0915  01A3               	clrf	___aomod@divisor+3
 14940  0916  01A4               	clrf	___aomod@divisor+4
 14941  0917  01A5               	clrf	___aomod@divisor+5
 14942  0918  01A6               	clrf	___aomod@divisor+6
 14943  0919  01A7               	clrf	___aomod@divisor+7
 14944  091A  0844               	movf	dtoa@n,w
 14945  091B  00A8               	movwf	___aomod@dividend
 14946  091C  0845               	movf	dtoa@n+1,w
 14947  091D  00A9               	movwf	___aomod@dividend+1
 14948  091E  0846               	movf	dtoa@n+2,w
 14949  091F  00AA               	movwf	___aomod@dividend+2
 14950  0920  0847               	movf	dtoa@n+3,w
 14951  0921  00AB               	movwf	___aomod@dividend+3
 14952  0922  0848               	movf	dtoa@n+4,w
 14953  0923  00AC               	movwf	___aomod@dividend+4
 14954  0924  0849               	movf	dtoa@n+5,w
 14955  0925  00AD               	movwf	___aomod@dividend+5
 14956  0926  084A               	movf	dtoa@n+6,w
 14957  0927  00AE               	movwf	___aomod@dividend+6
 14958  0928  084B               	movf	dtoa@n+7,w
 14959  0929  00AF               	movwf	___aomod@dividend+7
 14960  092A  3196  2631  3188   	fcall	___aomod
 14961  092D  0020               	movlb	0	; select bank0
 14962  092E  0821               	movf	?___aomod+1,w
 14963  092F  00F4               	movwf	abs@a+1
 14964  0930  0820               	movf	?___aomod,w
 14965  0931  00F3               	movwf	abs@a
 14966  0932  319F  277D  3188   	fcall	_abs
 14967  0935  0873               	movf	?_abs,w
 14968  0936  3E30               	addlw	48
 14969  0937  0020               	movlb	0	; select bank0
 14970  0938  00B8               	movwf	??_dtoa
 14971  0939  084C               	movf	dtoa@i,w
 14972  093A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 14973  093B  0086               	movwf	6
 14974  093C  3001               	movlw	1	; select bank3/4
 14975  093D  0087               	movwf	7
 14976  093E  0838               	movf	??_dtoa,w
 14977  093F  0081               	movwf	1
 14978                           
 14979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 14980  0940  30FF               	movlw	255
 14981  0941  07BD               	addwf	dtoa@p,f
 14982  0942  30FF               	movlw	255
 14983  0943  3DBE               	addwfc	dtoa@p+1,f
 14984                           
 14985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 14986  0944  30FF               	movlw	255
 14987  0945  07C0               	addwf	dtoa@w,f
 14988  0946  30FF               	movlw	255
 14989  0947  3DC1               	addwfc	dtoa@w+1,f
 14990                           
 14991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 14992  0948  300A               	movlw	10
 14993  0949  00A0               	movwf	___aodiv@divisor
 14994  094A  01A1               	clrf	___aodiv@divisor+1
 14995  094B  01A2               	clrf	___aodiv@divisor+2
 14996  094C  01A3               	clrf	___aodiv@divisor+3
 14997  094D  01A4               	clrf	___aodiv@divisor+4
 14998  094E  01A5               	clrf	___aodiv@divisor+5
 14999  094F  01A6               	clrf	___aodiv@divisor+6
 15000  0950  01A7               	clrf	___aodiv@divisor+7
 15001  0951  0844               	movf	dtoa@n,w
 15002  0952  00A8               	movwf	___aodiv@dividend
 15003  0953  0845               	movf	dtoa@n+1,w
 15004  0954  00A9               	movwf	___aodiv@dividend+1
 15005  0955  0846               	movf	dtoa@n+2,w
 15006  0956  00AA               	movwf	___aodiv@dividend+2
 15007  0957  0847               	movf	dtoa@n+3,w
 15008  0958  00AB               	movwf	___aodiv@dividend+3
 15009  0959  0848               	movf	dtoa@n+4,w
 15010  095A  00AC               	movwf	___aodiv@dividend+4
 15011  095B  0849               	movf	dtoa@n+5,w
 15012  095C  00AD               	movwf	___aodiv@dividend+5
 15013  095D  084A               	movf	dtoa@n+6,w
 15014  095E  00AE               	movwf	___aodiv@dividend+6
 15015  095F  084B               	movf	dtoa@n+7,w
 15016  0960  00AF               	movwf	___aodiv@dividend+7
 15017  0961  3197  270D  3188   	fcall	___aodiv
 15018  0964  0020               	movlb	0	; select bank0
 15019  0965  0820               	movf	?___aodiv,w
 15020  0966  00C4               	movwf	dtoa@n
 15021  0967  0821               	movf	?___aodiv+1,w
 15022  0968  00C5               	movwf	dtoa@n+1
 15023  0969  0822               	movf	?___aodiv+2,w
 15024  096A  00C6               	movwf	dtoa@n+2
 15025  096B  0823               	movf	?___aodiv+3,w
 15026  096C  00C7               	movwf	dtoa@n+3
 15027  096D  0824               	movf	?___aodiv+4,w
 15028  096E  00C8               	movwf	dtoa@n+4
 15029  096F  0825               	movf	?___aodiv+5,w
 15030  0970  00C9               	movwf	dtoa@n+5
 15031  0971  0826               	movf	?___aodiv+6,w
 15032  0972  00CA               	movwf	dtoa@n+6
 15033  0973  0827               	movf	?___aodiv+7,w
 15034  0974  00CB               	movwf	dtoa@n+7
 15035  0975                     l749:	
 15036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 15037                           
 15038                           
 15039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 15040  0975  0020               	movlb	0	; select bank0
 15041  0976  084D               	movf	dtoa@i+1,w
 15042  0977  3A80               	xorlw	128
 15043  0978  00B8               	movwf	??_dtoa
 15044  0979  3080               	movlw	128
 15045  097A  0238               	subwf	??_dtoa,w
 15046  097B  1D03               	skipz
 15047  097C  297F               	goto	u5155
 15048  097D  3001               	movlw	1
 15049  097E  024C               	subwf	dtoa@i,w
 15050  097F                     u5155:	
 15051  097F  1803               	btfsc	3,0
 15052  0980  28E7               	goto	l4050
 15053  0981                     l4058:	
 15054                           
 15055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 15056  0981  0020               	movlb	0	; select bank0
 15057  0982  0842               	movf	dtoa@s,w
 15058  0983  0443               	iorwf	dtoa@s+1,w
 15059  0984  1D03               	btfss	3,2
 15060  0985  2989               	goto	l4062
 15061  0986  0022               	movlb	2	; select bank2
 15062  0987  1D48               	btfss	_flags^(0+256),2
 15063  0988  29A1               	goto	l4072
 15064  0989                     l4062:	
 15065                           
 15066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 15067  0989  30FF               	movlw	255
 15068  098A  0020               	movlb	0	; select bank0
 15069  098B  07CC               	addwf	dtoa@i,f
 15070  098C  30FF               	movlw	255
 15071  098D  3DCD               	addwfc	dtoa@i+1,f
 15072                           
 15073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 15074  098E  0842               	movf	dtoa@s,w
 15075  098F  0443               	iorwf	dtoa@s+1,w
 15076  0990  1D03               	btfss	3,2
 15077  0991  2994               	goto	l4068
 15078  0992  302B               	movlw	43
 15079  0993  2995               	goto	L13
 15080  0994                     l4068:	
 15081  0994  302D               	movlw	45
 15082  0995                     L13:	
 15083  0995  00BB               	movwf	_dtoa$1387
 15084  0996  3000               	movlw	0
 15085  0997  00BC               	movwf	_dtoa$1387+1
 15086  0998  083B               	movf	_dtoa$1387,w
 15087  0999  00B8               	movwf	??_dtoa
 15088  099A  084C               	movf	dtoa@i,w
 15089  099B  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 15090  099C  0086               	movwf	6
 15091  099D  3001               	movlw	1	; select bank3/4
 15092  099E  0087               	movwf	7
 15093  099F  0838               	movf	??_dtoa,w
 15094  09A0  0081               	movwf	1
 15095  09A1                     l4072:	
 15096                           
 15097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 15098  09A1  0020               	movlb	0	; select bank0
 15099  09A2  084C               	movf	dtoa@i,w
 15100  09A3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
 15101  09A4  00B8               	movwf	??_dtoa
 15102  09A5  0838               	movf	??_dtoa,w
 15103  09A6  00A4               	movwf	pad@buf
 15104  09A7  0841               	movf	dtoa@w+1,w
 15105  09A8  00A6               	movwf	pad@p+1
 15106  09A9  0840               	movf	dtoa@w,w
 15107  09AA  00A5               	movwf	pad@p
 15108  09AB  083F               	movf	dtoa@fp,w
 15109  09AC  3192  220A         	fcall	_pad
 15110  09AE  0020               	movlb	0	; select bank0
 15111  09AF  0825               	movf	?_pad+1,w
 15112  09B0  00B1               	movwf	?_dtoa+1
 15113  09B1  0824               	movf	?_pad,w
 15114  09B2  00B0               	movwf	?_dtoa
 15115  09B3  0008               	return
 15116  09B4                     __end_of_dtoa:	
 15117                           
 15118                           	psect	text46
 15119  120A                     __ptext46:	
 15120 ;; *************** function _pad *****************
 15121 ;; Defined at:
 15122 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;  fp              1    wreg     PTR struct _IO_FILE
 15125 ;;		 -> NULL(0), 
 15126 ;;  buf             1    4[BANK0 ] PTR unsigned char 
 15127 ;;		 -> dbuf(80), 
 15128 ;;  p               2    5[BANK0 ] int 
 15129 ;; Auto vars:     Size  Location     Type
 15130 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
 15131 ;;		 -> NULL(0), 
 15132 ;;  w               2   10[BANK0 ] int 
 15133 ;;  i               2    8[BANK0 ] int 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  2    4[BANK0 ] int 
 15136 ;; Registers used:
 15137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/0
 15140 ;;		On exit  : 0/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15143 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15144 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15145 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15146 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15147 ;;Total ram usage:        9 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    4
 15150 ;; This function calls:
 15151 ;;		_fputc
 15152 ;;		_fputs
 15153 ;;		_strlen
 15154 ;; This function is called by:
 15155 ;;		_dtoa
 15156 ;;		_efgtoa
 15157 ;; This function uses a non-reentrant model
 15158 ;;
 15159                           
 15160                           
 15161                           ;psect for function _pad
 15162  120A                     _pad:	
 15163                           
 15164                           ;incstack = 0
 15165                           ; Regs used in _pad: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15166                           ;pad@fp stored from wreg
 15167  120A  0020               	movlb	0	; select bank0
 15168  120B  00AC               	movwf	pad@fp
 15169                           
 15170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 15171  120C  0022               	movlb	2	; select bank2
 15172  120D  1C48               	btfss	_flags^(0+256),0
 15173  120E  2A18               	goto	l3418
 15174                           
 15175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 15176  120F  0020               	movlb	0	; select bank0
 15177  1210  082C               	movf	pad@fp,w
 15178  1211  00A7               	movwf	??_pad
 15179  1212  0827               	movf	??_pad,w
 15180  1213  00FA               	movwf	fputs@fp
 15181  1214  0824               	movf	pad@buf,w
 15182  1215  3180  2005  3192   	fcall	_fputs
 15183  1218                     l3418:	
 15184                           
 15185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 15186  1218  0020               	movlb	0	; select bank0
 15187  1219  1BA6               	btfsc	pad@p+1,7
 15188  121A  2A20               	goto	l3422
 15189  121B  0826               	movf	pad@p+1,w
 15190  121C  00AB               	movwf	pad@w+1
 15191  121D  0825               	movf	pad@p,w
 15192  121E  00AA               	movwf	pad@w
 15193  121F  2A22               	goto	l732
 15194  1220                     l3422:	
 15195  1220  01AA               	clrf	pad@w
 15196  1221  01AB               	clrf	pad@w+1
 15197  1222                     l732:	
 15198                           
 15199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 15200  1222  01A8               	clrf	pad@i
 15201  1223  01A9               	clrf	pad@i+1
 15202  1224                     l3428:	
 15203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15204                           
 15205                           
 15206                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 15207  1224  0829               	movf	pad@i+1,w
 15208  1225  3A80               	xorlw	128
 15209  1226  00A7               	movwf	??_pad
 15210  1227  082B               	movf	pad@w+1,w
 15211  1228  3A80               	xorlw	128
 15212  1229  0227               	subwf	??_pad,w
 15213  122A  1D03               	skipz
 15214  122B  2A2E               	goto	u3675
 15215  122C  082A               	movf	pad@w,w
 15216  122D  0228               	subwf	pad@i,w
 15217  122E                     u3675:	
 15218  122E  1803               	btfsc	3,0
 15219  122F  2A42               	goto	l735
 15220                           
 15221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 15222  1230  3020               	movlw	32
 15223  1231  00F2               	movwf	fputc@c
 15224  1232  3000               	movlw	0
 15225  1233  00F3               	movwf	fputc@c+1
 15226  1234  0020               	movlb	0	; select bank0
 15227  1235  082C               	movf	pad@fp,w
 15228  1236  00A7               	movwf	??_pad
 15229  1237  0827               	movf	??_pad,w
 15230  1238  00F4               	movwf	fputc@fp
 15231  1239  3190  20FA  3192   	fcall	_fputc
 15232                           
 15233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 15234  123C  3001               	movlw	1
 15235  123D  0020               	movlb	0	; select bank0
 15236  123E  07A8               	addwf	pad@i,f
 15237  123F  3000               	movlw	0
 15238  1240  3DA9               	addwfc	pad@i+1,f
 15239  1241  2A24               	goto	l3428
 15240  1242                     l735:	
 15241                           
 15242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 15243  1242  0022               	movlb	2	; select bank2
 15244  1243  1848               	btfsc	_flags^(0+256),0
 15245  1244  2A4E               	goto	l736
 15246                           
 15247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 15248  1245  0020               	movlb	0	; select bank0
 15249  1246  082C               	movf	pad@fp,w
 15250  1247  00A7               	movwf	??_pad
 15251  1248  0827               	movf	??_pad,w
 15252  1249  00FA               	movwf	fputs@fp
 15253  124A  0824               	movf	pad@buf,w
 15254  124B  3180  2005  3192   	fcall	_fputs
 15255  124E                     l736:	
 15256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 92:     }
 15257                           
 15258                           
 15259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 15260  124E  0020               	movlb	0	; select bank0
 15261  124F  0824               	movf	pad@buf,w
 15262  1250  319F  27AB         	fcall	_strlen
 15263  1252  0020               	movlb	0	; select bank0
 15264  1253  082A               	movf	pad@w,w
 15265  1254  0770               	addwf	?_strlen,w
 15266  1255  00A4               	movwf	?_pad
 15267  1256  082B               	movf	pad@w+1,w
 15268  1257  3D71               	addwfc	?_strlen+1,w
 15269  1258  00A5               	movwf	?_pad+1
 15270  1259  0008               	return
 15271  125A                     __end_of_pad:	
 15272                           
 15273                           	psect	text47
 15274  1FAB                     __ptext47:	
 15275 ;; *************** function _strlen *****************
 15276 ;; Defined at:
 15277 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;  s               1    wreg     PTR const unsigned char 
 15280 ;;		 -> dbuf(80), 
 15281 ;; Auto vars:     Size  Location     Type
 15282 ;;  s               1    4[COMMON] PTR const unsigned char 
 15283 ;;		 -> dbuf(80), 
 15284 ;;  a               1    3[COMMON] PTR const unsigned char 
 15285 ;;		 -> dbuf(80), 
 15286 ;; Return value:  Size  Location     Type
 15287 ;;                  2    0[COMMON] unsigned int 
 15288 ;; Registers used:
 15289 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15290 ;; Tracked objects:
 15291 ;;		On entry : 0/0
 15292 ;;		On exit  : 0/0
 15293 ;;		Unchanged: 0/0
 15294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15299 ;;Total ram usage:        5 bytes
 15300 ;; Hardware stack levels used:    1
 15301 ;; This function calls:
 15302 ;;		Nothing
 15303 ;; This function is called by:
 15304 ;;		_pad
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           
 15309                           ;psect for function _strlen
 15310  1FAB                     _strlen:	
 15311                           
 15312                           ;incstack = 0
 15313                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 15314                           ;strlen@s stored from wreg
 15315  1FAB  00F4               	movwf	strlen@s
 15316  1FAC  0874               	movf	strlen@s,w
 15317  1FAD  00F2               	movwf	??_strlen
 15318  1FAE  0872               	movf	??_strlen,w
 15319  1FAF  00F3               	movwf	strlen@a
 15320  1FB0                     l3196:	
 15321  1FB0  0874               	movf	strlen@s,w
 15322  1FB1  0086               	movwf	6
 15323  1FB2  3001               	movlw	1	; select bank2/3
 15324  1FB3  0087               	movwf	7
 15325  1FB4  0801               	movf	1,w
 15326  1FB5  1903               	btfsc	3,2
 15327  1FB6  2FBC               	goto	l3198
 15328  1FB7  3001               	movlw	1
 15329  1FB8  00F2               	movwf	??_strlen
 15330  1FB9  0872               	movf	??_strlen,w
 15331  1FBA  07F4               	addwf	strlen@s,f
 15332  1FBB  2FB0               	goto	l3196
 15333  1FBC                     l3198:	
 15334  1FBC  0873               	movf	strlen@a,w
 15335  1FBD  0274               	subwf	strlen@s,w
 15336  1FBE  00F0               	movwf	?_strlen
 15337  1FBF  01F1               	clrf	?_strlen+1
 15338  1FC0  1BF0               	btfsc	?_strlen,7
 15339  1FC1  03F1               	decf	?_strlen+1,f
 15340  1FC2  0008               	return
 15341  1FC3                     __end_of_strlen:	
 15342                           
 15343                           	psect	text48
 15344  0005                     __ptext48:	
 15345 ;; *************** function _fputs *****************
 15346 ;; Defined at:
 15347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 15348 ;; Parameters:    Size  Location     Type
 15349 ;;  s               1    wreg     PTR const unsigned char 
 15350 ;;		 -> dbuf(80), 
 15351 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
 15352 ;;		 -> NULL(0), 
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 15355 ;;		 -> dbuf(80), 
 15356 ;;  i               2    1[BANK0 ] int 
 15357 ;;  c               1    0[BANK0 ] unsigned char 
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  2   10[COMMON] int 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15367 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15368 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;Total ram usage:        8 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    3
 15374 ;; This function calls:
 15375 ;;		_fputc
 15376 ;; This function is called by:
 15377 ;;		_pad
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           
 15382                           ;psect for function _fputs
 15383  0005                     _fputs:	
 15384                           
 15385                           ;incstack = 0
 15386                           ; Regs used in _fputs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15387                           ;fputs@s stored from wreg
 15388  0005  0020               	movlb	0	; select bank0
 15389  0006  00A3               	movwf	fputs@s
 15390  0007  01A1               	clrf	fputs@i
 15391  0008  01A2               	clrf	fputs@i+1
 15392  0009                     l3190:	
 15393  0009  0821               	movf	fputs@i,w
 15394  000A  0723               	addwf	fputs@s,w
 15395  000B  00FB               	movwf	??_fputs
 15396  000C  087B               	movf	??_fputs,w
 15397  000D  0086               	movwf	6
 15398  000E  3001               	movlw	1	; select bank2/3
 15399  000F  0087               	movwf	7
 15400  0010  0801               	movf	1,w
 15401  0011  00FC               	movwf	??_fputs+1
 15402  0012  087C               	movf	??_fputs+1,w
 15403  0013  00A0               	movwf	fputs@c
 15404  0014  0820               	movf	fputs@c,w
 15405  0015  1903               	btfsc	3,2
 15406  0016  0008               	return
 15407  0017  0820               	movf	fputs@c,w
 15408  0018  00FB               	movwf	??_fputs
 15409  0019  01FC               	clrf	??_fputs+1
 15410  001A  087B               	movf	??_fputs,w
 15411  001B  00F2               	movwf	fputc@c
 15412  001C  087C               	movf	??_fputs+1,w
 15413  001D  00F3               	movwf	fputc@c+1
 15414  001E  087A               	movf	fputs@fp,w
 15415  001F  00FD               	movwf	??_fputs+2
 15416  0020  087D               	movf	??_fputs+2,w
 15417  0021  00F4               	movwf	fputc@fp
 15418  0022  3190  20FA  3180   	fcall	_fputc
 15419  0025  3001               	movlw	1
 15420  0026  0020               	movlb	0	; select bank0
 15421  0027  07A1               	addwf	fputs@i,f
 15422  0028  3000               	movlw	0
 15423  0029  3DA2               	addwfc	fputs@i+1,f
 15424  002A  2809               	goto	l3190
 15425  002B                     __end_of_fputs:	
 15426                           
 15427                           	psect	text49
 15428  10FA                     __ptext49:	
 15429 ;; *************** function _fputc *****************
 15430 ;; Defined at:
 15431 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 15432 ;; Parameters:    Size  Location     Type
 15433 ;;  c               2    2[COMMON] int 
 15434 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
 15435 ;;		 -> NULL(0), 
 15436 ;; Auto vars:     Size  Location     Type
 15437 ;;		None
 15438 ;; Return value:  Size  Location     Type
 15439 ;;                  2    2[COMMON] int 
 15440 ;; Registers used:
 15441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15442 ;; Tracked objects:
 15443 ;;		On entry : 0/0
 15444 ;;		On exit  : 0/0
 15445 ;;		Unchanged: 0/0
 15446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15447 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15450 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15451 ;;Total ram usage:        8 bytes
 15452 ;; Hardware stack levels used:    1
 15453 ;; Hardware stack levels required when called:    2
 15454 ;; This function calls:
 15455 ;;		_putch
 15456 ;; This function is called by:
 15457 ;;		_pad
 15458 ;;		_vfpfcnvrt
 15459 ;;		_fputs
 15460 ;; This function uses a non-reentrant model
 15461 ;;
 15462                           
 15463                           
 15464                           ;psect for function _fputc
 15465  10FA                     _fputc:	
 15466                           
 15467                           ;incstack = 0
 15468                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15469  10FA  0874               	movf	fputc@fp,w
 15470  10FB  1D03               	btfss	3,2
 15471  10FC  0874               	movf	fputc@fp,w
 15472  10FD  1D03               	btfss	3,2
 15473  10FE  2903               	goto	l3176
 15474  10FF  0872               	movf	fputc@c,w
 15475  1100  319E  269C         	fcall	_putch
 15476  1102  0008               	return
 15477  1103                     l3176:	
 15478  1103  0874               	movf	fputc@fp,w
 15479  1104  3E03               	addlw	3
 15480  1105  0086               	movwf	6
 15481  1106  0187               	clrf	7
 15482  1107  0016               	moviw fsr1++
 15483  1108  0401               	iorwf	1,w
 15484  1109  1903               	btfsc	3,2
 15485  110A  2926               	goto	l3180
 15486  110B  0874               	movf	fputc@fp,w
 15487  110C  3E03               	addlw	3
 15488  110D  0086               	movwf	6
 15489  110E  0187               	clrf	7
 15490  110F  3F40               	moviw [0]fsr1
 15491  1110  00F5               	movwf	??_fputc
 15492  1111  3F41               	moviw [1]fsr1
 15493  1112  00F6               	movwf	??_fputc+1
 15494  1113  0A74               	incf	fputc@fp,w
 15495  1114  0086               	movwf	6
 15496  1115  0187               	clrf	7
 15497  1116  3F40               	moviw [0]fsr1
 15498  1117  00F7               	movwf	??_fputc+2
 15499  1118  3F41               	moviw [1]fsr1
 15500  1119  00F8               	movwf	??_fputc+3
 15501  111A  0878               	movf	??_fputc+3,w
 15502  111B  3A80               	xorlw	128
 15503  111C  00F9               	movwf	??_fputc+4
 15504  111D  0876               	movf	??_fputc+1,w
 15505  111E  3A80               	xorlw	128
 15506  111F  0279               	subwf	??_fputc+4,w
 15507  1120  1D03               	skipz
 15508  1121  2924               	goto	u3145
 15509  1122  0875               	movf	??_fputc,w
 15510  1123  0277               	subwf	??_fputc+2,w
 15511  1124                     u3145:	
 15512  1124  1803               	skipnc
 15513  1125  0008               	return
 15514  1126                     l3180:	
 15515  1126  0A74               	incf	fputc@fp,w
 15516  1127  0086               	movwf	6
 15517  1128  0187               	clrf	7
 15518  1129  3001               	movlw	1
 15519  112A  0781               	addwf	1,f
 15520  112B  3141               	addfsr 1,1
 15521  112C  1803               	skipnc
 15522  112D  0A81               	incf	1,f
 15523  112E  0008               	return
 15524  112F                     __end_of_fputc:	
 15525                           
 15526                           	psect	text50
 15527  1E9C                     __ptext50:	
 15528 ;; *************** function _putch *****************
 15529 ;; Defined at:
 15530 ;;		line 145 in file "mcc_generated_files/eusart.c"
 15531 ;; Parameters:    Size  Location     Type
 15532 ;;  txData          1    wreg     unsigned char 
 15533 ;; Auto vars:     Size  Location     Type
 15534 ;;  txData          1    1[COMMON] unsigned char 
 15535 ;; Return value:  Size  Location     Type
 15536 ;;                  1    wreg      void 
 15537 ;; Registers used:
 15538 ;;		wreg, status,2, status,0, pclath, cstack
 15539 ;; Tracked objects:
 15540 ;;		On entry : 0/0
 15541 ;;		On exit  : 0/0
 15542 ;;		Unchanged: 0/0
 15543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15548 ;;Total ram usage:        1 bytes
 15549 ;; Hardware stack levels used:    1
 15550 ;; Hardware stack levels required when called:    1
 15551 ;; This function calls:
 15552 ;;		_EUSART_Write
 15553 ;; This function is called by:
 15554 ;;		_fputc
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           
 15559                           ;psect for function _putch
 15560  1E9C                     _putch:	
 15561                           
 15562                           ;incstack = 0
 15563                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 15564                           ;putch@txData stored from wreg
 15565  1E9C  00F1               	movwf	putch@txData
 15566                           
 15567                           ;mcc_generated_files/eusart.c: 145: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 146: {;mcc_generated_files/eusart.c: 147:     EUSART_Write(txData);
 15568  1E9D  0871               	movf	putch@txData,w
 15569  1E9E  319E  26CA         	fcall	_EUSART_Write
 15570  1EA0  0008               	return
 15571  1EA1                     __end_of_putch:	
 15572                           
 15573                           	psect	text51
 15574  1ECA                     __ptext51:	
 15575 ;; *************** function _EUSART_Write *****************
 15576 ;; Defined at:
 15577 ;;		line 131 in file "mcc_generated_files/eusart.c"
 15578 ;; Parameters:    Size  Location     Type
 15579 ;;  txData          1    wreg     unsigned char 
 15580 ;; Auto vars:     Size  Location     Type
 15581 ;;  txData          1    0[COMMON] unsigned char 
 15582 ;; Return value:  Size  Location     Type
 15583 ;;                  1    wreg      void 
 15584 ;; Registers used:
 15585 ;;		wreg
 15586 ;; Tracked objects:
 15587 ;;		On entry : 0/0
 15588 ;;		On exit  : 0/0
 15589 ;;		Unchanged: 0/0
 15590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;Total ram usage:        1 bytes
 15596 ;; Hardware stack levels used:    1
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_putch
 15601 ;; This function uses a non-reentrant model
 15602 ;;
 15603                           
 15604                           
 15605                           ;psect for function _EUSART_Write
 15606  1ECA                     _EUSART_Write:	
 15607                           
 15608                           ;incstack = 0
 15609                           ; Regs used in _EUSART_Write: [wreg]
 15610                           ;EUSART_Write@txData stored from wreg
 15611  1ECA  00F0               	movwf	EUSART_Write@txData
 15612  1ECB                     l518:	
 15613                           ;mcc_generated_files/eusart.c: 134:     {;mcc_generated_files/eusart.c: 135:     }
 15614                           
 15615                           
 15616                           ;mcc_generated_files/eusart.c: 133:     while(0 == PIR3bits.TXIF)
 15617  1ECB  002E               	movlb	14	; select bank14
 15618  1ECC  1E0F               	btfss	15,4	;volatile
 15619  1ECD  2ECB               	goto	l518
 15620                           
 15621                           ;mcc_generated_files/eusart.c: 137:     TX1REG = txData;
 15622  1ECE  0870               	movf	EUSART_Write@txData,w
 15623  1ECF  0022               	movlb	2	; select bank2
 15624  1ED0  009A               	movwf	26	;volatile
 15625  1ED1  0008               	return
 15626  1ED2                     __end_of_EUSART_Write:	
 15627                           
 15628                           	psect	text52
 15629  1F7D                     __ptext52:	
 15630 ;; *************** function _abs *****************
 15631 ;; Defined at:
 15632 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 15633 ;; Parameters:    Size  Location     Type
 15634 ;;  a               2    3[COMMON] int 
 15635 ;; Auto vars:     Size  Location     Type
 15636 ;;		None
 15637 ;; Return value:  Size  Location     Type
 15638 ;;                  2    3[COMMON] int 
 15639 ;; Registers used:
 15640 ;;		wreg, status,2, status,0
 15641 ;; Tracked objects:
 15642 ;;		On entry : 0/0
 15643 ;;		On exit  : 0/0
 15644 ;;		Unchanged: 0/0
 15645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15649 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15650 ;;Total ram usage:        4 bytes
 15651 ;; Hardware stack levels used:    1
 15652 ;; This function calls:
 15653 ;;		Nothing
 15654 ;; This function is called by:
 15655 ;;		_dtoa
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           
 15660                           ;psect for function _abs
 15661  1F7D                     _abs:	
 15662                           
 15663                           ;incstack = 0
 15664                           ; Regs used in _abs: [wreg+status,2+status,0]
 15665  1F7D  0874               	movf	abs@a+1,w
 15666  1F7E  3A80               	xorlw	128
 15667  1F7F  00F5               	movwf	??_abs
 15668  1F80  3080               	movlw	128
 15669  1F81  0275               	subwf	??_abs,w
 15670  1F82  1D03               	skipz
 15671  1F83  2F86               	goto	u3695
 15672  1F84  3001               	movlw	1
 15673  1F85  0273               	subwf	abs@a,w
 15674  1F86                     u3695:	
 15675  1F86  1803               	skipnc
 15676  1F87  0008               	return
 15677  1F88  0973               	comf	abs@a,w
 15678  1F89  00F5               	movwf	??_abs
 15679  1F8A  0974               	comf	abs@a+1,w
 15680  1F8B  00F6               	movwf	??_abs+1
 15681  1F8C  0AF5               	incf	??_abs,f
 15682  1F8D  1903               	skipnz
 15683  1F8E  0AF6               	incf	??_abs+1,f
 15684  1F8F  0875               	movf	??_abs,w
 15685  1F90  00F3               	movwf	?_abs
 15686  1F91  0876               	movf	??_abs+1,w
 15687  1F92  00F4               	movwf	?_abs+1
 15688  1F93  0008               	return
 15689  1F94                     __end_of_abs:	
 15690                           
 15691                           	psect	text53
 15692  1631                     __ptext53:	
 15693 ;; *************** function ___aomod *****************
 15694 ;; Defined at:
 15695 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;  divisor         8    0[BANK0 ] long long 
 15698 ;;  dividend        8    8[BANK0 ] long long 
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;  sign            1    2[COMMON] unsigned char 
 15701 ;;  counter         1    1[COMMON] unsigned char 
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  8    0[BANK0 ] long long 
 15704 ;; Registers used:
 15705 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/0
 15708 ;;		On exit  : 0/0
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15711 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15714 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15715 ;;Total ram usage:       19 bytes
 15716 ;; Hardware stack levels used:    1
 15717 ;; This function calls:
 15718 ;;		Nothing
 15719 ;; This function is called by:
 15720 ;;		_dtoa
 15721 ;; This function uses a non-reentrant model
 15722 ;;
 15723                           
 15724                           
 15725                           ;psect for function ___aomod
 15726  1631                     ___aomod:	
 15727                           
 15728                           ;incstack = 0
 15729                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 15730  1631  01F2               	clrf	___aomod@sign
 15731  1632  3028               	movlw	low ___aomod@dividend
 15732  1633  0086               	movwf	6
 15733  1634  3000               	movlw	high ___aomod@dividend
 15734  1635  0087               	movwf	7
 15735  1636  3F47               	moviw [7]fsr1
 15736  1637  00F0               	movwf	??___aomod
 15737  1638  1FF0               	btfss	??___aomod,7
 15738  1639  2E5B               	goto	l3550
 15739  163A  0020               	movlb	0	; select bank0
 15740  163B  09A8               	comf	___aomod@dividend,f
 15741  163C  09A9               	comf	___aomod@dividend+1,f
 15742  163D  09AA               	comf	___aomod@dividend+2,f
 15743  163E  09AB               	comf	___aomod@dividend+3,f
 15744  163F  09AC               	comf	___aomod@dividend+4,f
 15745  1640  09AD               	comf	___aomod@dividend+5,f
 15746  1641  09AE               	comf	___aomod@dividend+6,f
 15747  1642  09AF               	comf	___aomod@dividend+7,f
 15748  1643  0AA8               	incf	___aomod@dividend,f
 15749  1644  1D03               	skipz
 15750  1645  2E59               	goto	u405lld
 15751  1646  0AA9               	incf	___aomod@dividend+1,f
 15752  1647  1D03               	skipz
 15753  1648  2E59               	goto	u405lld
 15754  1649  0AAA               	incf	___aomod@dividend+2,f
 15755  164A  1D03               	skipz
 15756  164B  2E59               	goto	u405lld
 15757  164C  0AAB               	incf	___aomod@dividend+3,f
 15758  164D  1D03               	skipz
 15759  164E  2E59               	goto	u405lld
 15760  164F  0AAC               	incf	___aomod@dividend+4,f
 15761  1650  1D03               	skipz
 15762  1651  2E59               	goto	u405lld
 15763  1652  0AAD               	incf	___aomod@dividend+5,f
 15764  1653  1D03               	skipz
 15765  1654  2E59               	goto	u405lld
 15766  1655  0AAE               	incf	___aomod@dividend+6,f
 15767  1656  1D03               	skipz
 15768  1657  2E59               	goto	u405lld
 15769  1658  0AAF               	incf	___aomod@dividend+7,f
 15770  1659                     u405lld:	
 15771  1659  01F2               	clrf	___aomod@sign
 15772  165A  0AF2               	incf	___aomod@sign,f
 15773  165B                     l3550:	
 15774  165B  3020               	movlw	low ___aomod@divisor
 15775  165C  0086               	movwf	6
 15776  165D  3000               	movlw	high ___aomod@divisor
 15777  165E  0087               	movwf	7
 15778  165F  3F47               	moviw [7]fsr1
 15779  1660  00F0               	movwf	??___aomod
 15780  1661  1FF0               	btfss	??___aomod,7
 15781  1662  2E82               	goto	l3554
 15782  1663  0020               	movlb	0	; select bank0
 15783  1664  09A0               	comf	___aomod@divisor,f
 15784  1665  09A1               	comf	___aomod@divisor+1,f
 15785  1666  09A2               	comf	___aomod@divisor+2,f
 15786  1667  09A3               	comf	___aomod@divisor+3,f
 15787  1668  09A4               	comf	___aomod@divisor+4,f
 15788  1669  09A5               	comf	___aomod@divisor+5,f
 15789  166A  09A6               	comf	___aomod@divisor+6,f
 15790  166B  09A7               	comf	___aomod@divisor+7,f
 15791  166C  0AA0               	incf	___aomod@divisor,f
 15792  166D  1D03               	skipz
 15793  166E  2E82               	goto	l3554
 15794  166F  0AA1               	incf	___aomod@divisor+1,f
 15795  1670  1D03               	skipz
 15796  1671  2E82               	goto	l3554
 15797  1672  0AA2               	incf	___aomod@divisor+2,f
 15798  1673  1D03               	skipz
 15799  1674  2E82               	goto	l3554
 15800  1675  0AA3               	incf	___aomod@divisor+3,f
 15801  1676  1D03               	skipz
 15802  1677  2E82               	goto	l3554
 15803  1678  0AA4               	incf	___aomod@divisor+4,f
 15804  1679  1D03               	skipz
 15805  167A  2E82               	goto	l3554
 15806  167B  0AA5               	incf	___aomod@divisor+5,f
 15807  167C  1D03               	skipz
 15808  167D  2E82               	goto	l3554
 15809  167E  0AA6               	incf	___aomod@divisor+6,f
 15810  167F  1D03               	skipz
 15811  1680  2E82               	goto	l3554
 15812  1681  0AA7               	incf	___aomod@divisor+7,f
 15813  1682                     l3554:	
 15814  1682  0020               	movlb	0	; select bank0
 15815  1683  0820               	movf	___aomod@divisor,w
 15816  1684  0421               	iorwf	___aomod@divisor+1,w
 15817  1685  0422               	iorwf	___aomod@divisor+2,w
 15818  1686  0423               	iorwf	___aomod@divisor+3,w
 15819  1687  0424               	iorwf	___aomod@divisor+4,w
 15820  1688  0425               	iorwf	___aomod@divisor+5,w
 15821  1689  0426               	iorwf	___aomod@divisor+6,w
 15822  168A  0427               	iorwf	___aomod@divisor+7,w
 15823  168B  1903               	skipnz
 15824  168C  2EDA               	goto	l3570
 15825  168D  01F1               	clrf	___aomod@counter
 15826  168E  0AF1               	incf	___aomod@counter,f
 15827  168F                     l3562:	
 15828  168F  1BA7               	btfsc	___aomod@divisor+7,7
 15829  1690  2E9E               	goto	l3564
 15830  1691  35A0               	lslf	___aomod@divisor,f
 15831  1692  0DA1               	rlf	___aomod@divisor+1,f
 15832  1693  0DA2               	rlf	___aomod@divisor+2,f
 15833  1694  0DA3               	rlf	___aomod@divisor+3,f
 15834  1695  0DA4               	rlf	___aomod@divisor+4,f
 15835  1696  0DA5               	rlf	___aomod@divisor+5,f
 15836  1697  0DA6               	rlf	___aomod@divisor+6,f
 15837  1698  0DA7               	rlf	___aomod@divisor+7,f
 15838  1699  3001               	movlw	1
 15839  169A  00F0               	movwf	??___aomod
 15840  169B  0870               	movf	??___aomod,w
 15841  169C  07F1               	addwf	___aomod@counter,f
 15842  169D  2E8F               	goto	l3562
 15843  169E                     l3564:	
 15844  169E  0827               	movf	___aomod@divisor+7,w
 15845  169F  022F               	subwf	___aomod@dividend+7,w
 15846  16A0  1D03               	skipz
 15847  16A1  2EBC               	goto	u4105
 15848  16A2  0826               	movf	___aomod@divisor+6,w
 15849  16A3  022E               	subwf	___aomod@dividend+6,w
 15850  16A4  1D03               	skipz
 15851  16A5  2EBC               	goto	u4105
 15852  16A6  0825               	movf	___aomod@divisor+5,w
 15853  16A7  022D               	subwf	___aomod@dividend+5,w
 15854  16A8  1D03               	skipz
 15855  16A9  2EBC               	goto	u4105
 15856  16AA  0824               	movf	___aomod@divisor+4,w
 15857  16AB  022C               	subwf	___aomod@dividend+4,w
 15858  16AC  1D03               	skipz
 15859  16AD  2EBC               	goto	u4105
 15860  16AE  0823               	movf	___aomod@divisor+3,w
 15861  16AF  022B               	subwf	___aomod@dividend+3,w
 15862  16B0  1D03               	skipz
 15863  16B1  2EBC               	goto	u4105
 15864  16B2  0822               	movf	___aomod@divisor+2,w
 15865  16B3  022A               	subwf	___aomod@dividend+2,w
 15866  16B4  1D03               	skipz
 15867  16B5  2EBC               	goto	u4105
 15868  16B6  0821               	movf	___aomod@divisor+1,w
 15869  16B7  0229               	subwf	___aomod@dividend+1,w
 15870  16B8  1D03               	skipz
 15871  16B9  2EBC               	goto	u4105
 15872  16BA  0820               	movf	___aomod@divisor,w
 15873  16BB  0228               	subwf	___aomod@dividend,w
 15874  16BC                     u4105:	
 15875  16BC  1C03               	skipc
 15876  16BD  2ECE               	goto	l3568
 15877  16BE  0820               	movf	___aomod@divisor,w
 15878  16BF  02A8               	subwf	___aomod@dividend,f
 15879  16C0  0821               	movf	___aomod@divisor+1,w
 15880  16C1  3BA9               	subwfb	___aomod@dividend+1,f
 15881  16C2  0822               	movf	___aomod@divisor+2,w
 15882  16C3  3BAA               	subwfb	___aomod@dividend+2,f
 15883  16C4  0823               	movf	___aomod@divisor+3,w
 15884  16C5  3BAB               	subwfb	___aomod@dividend+3,f
 15885  16C6  0824               	movf	___aomod@divisor+4,w
 15886  16C7  3BAC               	subwfb	___aomod@dividend+4,f
 15887  16C8  0825               	movf	___aomod@divisor+5,w
 15888  16C9  3BAD               	subwfb	___aomod@dividend+5,f
 15889  16CA  0826               	movf	___aomod@divisor+6,w
 15890  16CB  3BAE               	subwfb	___aomod@dividend+6,f
 15891  16CC  0827               	movf	___aomod@divisor+7,w
 15892  16CD  3BAF               	subwfb	___aomod@dividend+7,f
 15893  16CE                     l3568:	
 15894  16CE  36A7               	lsrf	___aomod@divisor+7,f
 15895  16CF  0CA6               	rrf	___aomod@divisor+6,f
 15896  16D0  0CA5               	rrf	___aomod@divisor+5,f
 15897  16D1  0CA4               	rrf	___aomod@divisor+4,f
 15898  16D2  0CA3               	rrf	___aomod@divisor+3,f
 15899  16D3  0CA2               	rrf	___aomod@divisor+2,f
 15900  16D4  0CA1               	rrf	___aomod@divisor+1,f
 15901  16D5  0CA0               	rrf	___aomod@divisor,f
 15902  16D6  3001               	movlw	1
 15903  16D7  02F1               	subwf	___aomod@counter,f
 15904  16D8  1D03               	btfss	3,2
 15905  16D9  2E9E               	goto	l3564
 15906  16DA                     l3570:	
 15907  16DA  0872               	movf	___aomod@sign,w
 15908  16DB  1903               	btfsc	3,2
 15909  16DC  2EFB               	goto	l995
 15910  16DD  09A8               	comf	___aomod@dividend,f
 15911  16DE  09A9               	comf	___aomod@dividend+1,f
 15912  16DF  09AA               	comf	___aomod@dividend+2,f
 15913  16E0  09AB               	comf	___aomod@dividend+3,f
 15914  16E1  09AC               	comf	___aomod@dividend+4,f
 15915  16E2  09AD               	comf	___aomod@dividend+5,f
 15916  16E3  09AE               	comf	___aomod@dividend+6,f
 15917  16E4  09AF               	comf	___aomod@dividend+7,f
 15918  16E5  0AA8               	incf	___aomod@dividend,f
 15919  16E6  1D03               	skipz
 15920  16E7  2EFB               	goto	l995
 15921  16E8  0AA9               	incf	___aomod@dividend+1,f
 15922  16E9  1D03               	skipz
 15923  16EA  2EFB               	goto	l995
 15924  16EB  0AAA               	incf	___aomod@dividend+2,f
 15925  16EC  1D03               	skipz
 15926  16ED  2EFB               	goto	l995
 15927  16EE  0AAB               	incf	___aomod@dividend+3,f
 15928  16EF  1D03               	skipz
 15929  16F0  2EFB               	goto	l995
 15930  16F1  0AAC               	incf	___aomod@dividend+4,f
 15931  16F2  1D03               	skipz
 15932  16F3  2EFB               	goto	l995
 15933  16F4  0AAD               	incf	___aomod@dividend+5,f
 15934  16F5  1D03               	skipz
 15935  16F6  2EFB               	goto	l995
 15936  16F7  0AAE               	incf	___aomod@dividend+6,f
 15937  16F8  1D03               	skipz
 15938  16F9  2EFB               	goto	l995
 15939  16FA  0AAF               	incf	___aomod@dividend+7,f
 15940  16FB                     l995:	
 15941  16FB  0020               	movlb	0	; select bank0
 15942  16FC  0828               	movf	___aomod@dividend,w
 15943  16FD  00A0               	movwf	?___aomod
 15944  16FE  0829               	movf	___aomod@dividend+1,w
 15945  16FF  00A1               	movwf	?___aomod+1
 15946  1700  082A               	movf	___aomod@dividend+2,w
 15947  1701  00A2               	movwf	?___aomod+2
 15948  1702  082B               	movf	___aomod@dividend+3,w
 15949  1703  00A3               	movwf	?___aomod+3
 15950  1704  082C               	movf	___aomod@dividend+4,w
 15951  1705  00A4               	movwf	?___aomod+4
 15952  1706  082D               	movf	___aomod@dividend+5,w
 15953  1707  00A5               	movwf	?___aomod+5
 15954  1708  082E               	movf	___aomod@dividend+6,w
 15955  1709  00A6               	movwf	?___aomod+6
 15956  170A  082F               	movf	___aomod@dividend+7,w
 15957  170B  00A7               	movwf	?___aomod+7
 15958  170C  0008               	return
 15959  170D                     __end_of___aomod:	
 15960                           
 15961                           	psect	text54
 15962  170D                     __ptext54:	
 15963 ;; *************** function ___aodiv *****************
 15964 ;; Defined at:
 15965 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 15966 ;; Parameters:    Size  Location     Type
 15967 ;;  divisor         8    0[BANK0 ] long long 
 15968 ;;  dividend        8    8[BANK0 ] long long 
 15969 ;; Auto vars:     Size  Location     Type
 15970 ;;  quotient        8    3[COMMON] long long 
 15971 ;;  sign            1    2[COMMON] unsigned char 
 15972 ;;  counter         1    1[COMMON] unsigned char 
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  8    0[BANK0 ] long long 
 15975 ;; Registers used:
 15976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15977 ;; Tracked objects:
 15978 ;;		On entry : 0/0
 15979 ;;		On exit  : 0/0
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15982 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15985 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15986 ;;Total ram usage:       27 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; This function calls:
 15989 ;;		Nothing
 15990 ;; This function is called by:
 15991 ;;		_dtoa
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           
 15996                           ;psect for function ___aodiv
 15997  170D                     ___aodiv:	
 15998                           
 15999                           ;incstack = 0
 16000                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 16001  170D  01F2               	clrf	___aodiv@sign
 16002  170E  3020               	movlw	low ___aodiv@divisor
 16003  170F  0086               	movwf	6
 16004  1710  3000               	movlw	high ___aodiv@divisor
 16005  1711  0087               	movwf	7
 16006  1712  3F47               	moviw [7]fsr1
 16007  1713  00F0               	movwf	??___aodiv
 16008  1714  1FF0               	btfss	??___aodiv,7
 16009  1715  2F37               	goto	l3512
 16010  1716  0020               	movlb	0	; select bank0
 16011  1717  09A0               	comf	___aodiv@divisor,f
 16012  1718  09A1               	comf	___aodiv@divisor+1,f
 16013  1719  09A2               	comf	___aodiv@divisor+2,f
 16014  171A  09A3               	comf	___aodiv@divisor+3,f
 16015  171B  09A4               	comf	___aodiv@divisor+4,f
 16016  171C  09A5               	comf	___aodiv@divisor+5,f
 16017  171D  09A6               	comf	___aodiv@divisor+6,f
 16018  171E  09A7               	comf	___aodiv@divisor+7,f
 16019  171F  0AA0               	incf	___aodiv@divisor,f
 16020  1720  1D03               	skipz
 16021  1721  2F35               	goto	u394lld
 16022  1722  0AA1               	incf	___aodiv@divisor+1,f
 16023  1723  1D03               	skipz
 16024  1724  2F35               	goto	u394lld
 16025  1725  0AA2               	incf	___aodiv@divisor+2,f
 16026  1726  1D03               	skipz
 16027  1727  2F35               	goto	u394lld
 16028  1728  0AA3               	incf	___aodiv@divisor+3,f
 16029  1729  1D03               	skipz
 16030  172A  2F35               	goto	u394lld
 16031  172B  0AA4               	incf	___aodiv@divisor+4,f
 16032  172C  1D03               	skipz
 16033  172D  2F35               	goto	u394lld
 16034  172E  0AA5               	incf	___aodiv@divisor+5,f
 16035  172F  1D03               	skipz
 16036  1730  2F35               	goto	u394lld
 16037  1731  0AA6               	incf	___aodiv@divisor+6,f
 16038  1732  1D03               	skipz
 16039  1733  2F35               	goto	u394lld
 16040  1734  0AA7               	incf	___aodiv@divisor+7,f
 16041  1735                     u394lld:	
 16042  1735  01F2               	clrf	___aodiv@sign
 16043  1736  0AF2               	incf	___aodiv@sign,f
 16044  1737                     l3512:	
 16045  1737  3028               	movlw	low ___aodiv@dividend
 16046  1738  0086               	movwf	6
 16047  1739  3000               	movlw	high ___aodiv@dividend
 16048  173A  0087               	movwf	7
 16049  173B  3F47               	moviw [7]fsr1
 16050  173C  00F0               	movwf	??___aodiv
 16051  173D  1FF0               	btfss	??___aodiv,7
 16052  173E  2F62               	goto	l3518
 16053  173F  0020               	movlb	0	; select bank0
 16054  1740  09A8               	comf	___aodiv@dividend,f
 16055  1741  09A9               	comf	___aodiv@dividend+1,f
 16056  1742  09AA               	comf	___aodiv@dividend+2,f
 16057  1743  09AB               	comf	___aodiv@dividend+3,f
 16058  1744  09AC               	comf	___aodiv@dividend+4,f
 16059  1745  09AD               	comf	___aodiv@dividend+5,f
 16060  1746  09AE               	comf	___aodiv@dividend+6,f
 16061  1747  09AF               	comf	___aodiv@dividend+7,f
 16062  1748  0AA8               	incf	___aodiv@dividend,f
 16063  1749  1D03               	skipz
 16064  174A  2F5E               	goto	l3516
 16065  174B  0AA9               	incf	___aodiv@dividend+1,f
 16066  174C  1D03               	skipz
 16067  174D  2F5E               	goto	l3516
 16068  174E  0AAA               	incf	___aodiv@dividend+2,f
 16069  174F  1D03               	skipz
 16070  1750  2F5E               	goto	l3516
 16071  1751  0AAB               	incf	___aodiv@dividend+3,f
 16072  1752  1D03               	skipz
 16073  1753  2F5E               	goto	l3516
 16074  1754  0AAC               	incf	___aodiv@dividend+4,f
 16075  1755  1D03               	skipz
 16076  1756  2F5E               	goto	l3516
 16077  1757  0AAD               	incf	___aodiv@dividend+5,f
 16078  1758  1D03               	skipz
 16079  1759  2F5E               	goto	l3516
 16080  175A  0AAE               	incf	___aodiv@dividend+6,f
 16081  175B  1D03               	skipz
 16082  175C  2F5E               	goto	l3516
 16083  175D  0AAF               	incf	___aodiv@dividend+7,f
 16084  175E                     l3516:	
 16085  175E  3001               	movlw	1
 16086  175F  00F0               	movwf	??___aodiv
 16087  1760  0870               	movf	??___aodiv,w
 16088  1761  06F2               	xorwf	___aodiv@sign,f
 16089  1762                     l3518:	
 16090  1762  3073               	movlw	low ___aodiv@quotient
 16091  1763  0086               	movwf	6
 16092  1764  3000               	movlw	high ___aodiv@quotient
 16093  1765  0087               	movwf	7
 16094  1766  3008               	movlw	8
 16095  1767  00F0               	movwf	??___aodiv
 16096  1768  3000               	movlw	0
 16097  1769                     u3970:	
 16098  1769  001E               	movwi fsr1++
 16099  176A  0BF0               	decfsz	??___aodiv,f
 16100  176B  2F69               	goto	u3970
 16101  176C  0020               	movlb	0	; select bank0
 16102  176D  0820               	movf	___aodiv@divisor,w
 16103  176E  0421               	iorwf	___aodiv@divisor+1,w
 16104  176F  0422               	iorwf	___aodiv@divisor+2,w
 16105  1770  0423               	iorwf	___aodiv@divisor+3,w
 16106  1771  0424               	iorwf	___aodiv@divisor+4,w
 16107  1772  0425               	iorwf	___aodiv@divisor+5,w
 16108  1773  0426               	iorwf	___aodiv@divisor+6,w
 16109  1774  0427               	iorwf	___aodiv@divisor+7,w
 16110  1775  1903               	skipnz
 16111  1776  2FCD               	goto	l3540
 16112  1777  01F1               	clrf	___aodiv@counter
 16113  1778  0AF1               	incf	___aodiv@counter,f
 16114  1779                     l3528:	
 16115  1779  1BA7               	btfsc	___aodiv@divisor+7,7
 16116  177A  2F88               	goto	l3530
 16117  177B  35A0               	lslf	___aodiv@divisor,f
 16118  177C  0DA1               	rlf	___aodiv@divisor+1,f
 16119  177D  0DA2               	rlf	___aodiv@divisor+2,f
 16120  177E  0DA3               	rlf	___aodiv@divisor+3,f
 16121  177F  0DA4               	rlf	___aodiv@divisor+4,f
 16122  1780  0DA5               	rlf	___aodiv@divisor+5,f
 16123  1781  0DA6               	rlf	___aodiv@divisor+6,f
 16124  1782  0DA7               	rlf	___aodiv@divisor+7,f
 16125  1783  3001               	movlw	1
 16126  1784  00F0               	movwf	??___aodiv
 16127  1785  0870               	movf	??___aodiv,w
 16128  1786  07F1               	addwf	___aodiv@counter,f
 16129  1787  2F79               	goto	l3528
 16130  1788                     l3530:	
 16131  1788  35F3               	lslf	___aodiv@quotient,f
 16132  1789  0DF4               	rlf	___aodiv@quotient+1,f
 16133  178A  0DF5               	rlf	___aodiv@quotient+2,f
 16134  178B  0DF6               	rlf	___aodiv@quotient+3,f
 16135  178C  0DF7               	rlf	___aodiv@quotient+4,f
 16136  178D  0DF8               	rlf	___aodiv@quotient+5,f
 16137  178E  0DF9               	rlf	___aodiv@quotient+6,f
 16138  178F  0DFA               	rlf	___aodiv@quotient+7,f
 16139  1790  0827               	movf	___aodiv@divisor+7,w
 16140  1791  022F               	subwf	___aodiv@dividend+7,w
 16141  1792  1D03               	skipz
 16142  1793  2FAE               	goto	u4005
 16143  1794  0826               	movf	___aodiv@divisor+6,w
 16144  1795  022E               	subwf	___aodiv@dividend+6,w
 16145  1796  1D03               	skipz
 16146  1797  2FAE               	goto	u4005
 16147  1798  0825               	movf	___aodiv@divisor+5,w
 16148  1799  022D               	subwf	___aodiv@dividend+5,w
 16149  179A  1D03               	skipz
 16150  179B  2FAE               	goto	u4005
 16151  179C  0824               	movf	___aodiv@divisor+4,w
 16152  179D  022C               	subwf	___aodiv@dividend+4,w
 16153  179E  1D03               	skipz
 16154  179F  2FAE               	goto	u4005
 16155  17A0  0823               	movf	___aodiv@divisor+3,w
 16156  17A1  022B               	subwf	___aodiv@dividend+3,w
 16157  17A2  1D03               	skipz
 16158  17A3  2FAE               	goto	u4005
 16159  17A4  0822               	movf	___aodiv@divisor+2,w
 16160  17A5  022A               	subwf	___aodiv@dividend+2,w
 16161  17A6  1D03               	skipz
 16162  17A7  2FAE               	goto	u4005
 16163  17A8  0821               	movf	___aodiv@divisor+1,w
 16164  17A9  0229               	subwf	___aodiv@dividend+1,w
 16165  17AA  1D03               	skipz
 16166  17AB  2FAE               	goto	u4005
 16167  17AC  0820               	movf	___aodiv@divisor,w
 16168  17AD  0228               	subwf	___aodiv@dividend,w
 16169  17AE                     u4005:	
 16170  17AE  1C03               	skipc
 16171  17AF  2FC1               	goto	l3538
 16172  17B0  0820               	movf	___aodiv@divisor,w
 16173  17B1  02A8               	subwf	___aodiv@dividend,f
 16174  17B2  0821               	movf	___aodiv@divisor+1,w
 16175  17B3  3BA9               	subwfb	___aodiv@dividend+1,f
 16176  17B4  0822               	movf	___aodiv@divisor+2,w
 16177  17B5  3BAA               	subwfb	___aodiv@dividend+2,f
 16178  17B6  0823               	movf	___aodiv@divisor+3,w
 16179  17B7  3BAB               	subwfb	___aodiv@dividend+3,f
 16180  17B8  0824               	movf	___aodiv@divisor+4,w
 16181  17B9  3BAC               	subwfb	___aodiv@dividend+4,f
 16182  17BA  0825               	movf	___aodiv@divisor+5,w
 16183  17BB  3BAD               	subwfb	___aodiv@dividend+5,f
 16184  17BC  0826               	movf	___aodiv@divisor+6,w
 16185  17BD  3BAE               	subwfb	___aodiv@dividend+6,f
 16186  17BE  0827               	movf	___aodiv@divisor+7,w
 16187  17BF  3BAF               	subwfb	___aodiv@dividend+7,f
 16188  17C0  1473               	bsf	___aodiv@quotient,0
 16189  17C1                     l3538:	
 16190  17C1  36A7               	lsrf	___aodiv@divisor+7,f
 16191  17C2  0CA6               	rrf	___aodiv@divisor+6,f
 16192  17C3  0CA5               	rrf	___aodiv@divisor+5,f
 16193  17C4  0CA4               	rrf	___aodiv@divisor+4,f
 16194  17C5  0CA3               	rrf	___aodiv@divisor+3,f
 16195  17C6  0CA2               	rrf	___aodiv@divisor+2,f
 16196  17C7  0CA1               	rrf	___aodiv@divisor+1,f
 16197  17C8  0CA0               	rrf	___aodiv@divisor,f
 16198  17C9  3001               	movlw	1
 16199  17CA  02F1               	subwf	___aodiv@counter,f
 16200  17CB  1D03               	btfss	3,2
 16201  17CC  2F88               	goto	l3530
 16202  17CD                     l3540:	
 16203  17CD  0872               	movf	___aodiv@sign,w
 16204  17CE  1903               	btfsc	3,2
 16205  17CF  2FEE               	goto	l982
 16206  17D0  09F3               	comf	___aodiv@quotient,f
 16207  17D1  09F4               	comf	___aodiv@quotient+1,f
 16208  17D2  09F5               	comf	___aodiv@quotient+2,f
 16209  17D3  09F6               	comf	___aodiv@quotient+3,f
 16210  17D4  09F7               	comf	___aodiv@quotient+4,f
 16211  17D5  09F8               	comf	___aodiv@quotient+5,f
 16212  17D6  09F9               	comf	___aodiv@quotient+6,f
 16213  17D7  09FA               	comf	___aodiv@quotient+7,f
 16214  17D8  0AF3               	incf	___aodiv@quotient,f
 16215  17D9  1D03               	skipz
 16216  17DA  2FEE               	goto	l982
 16217  17DB  0AF4               	incf	___aodiv@quotient+1,f
 16218  17DC  1D03               	skipz
 16219  17DD  2FEE               	goto	l982
 16220  17DE  0AF5               	incf	___aodiv@quotient+2,f
 16221  17DF  1D03               	skipz
 16222  17E0  2FEE               	goto	l982
 16223  17E1  0AF6               	incf	___aodiv@quotient+3,f
 16224  17E2  1D03               	skipz
 16225  17E3  2FEE               	goto	l982
 16226  17E4  0AF7               	incf	___aodiv@quotient+4,f
 16227  17E5  1D03               	skipz
 16228  17E6  2FEE               	goto	l982
 16229  17E7  0AF8               	incf	___aodiv@quotient+5,f
 16230  17E8  1D03               	skipz
 16231  17E9  2FEE               	goto	l982
 16232  17EA  0AF9               	incf	___aodiv@quotient+6,f
 16233  17EB  1D03               	skipz
 16234  17EC  2FEE               	goto	l982
 16235  17ED  0AFA               	incf	___aodiv@quotient+7,f
 16236  17EE                     l982:	
 16237  17EE  0873               	movf	___aodiv@quotient,w
 16238  17EF  0020               	movlb	0	; select bank0
 16239  17F0  00A0               	movwf	?___aodiv
 16240  17F1  0874               	movf	___aodiv@quotient+1,w
 16241  17F2  00A1               	movwf	?___aodiv+1
 16242  17F3  0875               	movf	___aodiv@quotient+2,w
 16243  17F4  00A2               	movwf	?___aodiv+2
 16244  17F5  0876               	movf	___aodiv@quotient+3,w
 16245  17F6  00A3               	movwf	?___aodiv+3
 16246  17F7  0877               	movf	___aodiv@quotient+4,w
 16247  17F8  00A4               	movwf	?___aodiv+4
 16248  17F9  0878               	movf	___aodiv@quotient+5,w
 16249  17FA  00A5               	movwf	?___aodiv+5
 16250  17FB  0879               	movf	___aodiv@quotient+6,w
 16251  17FC  00A6               	movwf	?___aodiv+6
 16252  17FD  087A               	movf	___aodiv@quotient+7,w
 16253  17FE  00A7               	movwf	?___aodiv+7
 16254  17FF  0008               	return
 16255  1800                     __end_of___aodiv:	
 16256  007E                     btemp	set	126	;btemp
 16257  007E                     wtemp0	set	126


Data Sizes:
    Strings     124
    Constant    0
    Data        0
    BSS         97
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     79      79
    BANK2            80     26      50
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[19]), STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[26]), 
		 -> STR_2(CODE[16]), STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S1763_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[19]), STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[26]), 
		 -> STR_2(CODE[16]), STR_1(CODE[13]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[19]), STR_5(CODE[15]), STR_4(CODE[16]), STR_3(CODE[26]), 
		 -> STR_2(CODE[16]), STR_1(CODE[13]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    ___xxtofl->_TMR1_ReadTimer
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _vfpfcnvrt->_tolower
    _efgtoa->_tolower
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___flmul->_TMR1_ReadTimer
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod

Critical Paths under _main in BANK0

    _main->_Backwards
    _main->_Right
    _echo->_printf
    _Right->_printf
    _Backwards->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    _main->_printf
    _echo->_printf
    _Right->_printf
    _Backwards->_printf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_echo
    _echo->_printf
    _Right->_printf
    _Backwards->_printf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  129706
                                             18 BANK2      8     8      0
                          _Backwards
               _CLC1_OutputStatusGet
                            _Forward
                              _Right
                  _SYSTEM_Initialize
                               _Stop
                             ___flge
                               _echo
                             _printf
 ---------------------------------------------------------------------------------
 (1) _echo                                                12     8      4   35003
                                              6 BANK2     12     8      4
                     _TMR1_ReadTimer
   _TMR1_StartSinglePulseAcquisition
                    _TMR1_WriteTimer
                            ___flmul
                           ___xxtofl
                             _printf
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
                     _TMR1_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (2) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartSinglePulseAcquisition                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_ReadTimer                                      11     9      2      69
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (1) _Stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                    _CLC1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM7_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM7_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Right                                                1     1      0   31074
                                             78 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Forward                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CLC1_OutputStatusGet                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Backwards                                            1     1      0   31074
                                             78 BANK0      1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   31074
                                             77 BANK0      1     1      0
                                             76 BANK1      3     3      0
                                              0 BANK2      6     0      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   30558
                                             69 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   30219
                                             61 BANK0      8     6      2
                                             57 BANK1     19    19      0
                               _dtoa
                             _efgtoa
                              _fputc
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              66    61      5   21750
                                             52 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             40 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3177
                                             14 BANK0     26    18      8
                     _TMR1_ReadTimer (ARG)
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1094
                                             40 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4739
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3116
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1127
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     812
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Backwards
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___flmul
               _TMR1_ReadTimer (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _TMR1_ReadTimer (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _CLC1_OutputStatusGet
   _Forward
   _Right
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___flmul
               _TMR1_ReadTimer (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _TMR1_ReadTimer (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _SYSTEM_Initialize
     _CLC1_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM7_Initialize
     _TMR1_Initialize
     _TMR2_Initialize
     _TMR6_Initialize
   _Stop
   ___flge
     ___flmul (ARG)
       _TMR1_ReadTimer (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _TMR1_ReadTimer (ARG)
   _echo
     _TMR1_ReadTimer
     _TMR1_StartSinglePulseAcquisition
     _TMR1_WriteTimer
     ___flmul
       _TMR1_ReadTimer (ARG)
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _TMR1_ReadTimer (ARG)
     ___xxtofl
       _TMR1_ReadTimer (ARG)
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___flmul
               _TMR1_ReadTimer (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _TMR1_ReadTimer (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 _TMR1_ReadTimer (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _TMR1_ReadTimer (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _EUSART_Write
           _isupper
           _strncmp
           _tolower
             _isupper
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               _TMR1_ReadTimer (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _TMR1_ReadTimer (ARG)
           ___flmul
             _TMR1_ReadTimer (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _TMR1_ReadTimer (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               _TMR1_ReadTimer (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _TMR1_ReadTimer (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _EUSART_Write
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1A      32       9       62.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     12F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     12F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 19 19:06:45 2019

                                 ___fldiv@aexp 002C                                   ___fldiv@bexp 002B  
                                 ___fldiv@sign 0024                                    __CFG_CP$OFF 0000  
                                 ___awdiv@sign 0076                            __Umul8_16@word_mpld 0076  
                                  __CFG_LVP$ON 0000                                            l312 12CF  
                                          l290 14CC                                            l518 1ECB  
                                          l732 1222                                            l740 08A9  
                                          l741 08B0                                            l735 1242  
                                          l807 0410                                            l736 124E  
                                          l745 08CB                                            l825 05AE  
                                          l746 08DF                                            l749 0975  
                                          l796 03D2                                            l797 03BF  
                                          l982 17EE                                            l995 16FB  
                                          _PR2 028D                                   __CFG_CPD$OFF 0000  
                                          _PR6 0299                                _timer1ReloadVal 0150  
                                          _abs 1F7D                                            _pad 120A  
               ?_EUSART_SetFramingErrorHandler 0070                        __size_of_PMD_Initialize 0008  
                                 ___awmod@sign 0076                                _TMR2_Initialize 1F05  
                                 __CFG_BORV$LO 0000                                            wreg 0009  
                                 ___flmul@aexp 0040                                   ___flmul@bexp 0041  
                                 ___flmul@sign 003B                                   ___flmul@temp 0046  
                                 ___flmul@prod 0042                                   __CFG_ZCD$OFF 0000  
                                 ___fltol@exp1 007A                                           l1051 118E  
                                         ?_abs 0073                                           l1052 11A8  
                                         l1060 13BF                                           l1204 0B1B  
                                         l1063 140D                                           l1225 0B94  
                                         l1217 0B7B                                           l1330 1488  
                                         l1083 12A3                                           l1331 1492  
                                         l1323 1474                                           l1260 017B  
                                         l1261 0193                                           l1317 143E  
                                         l1263 01A0                                           l1239 0074  
                                         l1183 0A01                                           l4000 0D92  
                                         l1360 1628                                           l1434 1FF1  
                                         l1291 0DBC                                           l1187 0A95  
                                         l3220 09CE                                           l1189 0A77  
                                         l4030 08C3                                           l4006 0DA9  
                                         l3310 0AA3                                           l3302 0A91  
                                         l4040 090C                                           l3320 0AB8  
                                         l3224 09D1                                           l4050 08E7  
                                         l3226 09D9                                           l4210 0439  
                                         l4106 021A                                           l3180 1126  
                                         l4036 08DA                                           l3404 1FEB  
                                         l3244 09F6                                           l3500 160B  
                                         l4220 044B                                           l4116 024D  
                                         l4124 0272                                           l3190 0009  
                                         l3422 1220                                           l4062 0989  
                                         l3318 0AB6                                           l3254 0A0B  
                                         l4302 0703                                           l4222 050A  
                                         l4206 0431                                           l4150 02EB  
                                         l4134 02A5                                           l4142 02CA  
                                         l3512 1737                                           l3176 1103  
                                         l4072 09A1                                           l3600 083B  
                                         l3360 0B41                                           l3328 0AC8  
                                         l3248 09F9                                           l4320 072D  
                                         l4240 05AC                                           l4232 057E  
                                         l4160 0376                                           l3530 1788  
                                         l3418 1218                                           l4058 0981  
                                         l3610 0856                                           l3354 0B3A  
                                         l3346 0B2D                                           l3338 0B13  
                                         l3362 0B43                                           l4330 0729  
                                         l4242 05B5                                           l4226 055D  
                                         l4154 031B                                           l4162 039B  
                                         l3540 17CD                                           l3516 175E  
                                         l3196 1FB0                                           l3428 1224  
                                         l4068 0994                                           l3372 0B4E  
                                         l3292 0A80                                           l3284 0A47  
                                         l3452 137C                                           l4340 077C  
                                         l4332 0764                                           l4180 03DD  
                                         l4172 03CC                                           l4156 0355  
                                         l4412 0E4C                                           l3518 1762  
                                         l3550 165B                                           l3198 1FBC  
                                         l3614 085E                                           l3606 084D  
                                         l3630 1140                                           l3390 0B8B  
                                         l3294 0A82                                           l3702 126C  
                                         l4318 0725                                           l4254 0607  
                                         l4174 03D5                                           l4094 0200  
                                         l4086 01EE                                           l3528 1779  
                                         l3640 1152                                           l3368 0B4C  
                                         l3720 129F                                           l3448 1377  
                                         l3464 1043                                           l4424 0EB9  
                                         l4416 0E6B                                           l3538 17C1  
                                         l3562 168F                                           l3570 16DA  
                                         l3554 1682                                           l3626 1139  
                                         l3394 0B8F                                           l3458 139F  
                                         l4274 0626                                           l4282 065A  
                                         l4290 06CC                                           l4098 0207  
                                         l3564 169E                                           l3652 116F  
                                         l3644 115E                                           l3812 00E6  
                                         l3820 00C8                                           l4356 07B6  
                                         l4364 07D5                                           l4276 0644  
                                         l4196 041D                                           l4188 040A  
                                         l4460 0FCA                                           l4436 0F09  
                                         l4524 080D                                           l3582 081C  
                                         l3638 1146                                           l3822 0104  
                                         l3910 0BDA                                           l3718 1291  
                                         l3494 15E1                                           l4294 06EA  
                                         l4198 0421                                           l4390 11FC  
                                         l4382 11F6                                           l4446 0F6A  
                                         l4454 0FA6                                           l4470 0FDB  
                                         ?_pad 0024                                           l3568 16CE  
                                         l3648 1167                                           l3752 0045  
                                         l3664 11BA                                           l3912 0BDC  
                                         l3728 12B0                                           l3496 15F2  
                                         l4384 11D2                                           l4464 0FD0  
                                         l3818 00FF                                           l3674 13D9  
                                         l3922 0BF2                                           l3914 0BE4  
                                         l4490 10A4                                           l3588 0827  
                                         l3844 0138                                           l3836 010A  
                                         l3772 0069                                           l3756 0048  
                                         l4492 10C1                                           l4652 144D  
                                         l3598 082F                                           l3838 0121  
                                         l3758 0050                                           l3678 13F3  
                                         l4646 1436                                           l3872 019C  
                                         l3848 013A                                           l3792 009F  
                                         l3776 006C                                           l4680 14AD  
                                         l4656 1451                                           l3858 0163  
                                         l3786 0093                                           l3698 1263  
                                         l4666 1486                                           l4658 1461  
                                         l4762 150A                                           l4746 14C8  
                                         l3892 0BB7                                           l4668 1479  
                                         l4748 14D3                                           l3982 0D52  
                                         l3974 0D24                                           l3894 0BB9  
                                         l3976 0D3B                                           l3896 0BC1  
                                         l3986 0D54                                           l3996 0D7D  
                                         STR_1 185C                                           STR_2 182D  
                                         STR_3 1800                                           STR_4 183D  
                                         STR_5 184D                                           STR_6 181A  
                                         STR_7 1869                                           STR_8 1871  
                                         _LATA 0016                                           _LATB 0017  
                                         _LATC 0018                                           u3300 0A66  
                                         u4005 17AE                                           u4105 16BC  
                                         u3145 1124                                           u3170 1FA3  
                                         _T2PR 028D                                           u3180 1FA4  
                                         u4205 0846                                           u3413 0ADB  
                                         u3405 0ABD                                           u4215 084E  
                                         u3335 0A87                                           u4305 115F  
                                         u3290 0A65                                           u5035 0D6B  
                                         u5125 08BB                                           u5045 0D86  
                                         u3285 0A5B                                           u6005 1480  
                                         u5070 087F                                           u4175 0832  
                                         u5055 0D9C                                           u3455 0B2E  
                                         u5080 0880                                           u3800 1069  
                                         u5320 0293                                           u3705 134D  
                                         u5330 0294                                           _T6PR 0299  
                                         u5155 097F                                           u4195 083C  
                                         u4275 1149                                           u4355 11B6  
                                         u3635 1FF2                                           u3555 0B66  
                                         u4435 1275                                           _PMD0 0796  
                                         u3725 1366                                           u5405 03CA  
                                         u6045 149A                                           _PMD1 0797  
                                         _PMD2 0798                                           u5175 08FB  
                                         u4295 1158                                           u4615 00D0  
                                         u6135 154D                                           _PMD3 0799  
                                         u3760 1397                                           u5280 023B  
                                         _PMD4 079A                                           u5185 0907  
                                         u4705 0116                                           u4625 00D7  
                                         u4465 1292                                           u3825 157A  
                                         _PMD5 079B                                           u3770 1398  
                                         u3850 15A8                                           u5290 023C  
                                         u3675 122E                                           u3755 1389  
                                         u3915 1614                                           u3835 1595  
                                         u5515 0459                                           u5435 03EC  
                                         u6147 14C1                                           u4645 00E0  
                                         u5445 0406                                           u6157 1F45  
                                         u3790 1068                                           u3695 1F86  
                                         u4655 00F4                                           u4495 12A7  
                                         u3855 15A4                                           u6167 1F30  
                                         u5720 07A6                                           u4905 0C97  
                                         u5705 076F                                           u3970 1769  
                                         u5730 07A7                                           u4915 0CED  
                                         u3875 15CD                                           u5635 06DA  
                                         u4685 010D                                           u4925 0D04  
                                         u5645 06E8                                           u4775 0151  
                                         u4935 0D13                                           u3895 15FB  
                                         u4785 016C                                           u4945 0D27  
                                         u4795 0185                                           u4965 0D30  
                                         u5870 0F49                                           u4895 0C68  
                                         u5880 0F4A                                           u5965 145A  
                                         u5985 146E                                           _TMR2 028C  
                                         _TMR6 0298                                           _WPUA 0F39  
                                         _WPUB 0F44                                           _WPUC 0F4F  
                                         _WPUE 0F65                                   __CFG_WRT$OFF 0000  
                                __CFG_FCMEN$ON 0000                                           _Stop 1EBE  
                                         abs@a 0073                                           _echo 12BF  
                                         _dbuf 01A0                                           _main 14B6  
                                         _dtoa 0863                                           _prec 0146  
                                         _nout 0142                                           pad@i 0028  
                                         pad@p 0025                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           pad@w 002A  
                                         btemp 007E                                  __CFG_BOREN$ON 0000  
                                ___fpclassifyf 132C                                           start 0002  
                              ___fldiv@new_exp 0025                                   _tolower$1824 007C  
                                __CFG_CSWEN$ON 0000                                  __CFG_MCLRE$ON 0000  
                              __end_of_Forward 1EAC                                          ??_abs 0075  
                                        ??_pad 0027                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 1EEC  
                                        ?_Stop 0070                                          ?_echo 0126  
                                ___fltol@sign1 0079                                __end_of___aodiv 1800  
                              __end_of___fladd 0B9D                                          ?_main 0070  
                                        ?_dtoa 0030                                __end_of___aomod 170D  
                              __end_of___fldiv 01A5                                __end_of___awdiv 0863  
                              __end_of___flneg 1EE3                                          STR_11 186D  
                                        STR_12 1875                                          STR_15 1879  
                                        STR_17 1879                                  __CFG_WDTE$OFF 0000  
                              __end_of___awmod 1174                                __end_of___flmul 0DC9  
                              __end_of___flsub 103A                                __end_of___fltol 12BF  
                                        _T1CLK 0211                                ___awdiv@divisor 0070  
                                        _T1CON 020E                                          _T2CON 028E  
                                        _T2HLT 028F                                          _T6CON 029A  
                               __CFG_DEBUG$OFF 0000                                          _T6HLT 029B  
                                        _T2TMR 028C                                          _T2RST 0291  
                                        _T6TMR 0298                                          _T6RST 029D  
                              ___awdiv@counter 0075                                          _OSCEN 0891  
                                 vfpfcnvrt@fmt 005D                                          _TMR1H 020D  
                                        _TMR1L 020C                                          _TRISA 0011  
                                        _TRISB 0012                                          _TRISC 0013  
                                        _RXPPS 0ECB                                          _Right 1F3C  
                                        _flags 0148                                          _fputc 10FA  
                                        _fputs 0005                                          pad@fp 002C  
                                        _width 0144                                          _putch 1E9C  
                                        dtoa@d 0030                                          dtoa@i 004C  
                                        dtoa@n 0044                                          dtoa@p 003D  
                                        dtoa@s 0042                                          dtoa@w 0040  
                      __end_of_TMR1_Initialize 1F7D                                __end_of_isupper 1FAB  
                                        status 0003                                          wtemp0 007E  
                               ?___fpclassifyf 0070                                __end_of_tolower 107A  
                              __end_of_strncmp 120A                                _TMR1_WriteTimer 0803  
                         _CLC1_OutputStatusGet 1EA1                             __size_of_Backwards 0015  
                              _PWM7_Initialize 1EEC                                __initialization 07EC  
                                 __end_of_Stop 1EC4                                   __end_of_echo 132C  
                                 __end_of_main 1559                                   __end_of_dtoa 09B4  
                               ??_EUSART_Write 0070                        __end_of_TMR2_Initialize 1F14  
                                       ??_Stop 0070                                         ??_echo 012A  
                                       ??_main 0132                                         ??_dtoa 0038  
                              _TMR6_Initialize 1EF7                                         ?_Right 0070  
            _EUSART_DefaultFramingErrorHandler 0000                     _EUSART_OverrunErrorHandler 014C  
                                       ?_fputc 0072                                         ?_fputs 007A  
                             ___awdiv@dividend 0072                                         _ANSELA 0F38  
                                       ?_putch 0070                                         _ANSELB 0F43  
                                       _ANSELC 0F4E                             __CFG_RSTOSC$HFINT1 0000  
                                       _T1GATE 0210                                         _T1GCON 020F  
                                       _T1GPPS 0E93                                         _RC1REG 0119  
                                       _RC0PPS 0F20                                         _RC1STA 011D  
                      TMR1_WriteTimer@timerVal 0070                                         _RC4PPS 0F24  
                                       _ODCONA 0F3A                                         _ODCONB 0F45  
                                       _ODCONC 0F50                                 __CFG_WDTCCS$SC 0000  
                                       _OSCFRQ 0893                                         u405lld 1659  
                                       _TX1REG 011A                                         _TX1STA 011E  
                                       u394lld 1735                               __end_of___xxtofl 14B6  
                        ?_CLC1_OutputStatusGet 0070                                      ??_Forward 0070  
                               __CFG_PWRTE$OFF 0000                                   _CCPTMRS1bits 021F  
                                 vfprintf@cfmt 006B                                         ___flge 13A4  
                                       ___fleq 1174                                      ??___aodiv 0070  
                                    ??___fladd 0020                                      ??___aomod 0070  
                                    ??___fldiv 0078                                      ??___awdiv 0074  
                                    ??___flneg 0074                                 __CFG_STVREN$ON 0000  
                                    ??___awmod 0074                                      ??___flmul 0036  
                                    ??___flsub 007C                                      ??___fltol 0074  
                                       _efgtoa 01A5                                         _floorf 1559  
                             ___awdiv@quotient 0077                                ___awmod@divisor 0070  
                              ___awmod@counter 0075                                         _printf 1F51  
                                       pad@buf 0024                                         dtoa@fp 003F  
                                       _strcpy 103A                                         _strlen 1FAB  
                                       fputc@c 0072                                 _PMD_Initialize 1ED2  
                                       fputs@c 0020                                         fputs@i 0021  
                                       fputs@s 0023                             __size_of__Umul8_16 001F  
                              ___fpclassifyf@e 0020                              __end_of_Backwards 1F3C  
                              ___fpclassifyf@u 0022                                ___fpclassifyf@x 0070  
                                    ??_isupper 0072                               __end_of_vfprintf 10CA  
                              _CLC1_Initialize 1F14                                      ??_tolower 0078  
                      __end_of_TMR1_WriteTimer 0812                                      ??_strncmp 0074  
                                   ___flge@ff1 0048                                     ___flge@ff2 004C  
                              ??___fpclassifyf 0074                               ?_TMR1_Initialize 0070  
                      __end_of_PWM7_Initialize 1EF7                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 1000  
                                 ___xxtofl@val 0020                                     ___fleq@ff1 0070  
                                   ___fleq@ff2 0074                        __end_of__initialization 07FD  
                                   ___flneg@f1 0070                             ?_SYSTEM_Initialize 0070  
                                   ___fltol@f1 0070                                 __pcstackCOMMON 0070  
                                __end_of_Right 1F51                            ??_SYSTEM_Initialize 0072  
                                __end_of_fputc 112F                                  __end_of_fputs 002B  
                                __end_of_putch 1EA1                               ?_TMR2_Initialize 0070  
                      __end_of_TMR6_Initialize 1F05                         __end_of_PMD_Initialize 1EDA  
                      __size_of_TMR1_ReadTimer 001E                                        ??_Right 006E  
              ??_EUSART_SetOverrunErrorHandler 0072                                        ??_fputc 0075  
                    __end_of_SYSTEM_Initialize 101B                                        ??_fputs 007B  
                                      ??_putch 0071                                     __pbssBANK0 006F  
                                   __pbssBANK2 013A                                     __pbssBANK3 01A0  
                         __end_of_EUSART_Write 1ED2                         ??_CLC1_OutputStatusGet 0070  
                            __end_of__Umul8_16 2000                                     __pmaintext 14B6  
                                      ?___flge 0048                                        ?___fleq 0070  
                              __CFG_PPS1WAY$ON 0000                                        ?_efgtoa 0054  
                                      ?_floorf 002D                                        _CLC1CON 0E10  
                                      _CLC1POL 0E11                                        ?_printf 0120  
                              ?_PMD_Initialize 0070                                        ?_strcpy 0070  
                                      ?_strlen 0070                        __end_of_CLC1_Initialize 1F27  
                                    ?___xxtofl 0020                                        _SP1BRGH 011C  
                                      _SP1BRGL 011B                                        _OSCCON1 088D  
                                      _OSCCON3 088F                             __size_of_vfpfcnvrt 0237  
                                      _OSCTUNE 0892                                        _TMR1GIF 3888  
                                      _PWM7DCH 0391                                        _PWM7DCL 0390  
                                      _PWM7CON 0392                                        _SLRCONA 0F3B  
                                      _SLRCONB 0F46                                        _SLRCONC 0F51  
                     ??_EUSART_SetErrorHandler 0072                               ?_TMR1_WriteTimer 0070  
                             ?_PWM7_Initialize 0070                                        _Forward 1EA6  
                         __CFG_SCANE$available 0000                                __size_of___flge 007C  
                              __size_of___fleq 0048                                        ___aodiv 170D  
                                      ___fladd 09B4                                        ___aomod 1631  
                                      ___fldiv 002B                                        ___awdiv 0812  
                                      ___flneg 1EDA                                        ___awmod 112F  
                                      ___flmul 0B9D                                        ___flsub 101B  
                                      ___fltol 125A                                      ?_vfprintf 0065  
                              __size_of_efgtoa 0647                                __size_of_floorf 00D8  
                             ?_TMR6_Initialize 0070                       TMR1_ReadTimer@readValLow 007A  
                                      __ptext1 12BF                                        __ptext2 1420  
                                      __ptext3 0803                                        __ptext4 0800  
                                      __ptext5 1FC3                                        __ptext6 1EBE  
                                      __ptext7 1000                                        __ptext8 1EF7  
                                      __ptext9 1F05                                __size_of_printf 0016  
                    TMR1_ReadTimer@readValHigh 0079                                __size_of_strcpy 001F  
                              __size_of_strlen 0018                                      _T1CONbits 020E  
                        _OSCILLATOR_Initialize 1EE3                                      _T2CONbits 028E  
                                 __size_of_abs 0017                                   __size_of_pad 0050  
                                   ??___xxtofl 0024                               ___awmod@dividend 0072  
                     ??_PIN_MANAGER_Initialize 0070                                      _T2HLTbits 028F  
                                      _isupper 1F94                                        efgtoa@c 0058  
                                      efgtoa@d 00B8                                        efgtoa@e 00D1  
                                      efgtoa@f 0054                                        efgtoa@g 00CD  
                                      efgtoa@h 00C3                                        efgtoa@i 00CB  
                                      efgtoa@l 00C7                                        efgtoa@m 00B4  
                                      efgtoa@n 00D3                                        efgtoa@p 00BC  
                                      efgtoa@t 00B0                                        efgtoa@u 00D5  
                                      efgtoa@w 00C0                                      _T6CONbits 029A  
                                    _T6HLTbits 029B                     __size_of_SYSTEM_Initialize 001B  
                                      _tolower 1059                                        clrloop0 1EC5  
                                      _strncmp 11BC                           end_of_initialization 07FD  
                                      floorf@e 003B                                      _T2RSTbits 0291  
                                      floorf@m 0037                                        floorf@u 003D  
                                      floorf@x 002D          __end_of_EUSART_SetOverrunErrorHandler 1EBE  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 1EB8  
                                      fputc@fp 0074                                        fputs@fp 007A  
                                    _T6RSTbits 029D                              _EUSART_Initialize 107A  
                           ?_EUSART_Initialize 0070                              __end_of_vfpfcnvrt 1000  
                                   efgtoa@mode 00C2                                     efgtoa@sign 00BA  
                                   ??_vfprintf 0068                          __CFG_WDTCPS$WDTCPS_31 0000  
                                      strcpy@d 0076                                        strlen@a 0073  
                                      strcpy@s 0074                                        strlen@s 0074  
                          ??_EUSART_Initialize 0072                               ?_CLC1_Initialize 0070  
                                  ___fladd@grs 007B                                 _TMR1_ReadTimer 1FC3  
                                ___xxtofl@sign 0028                          __size_of_EUSART_Write 0008  
                                  ___fldiv@grs 0027                                    ___fldiv@rem 0020  
                             __CFG_FEXTOSC$OFF 0000                                      _Backwards 1F27  
              __size_of_EUSART_SetErrorHandler 0006                                    ___flmul@grs 003C  
                    __end_of_EUSART_Initialize 109B                                    _CLC1CONbits 0E10  
                               __end_of___flge 1420                                 __end_of___fleq 11BC  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 005E  
                                  vfpfcnvrt@ct 00E7                                    vfpfcnvrt@fp 00EB  
                                  vfpfcnvrt@ll 00D9                                 __end_of_efgtoa 07EC  
                                 _EUSART_Write 1ECA                                 __end_of_floorf 1631  
                       ?_OSCILLATOR_Initialize 0070                         __end_of_TMR1_ReadTimer 1FE1  
                                   floorf@F524 013A                                 __end_of_printf 1F67  
                               __end_of_strcpy 1059                                 __end_of_strlen 1FC3  
                          start_initialization 07EC                __size_of_PIN_MANAGER_Initialize 0030  
                                  __end_of_abs 1F94                                    __end_of_pad 125A  
                                   ?_Backwards 0070                                    putch@txData 0071  
                        __end_of___fpclassifyf 13A4                 ?_EUSART_SetOverrunErrorHandler 0070  
                             __CFG_LPBOREN$OFF 0000                       __size_of_TMR1_Initialize 0016  
                                  vfprintf@fmt 0065                     _EUSART_FramingErrorHandler 014E  
                                     ??___flge 0050                                       ??___fleq 0078  
                             ??_PMD_Initialize 0070                         _EUSART_SetErrorHandler 1EAC  
                                     ??_efgtoa 0059                                      __Umul8_16 1FE1  
                                     ??_floorf 0031                                       ??_printf 006D  
     __end_of_TMR1_StartSinglePulseAcquisition 0803      __size_of_TMR1_StartSinglePulseAcquisition 0003  
           ??_TMR1_StartSinglePulseAcquisition 0070              ?_TMR1_StartSinglePulseAcquisition 0070  
             _TMR1_StartSinglePulseAcquisition 0800                                       ??_strcpy 0072  
                                     ??_strlen 0072                                ?_TMR1_ReadTimer 0070  
                                    ___fladd@a 0074                                      ___fladd@b 0070  
                                    ___fldiv@a 0070                                      ___fldiv@b 0074  
                                    ___flmul@a 0032                                      ___flmul@b 002E  
                                    ___flsub@a 0048                                      ___flsub@b 004C  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                             ___aodiv@dividend 0028                       __size_of_TMR2_Initialize 000F  
                            __size_of___xxtofl 0096                     __size_of_EUSART_Initialize 0021  
                __size_of_CLC1_OutputStatusGet 0005                                      __pnvBANK2 014A  
                                     ?_Forward 0070                                    _efgtoa$1411 00A4  
                                  _efgtoa$1420 00AA                                    _efgtoa$1412 00A6  
                                  _efgtoa$1421 00AC                                    _efgtoa$1422 00AE  
                                  _efgtoa$1416 00A8                         _PIN_MANAGER_Initialize 10CA  
                                    _dtoa$1387 003B                                       ?___aodiv 0020  
                                     ?___fladd 0070                                       ?___aomod 0020  
                                     ?___fldiv 0070                                       ?___awdiv 0070  
                             ___aodiv@quotient 0073                                       ?___flneg 0070  
                                     ?___awmod 0070                                       ?___flmul 002E  
                                     ?___flsub 0048                                       ?___fltol 0070  
                                   ?__Umul8_16 0070                              __size_of_vfprintf 002F  
                                     _BAUD1CON 011F                                       _CLC1GLS0 0E16  
                                     _CLC1GLS1 0E17                                       _CLC1GLS2 0E18  
                                     _CLC1GLS3 0E19                                       _CLC1SEL0 0E12  
                                     _CLC1SEL1 0E13                                       _CLC1SEL2 0E14  
                                     _CLC1SEL3 0E15                                       ?_isupper 0070  
                               __size_of_Right 0015                                       ?_tolower 0076  
                                     _T2AINPPS 0E9C                                    ??_Backwards 006E  
                               __size_of_fputc 0035                                       _T2CLKCON 0290  
                               __size_of_fputs 0026                                       ?_strncmp 0070  
                               __size_of_putch 0005                                       _T6AINPPS 0E9E  
                                     _T6CLKCON 029C                                       _LATAbits 0016  
       EUSART_SetErrorHandler@interruptHandler 0070                                       _LATBbits 0017  
                                     _LATCbits 0018                                      clear_ram0 1EC4  
                            _eusartRxLastError 006F                       __size_of_TMR1_WriteTimer 000F  
              ??_EUSART_SetFramingErrorHandler 0072                                       _PIR3bits 070F  
                                     _PIR4bits 0710                       __size_of_PWM7_Initialize 000B  
            _EUSART_DefaultOverrunErrorHandler 0000                                      _vfpfcnvrt 0DC9  
                            ??_TMR1_Initialize 0070                                      main@count 0138  
                     __size_of_TMR6_Initialize 000E                                     vfpfcnvrt@c 00EA  
                                   vfpfcnvrt@f 00E3                              ??_TMR2_Initialize 0070  
                             __size_of_Forward 0006                                     vfprintf@ap 0067  
                                   vfprintf@fp 006A                          TMR1_ReadTimer@readVal 0077  
                      ??_OSCILLATOR_Initialize 0070                                    ??__Umul8_16 0072  
                          _EUSART_ErrorHandler 014A                               __size_of___aodiv 00F3  
                             __size_of___fladd 01E9                               __size_of___aomod 00DC  
                             __size_of___fldiv 017A                               __size_of___awdiv 0051  
                             __size_of___flneg 0009                               __size_of___awmod 0045  
                             __size_of___flmul 022C                               __size_of___flsub 001F  
                             __size_of___fltol 0065                                     ?_vfpfcnvrt 005D  
                              ___aodiv@divisor 0020                                ___aodiv@counter 0071  
                           ___fpclassifyf@F463 013E                                       ___xxtofl 1420  
                                     __ptext10 1F67                                       __ptext11 1EEC  
                                     __ptext20 1F3C                                       __ptext12 1ED2  
                                     __ptext21 1EA6                                       __ptext13 10CA  
                                   _T1GCONbits 020F                                       __ptext30 1F94  
                                     __ptext22 1EA1                                       __ptext14 1EE3  
                                     __ptext31 103A                                       __ptext23 1F27  
                                     __ptext15 107A                                       __ptext40 13A4  
                                     __ptext32 1559                                       __ptext24 1F51  
                                     __ptext16 1EB8                                       __ptext41 1174  
                                     __ptext33 132C                                       __ptext25 109B  
                                     __ptext17 1EB2                                       __ptext50 1E9C  
                                     __ptext42 002B                                       __ptext34 125A  
                                     __ptext26 0DC9                                       __ptext18 1EAC  
                                     __ptext51 1ECA                                       __ptext43 112F  
                                     __ptext35 101B                                       __ptext27 11BC  
                                     __ptext19 1F14                                       __ptext52 1F7D  
                                     __ptext44 0812                                       __ptext36 09B4  
                                     __ptext28 01A5                                       __ptext53 1631  
                                     __ptext45 0863                                       __ptext37 1EDA  
                                     __ptext29 1059                                       __ptext54 170D  
                                     __ptext46 120A                                       __ptext38 0B9D  
                                     __ptext47 1FAB                                       __ptext39 1FE1  
                                     __ptext48 0005                                       __ptext49 10FA  
                             __size_of_isupper 0017                       __size_of_CLC1_Initialize 0013  
                             __size_of_tolower 0021                                     strcpy@dest 0077  
                             __size_of_strncmp 004E                                       echo@look 012E  
                                __size_of_Stop 0006                                  __size_of_echo 006D  
                                __size_of_main 00A3                                  __size_of_dtoa 0151  
                         __CFG_WDTCWS$WDTCWS_7 0000                        ?_EUSART_SetErrorHandler 0070  
                                   _RC1STAbits 011D                                       efgtoa@fp 00BE  
                                     efgtoa@ne 00B6                                       efgtoa@pp 00B2  
                                     efgtoa@ou 00A0  EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                             ??_TMR1_ReadTimer 0072                                       _vfprintf 109B  
                                    printf@fmt 0120          __end_of_EUSART_SetFramingErrorHandler 1EB8  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 1EB2  
                            ??_TMR1_WriteTimer 0072                                       main@look 0134  
                            ??_PWM7_Initialize 0070                               ___aomod@dividend 0028  
                               _vfpfcnvrt$1440 00E1                                 __pstringtext10 1875  
                               __pstringtext11 1879                                 __pstringtext12 0000  
                      ?_PIN_MANAGER_Initialize 0070                              ??_TMR6_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 1EB2                              __CFG_CLKOUTEN$OFF 0000  
                                    strcpy@src 0070                                       isupper@c 0070  
                                    strncmp@_l 0075                                      strncmp@_r 0070  
                                  efgtoa@nmode 00BF                                       printf@ap 00EE  
EUSART_SetFramingErrorHandler@interruptHandler 0070                                ___aomod@divisor 0020  
                                  ??_vfpfcnvrt 005F                                ___aomod@counter 0071  
                                __pstringtext1 1800                                  __pstringtext2 181A  
                                __pstringtext3 182D                                  __pstringtext4 183D  
                                __pstringtext5 184D                                  __pstringtext6 185C  
                                __pstringtext7 1869                                  __pstringtext8 186D  
                                __pstringtext9 1871                   __end_of_CLC1_OutputStatusGet 1EA6  
                       __Umul8_16@multiplicand 0070                                       tolower@c 0076  
                       __size_of___fpclassifyf 0078                                       strncmp@l 0078  
                                     strncmp@n 0072                                       strncmp@r 0076  
                                   _TX1STAbits 011E                                  ___fladd@signs 0078  
                           EUSART_Write@txData 0070                                   ___aodiv@sign 0072  
               __end_of_PIN_MANAGER_Initialize 10FA                                   ___fladd@aexp 0079  
                                 ___fladd@bexp 007A                           __Umul8_16@multiplier 0078  
                                 ___aomod@sign 0072                                _TMR1_Initialize 1F67  
                            ??_CLC1_Initialize 0070                              __Umul8_16@product 0074  
